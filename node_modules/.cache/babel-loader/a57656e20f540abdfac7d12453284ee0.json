{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\components\\\\DataTables\\\\Orgs\\\\OrgTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useTable, useSortBy, useGlobalFilter, usePagination, useRowSelect } from 'react-table';\nimport Table from 'react-bootstrap/Table';\nimport axios from '../../../axios';\nimport { Link, withRouter, useHistory } from 'react-router-dom';\nimport { COLUMNS } from './columns';\nimport TableFilter from '../../UI/TableFilter/TableFilter';\nimport classes from './OrgTable.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport Checkbox from '../../UI/Checkbox/Checkbox';\nimport SmallButton from '../../UI/SmallButton/SmallButton'; //import {Link} from 'react-router-dom';\n\nconst OrgTable = () => {\n  _s();\n\n  const [orgs, setOrgs] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const history = useHistory(); // get data from api\n\n  useEffect(() => {\n    axios.get('/orgs').then(res => {\n      console.log(res.data.result.Items);\n      const pathToData = res.data.result.Items;\n      const loadedData = []; //push data object into an array of kvps\n\n      for (const Item in pathToData) {\n        loadedData.push({\n          // org info\n          description: pathToData[Item].description,\n          id: pathToData[Item].id,\n          itemId: pathToData[Item].itemId,\n          itemType: pathToData[Item].itemType,\n          city: pathToData[Item].address[0].city,\n          // // primary contact data\n          firstName: pathToData[Item].contact[0].firstName,\n          lastName: pathToData[Item].contact[0].lastName,\n          email: pathToData[Item].contact[0].email,\n          phone: pathToData[Item].contact[0].phone,\n          //full contact data\n          contact: pathToData[Item].contact,\n          // address\n          address: pathToData[Item].address,\n          // configuration params\n          configuration: pathToData[Item].configuration,\n          // timestamps\n          created: pathToData[Item].created,\n          updated: pathToData[Item].updated\n        });\n      } //console.log(loadedData);\n\n\n      setOrgs(loadedData);\n    });\n  }, []); // memoize data to ensure it is not duplicated on each render\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => orgs, [orgs]); // create table instance\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    prepareRow,\n    selectedFlatRows,\n    state,\n    setGlobalFilter\n  } = useTable({\n    columns: columns,\n    data: data\n  }, // add sorting, filtering, pagination and row select\n  useGlobalFilter, useSortBy, usePagination, useRowSelect, // add a column for checkbox to tables\n  hooks => {\n    hooks.visibleColumns.push(columns => {\n      return [{\n        id: 'selection',\n        Header: 'select',\n        Cell: ({\n          row\n        }) => /*#__PURE__*/_jsxDEV(Checkbox, { ...row.getToggleRowSelectedProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, ...columns];\n    });\n  }); // destructure global filter and page index from state object\n\n  const {\n    globalFilter,\n    pageIndex\n  } = state; // data from selected row is stored here\n\n  let selectedRow = selectedFlatRows;\n  console.log(selectedRow); // handle edit button click\n\n  const HandleEditRequest = () => {\n    // get properties to be passed to form and store in variable\n    const itemToEdit = selectedRow[0].original.itemId; // initialize query parameters array\n\n    const queryParams = []; // loop through itemToEdit, encode data, and push into queryParams as strings\n\n    queryParams.push(encodeURIComponent(\"itemId\") + '=' + encodeURIComponent(itemToEdit)); // join queryParams strings and store in variable\n\n    const queryString = queryParams.join('&'); // pass queryString data to EditTestForm via router\n\n    history.push({\n      pathname: '/edit-org',\n      search: '?' + queryString\n    });\n  };\n\n  const handleDeleteRequest = () => {\n    // get id of test to be deleted from selectedRow object\n    let itemToDelete = selectedRow[0].original.id; // make axios call, then reload page\n\n    axios.delete(`/orgs/${itemToDelete}`).then(response => {\n      console.log(response);\n      window.location.reload();\n    }).catch(error => alert(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolBarWrap,\n      children: [/*#__PURE__*/_jsxDEV(TableFilter, {\n        filter: globalFilter,\n        setFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: '/add-org'\n        },\n        children: /*#__PURE__*/_jsxDEV(SmallButton, {\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // render headers w/ sort functionality\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCaretUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 65\n              }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCaretDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 104\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return (\n            /*#__PURE__*/\n            // render table rows\n            _jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 26\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.pageButton,\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.pageNum,\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.pageButton,\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SmallButton, {\n      clicked: HandleEditRequest,\n      children: \"\\xA0\\xA0Edit\\xA0\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SmallButton, {\n      clicked: handleDeleteRequest,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrgTable, \"raJw+VKwbx5ts0BEN8014Dyt61E=\", false, function () {\n  return [useHistory, useTable];\n});\n\n_c = OrgTable;\nexport default _c2 = withRouter(OrgTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrgTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/components/DataTables/Orgs/OrgTable.js"],"names":["React","useMemo","useState","useEffect","useTable","useSortBy","useGlobalFilter","usePagination","useRowSelect","Table","axios","Link","withRouter","useHistory","COLUMNS","TableFilter","classes","FontAwesomeIcon","faCaretUp","faCaretDown","Checkbox","SmallButton","OrgTable","orgs","setOrgs","loaded","setLoaded","history","get","then","res","console","log","data","result","Items","pathToData","loadedData","Item","push","description","id","itemId","itemType","city","address","firstName","contact","lastName","email","phone","configuration","created","updated","columns","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","prepareRow","selectedFlatRows","state","setGlobalFilter","hooks","visibleColumns","Header","Cell","row","getToggleRowSelectedProps","globalFilter","pageIndex","selectedRow","HandleEditRequest","itemToEdit","original","queryParams","encodeURIComponent","queryString","join","pathname","search","handleDeleteRequest","itemToDelete","delete","response","window","location","reload","catch","error","alert","toolBarWrap","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","pageButton","pageNum","length"],"mappings":"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","sourcesContent":["import React, {useMemo, useState, useEffect} from 'react';\r\nimport {\r\n  useTable, \r\n  useSortBy, \r\n  useGlobalFilter, \r\n  usePagination,\r\n  useRowSelect\r\n} from 'react-table';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from '../../../axios';\r\nimport {Link, withRouter, useHistory} from 'react-router-dom';\r\n\r\nimport {COLUMNS} from './columns';\r\n\r\nimport TableFilter from '../../UI/TableFilter/TableFilter';\r\n\r\nimport classes from './OrgTable.module.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCaretUp} from '@fortawesome/free-solid-svg-icons';\r\nimport {faCaretDown} from '@fortawesome/free-solid-svg-icons';\r\nimport Checkbox from '../../UI/Checkbox/Checkbox';\r\nimport SmallButton from '../../UI/SmallButton/SmallButton';\r\n//import {Link} from 'react-router-dom';\r\n\r\nconst OrgTable = () => {\r\n  const [orgs, setOrgs] = useState([])\r\n  const [loaded, setLoaded] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // get data from api\r\n  useEffect(() => {\r\n    axios.get('/orgs').then(res => {\r\n      console.log(res.data.result.Items);\r\n      const pathToData = res.data.result.Items\r\n      const loadedData = [];\r\n      \r\n      //push data object into an array of kvps\r\n      for (const Item in pathToData) {\r\n        loadedData.push({\r\n          // org info\r\n          description: pathToData[Item].description,\r\n          id: pathToData[Item].id,\r\n          itemId: pathToData[Item].itemId,\r\n          itemType: pathToData[Item].itemType,\r\n          city: pathToData[Item].address[0].city,\r\n          // // primary contact data\r\n          firstName: pathToData[Item].contact[0].firstName,\r\n          lastName: pathToData[Item].contact[0].lastName,\r\n          email: pathToData[Item].contact[0].email,\r\n          phone: pathToData[Item].contact[0].phone,\r\n          //full contact data\r\n          contact: pathToData[Item].contact,\r\n          // address\r\n          address: pathToData[Item].address,\r\n          // configuration params\r\n          configuration: pathToData[Item].configuration,\r\n          // timestamps\r\n          created: pathToData[Item].created,\r\n          updated: pathToData[Item].updated\r\n        });\r\n      }\r\n      //console.log(loadedData);\r\n      setOrgs(loadedData);\r\n    });\r\n  \r\n  }, []);\r\n\r\n  // memoize data to ensure it is not duplicated on each render\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => orgs, [orgs]);\r\n\r\n  // create table instance\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    prepareRow,\r\n    selectedFlatRows,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns: columns,\r\n      data: data\r\n    },\r\n    // add sorting, filtering, pagination and row select\r\n    useGlobalFilter,  useSortBy, usePagination, useRowSelect,\r\n    // add a column for checkbox to tables\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: 'selection',\r\n            Header: 'select',\r\n            Cell: ({row}) => (\r\n              <Checkbox {...row.getToggleRowSelectedProps()} />\r\n            )\r\n          },\r\n          ...columns\r\n        ]\r\n      });\r\n    }\r\n  );\r\n\r\n  // destructure global filter and page index from state object\r\n  const {globalFilter, pageIndex} =  state;\r\n\r\n  // data from selected row is stored here\r\n  let selectedRow = selectedFlatRows\r\n  console.log(selectedRow);\r\n\r\n  // handle edit button click\r\n  const HandleEditRequest = () => {\r\n    // get properties to be passed to form and store in variable\r\n    const itemToEdit = selectedRow[0].original.itemId\r\n    // initialize query parameters array\r\n    const queryParams = [];\r\n\r\n    // loop through itemToEdit, encode data, and push into queryParams as strings\r\n      queryParams.push(encodeURIComponent(\"itemId\") + '=' + encodeURIComponent(itemToEdit));\r\n    // join queryParams strings and store in variable\r\n    const queryString = queryParams.join('&');\r\n\r\n    // pass queryString data to EditTestForm via router\r\n    history.push({\r\n      pathname: '/edit-org',\r\n      search: '?' + queryString\r\n    });\r\n  }\r\n\r\n  const handleDeleteRequest = () => {\r\n    // get id of test to be deleted from selectedRow object\r\n    let itemToDelete = selectedRow[0].original.id\r\n    \r\n    // make axios call, then reload page\r\n    axios.delete(`/orgs/${itemToDelete}`)\r\n         .then(response => {\r\n          console.log(response);\r\n          window.location.reload();\r\n         })\r\n         .catch(error => alert(error));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* render filter field, with globalFilter and setGlobalFilter passed as props */}\r\n      <div className={classes.toolBarWrap}>\r\n        {/* render filter field, with globalFilter and setGlobalFilter passed as props */}\r\n        <TableFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n        <Link to={{pathname: '/add-org'}}><SmallButton>Add New</SmallButton></Link>\r\n      </div>\r\n\r\n      {/* render table */}\r\n      <Table {...getTableProps()} striped bordered hover>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  // render headers w/ sort functionality\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>  \r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted ? (column.isSortedDesc ? <FontAwesomeIcon icon={faCaretUp} /> : <FontAwesomeIcon icon={faCaretDown} />) : ''}\r\n                    </span>\r\n                  </th>\r\n                ))} \r\n              </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              // render table rows\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div>\r\n        {/* render pagination buttons */}\r\n        <button\r\n          className={classes.pageButton} \r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >Previous</button>\r\n        <span className={classes.pageNum}>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>\r\n        </span>\r\n        <button\r\n          className={classes.pageButton} \r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >Next</button>\r\n      </div>\r\n      <br/>\r\n      <SmallButton clicked={HandleEditRequest}>&nbsp;&nbsp;Edit&nbsp;&nbsp;</SmallButton>\r\n      <SmallButton clicked={handleDeleteRequest}>Delete</SmallButton>\r\n    </> \r\n  );\r\n}\r\nexport default withRouter(OrgTable);"]},"metadata":{},"sourceType":"module"}