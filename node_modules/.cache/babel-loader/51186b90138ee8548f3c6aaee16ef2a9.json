{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\containers\\\\OrgForm\\\\OrgForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from '../../axios';\nimport classes from './OrgForm.module.css';\nimport RadioButton from '../../components/Form Inputs/RadioButton/RadioButton';\nimport Heading2 from '../../components/Form Inputs/Heading2/Heading2';\nimport Accordion from '../../components/Accordion/Accordion';\nimport Accordion2 from '../../components/Accordion/Accordion2';\nimport Accordion3 from '../../components/Accordion/Accordion3';\nimport Accordion4 from '../../components/Accordion/Accordion4';\nimport Accordion5 from '../../components/Accordion/Accodion5';\nimport { faVuejs } from '@fortawesome/free-brands-svg-icons';\n\nclass OrgForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: true,\n      isOpen2: false,\n      isOpen3: false,\n      isOpen4: false,\n      isOpen5: false\n    };\n\n    this.onChange = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n\n    this.onChange2 = isOpen2 => {\n      this.setState({\n        isOpen2\n      });\n    };\n\n    this.onChange3 = isOpen3 => {\n      this.setState({\n        isOpen3\n      });\n    };\n\n    this.onChange4 = isOpen4 => {\n      this.setState({\n        isOpen4\n      });\n    };\n\n    this.onChange5 = isOpen5 => {\n      this.setState({\n        isOpen5\n      });\n    };\n\n    this.state = {\n      description: '',\n      id: '',\n      contact: null,\n      address: null,\n      configuration: null,\n      typeofaddress2: '',\n      street2: '',\n      city2: '',\n      statea2: '',\n      zipcode2: '',\n      country2: '',\n      typeofcontact2: '',\n      fname2: '',\n      lname2: '',\n      phone2: '',\n      email2: ''\n    };\n    let RadioVal = null;\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleOrgIDChange = this.handleOrgIDChange.bind(this); // this.handleTofAChange = this.handleTofAChange.bind(this);\n    // this.handleStrChange = this.handleStrChange.bind(this);\n    // this.handleCityChange = this.handleCityChange.bind(this);\n    // this.handleStateChange = this.handleStateChange.bind(this);\n    // this.handleZipChange = this.handleZipChange.bind(this);\n    // this.handleCountryChange = this.handleCountryChange.bind(this);\n\n    this.handleToA2Change = this.handleToA2Change.bind(this);\n    this.handleStr2Change = this.handleStr2Change.bind(this);\n    this.handleCity2Change = this.handleCity2Change.bind(this);\n    this.handleState2Change = this.handleState2Change.bind(this);\n    this.handleZip2Change = this.handleZip2Change.bind(this);\n    this.handleCountry2Change = this.handleCountry2Change.bind(this); // this.handleTofCChange = this.handleTofCChange.bind(this);\n    // this.handleFnameChange = this.handleFnameChange.bind(this);\n    // this.handleLnameChange = this.handleLnameChange.bind(this);\n    // this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    // this.handleEmailChange = this.handleEmailChange.bind(this);\n\n    this.handleTofC2Change = this.handleTofC2Change.bind(this);\n    this.handleFname2Change = this.handleFname2Change.bind(this);\n    this.handleLname2Change = this.handleLname2Change.bind(this);\n    this.handlePhone2Change = this.handlePhone2Change.bind(this);\n    this.handleEmail2Change = this.handleEmail2Change.bind(this); // this.handleImageCYChange = this.handleImageCYChange.bind(this);\n    // this.handleImageCNChange = this.handleImageCNChange.bind(this);\n    // this.handleAnomDChange = this.handleAnomDChange.bind(this);\n    // this.handleSmoothChange = this.handleSmoothChange.bind(this);\n    // this.handleFrameIChange = this.handleFrameIChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCChange = this.handleCChange.bind(this);\n    this.handleAChange = this.handleAChange.bind(this); // this.handleRadiobtn = this.handleRadiobtn.bind(this);\n    // this.handleConfigChange = this.handleConfigChange.bind(this);\n  } // whenever a change is made to an input field, update the corresponding state property\n\n\n  handleNameChange(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  handleOrgIDChange(event) {\n    this.setState({\n      id: event.target.value\n    });\n  } // handleTofAChange(event) {\n  //   this.setState({ address: {...this.state.address, type: event.target.value}});\n  // }\n  // handleStrChange(event) {\n  //   this.setState({ address: {...this.state.address, street: event.target.value}});\n  // }\n  // handleCityChange(event) {\n  //   this.setState({ address: {...this.state.address, city: event.target.value}});\n  // }\n  // handleStateChange(event) {\n  //   this.setState({ address: {...this.state.address, state: event.target.value}});\n  // }\n  // handleZipChange(event) {\n  //   this.setState({ address: {...this.state.address, zip: event.target.value}});\n  // }\n  // handleCountryChange(event) {\n  //   this.setState({ address: {...this.state.address, country: event.target.value}});\n  // }\n\n\n  handleToA2Change(event) {\n    this.setState({\n      typeofaddress2: event.target.value\n    });\n  }\n\n  handleStr2Change(event) {\n    this.setState({\n      street2: event.target.value\n    });\n  }\n\n  handleCity2Change(event) {\n    this.setState({\n      city2: event.target.value\n    });\n  }\n\n  handleState2Change(event) {\n    this.setState({\n      statea2: event.target.value\n    });\n  }\n\n  handleZip2Change(event) {\n    this.setState({\n      zipcode2: event.target.value\n    });\n  }\n\n  handleCountry2Change(event) {\n    this.setState({\n      country2: event.target.value\n    });\n  }\n\n  handleAChange() {\n    let typea = document.getElementById(\"addresstype\");\n    let streeta = document.getElementById(\"street\");\n    let citya = document.getElementById(\"city\");\n    let statea = document.getElementById(\"state\");\n    let zipa = document.getElementById(\"zip\");\n    let countrya = document.getElementById(\"country\");\n    this.setState({\n      \"address\": [{\n        \"zip\": zipa.value,\n        \"country\": countrya.value,\n        \"state\": statea.value,\n        \"type\": typea.value,\n        \"city\": citya.value,\n        \"street\": streeta.value\n      }]\n    });\n  }\n\n  handleCChange() {\n    let fnamec = document.getElementById(\"fname\");\n    let lnamec = document.getElementById(\"lname\");\n    let typec = document.getElementById(\"contacttype\");\n    let phonec = document.getElementById(\"phone\");\n    let emailc = document.getElementById(\"email\");\n    this.setState({\n      \"contact\": [{\n        \"firstName\": fnamec.value,\n        \"lastName\": lnamec.value,\n        \"type\": typec.value,\n        \"phone\": phonec.value,\n        \"email\": emailc.value\n      }]\n    });\n  } // handleRadiobtn() {\n  //   let RadioNo = document.getElementById(\"RadioBtn\")\n  //   let RadioYes = document.getElementById(\"RadioBtn2\")\n  //   if (RadioNo.checked) {\n  //     this.RadioVal = \"false\"\n  //   }\n  //   if (RadioYes.checked) {\n  //     this.RadioVal = \"true\"\n  //   }\n  // }\n  // handleConfigChange() {\n  //   let smoothingf = document.getElementById(\"smoothingframe\")\n  //   let anomalyd = document.getElementById(\"anomalyduration\")\n  //   let framei = document.getElementById(\"frameinterval\")\n  //   this.setState({ \n  //     configuration: {\n  //       Registration: {\n  //         imageCapture: this.RadioVal},\n  //       postProcess: {\n  //         anomalyDuration: anomalyd.value,\n  //         smoothingFrame: smoothingf.value,\n  //         frameInterval: framei.value,}\n  //     }\n  //   })\n  // }\n  // handleTofCChange(event) {\n  //   this.setState({ contact: {...this.state.contact, type: event.target.value}});\n  // }\n  // handleFnameChange(event) {\n  //   this.setState({ contact: {...this.state.contact, firstName: event.target.value}});\n  // }\n  // handleLnameChange(event) {\n  //   this.setState({ contact: {...this.state.contact, lastName: event.target.value}});\n  // }\n  // handlePhoneChange(event) {\n  //   this.setState({ contact: {...this.state.contact, phone: event.target.value}});\n  // }\n  // handleEmailChange(event) {\n  //   this.setState({ contact: {...this.state.contact, email: event.target.value}});\n  //}\n\n\n  handleTofC2Change(event) {\n    this.setState({\n      typeofcontact2: event.target.value\n    });\n  }\n\n  handleFname2Change(event) {\n    this.setState({\n      fname2: event.target.value\n    });\n  }\n\n  handleLname2Change(event) {\n    this.setState({\n      lname2: event.target.value\n    });\n  }\n\n  handlePhone2Change(event) {\n    this.setState({\n      phone2: event.target.value\n    });\n  }\n\n  handleEmail2Change(event) {\n    this.setState({\n      email2: event.target.value\n    });\n  } // handleImageCYChange(event) {\n  //   this.setState({ configuration: {registration: {...this.state.configuration.registration, imageCapture: \"true\"}}});\n  // }\n  // handleImageCNChange(event) {\n  //   this.setState({ configuration: {registration: {...this.state.configuration.registration, imageCapture: \"false\"}}});\n  //}\n  // handleAnomDChange(event) {\n  //   this.setState({ configuration: {postProcess: {...this.state.configuration.postProcess, anomalyDuration: event.target.value}}});\n  // }\n  // handleFrameIChange(event) {\n  //   this.setState({ configuration: {postProcess: {...this.state.configuration.postProcess, frameInterval: event.target.value}}});\n  // }\n  // handleSmoothChange(event) {\n  //   this.setState({ configuration: {postProcess: {...this.state.configuration.postProcess, smoothingFrame: event.target.value}}});\n  // }\n\n\n  handleSubmit(event) {\n    event.preventDefault(); // prevent default submit action\n    // distribute data stored in state into new object\n\n    const Description = { ...this.state.description\n    };\n    const Contact = { ...this.state.contact\n    };\n    const Address = { ...this.state.address\n    };\n    const Config = { ...this.state.configuration\n    };\n    console.log(Description, Contact, Address, Config); //make api call to post data\n\n    axios.post('/orgs', Description, Contact, Address, Config).then(response => console.log(response)).catch(error => console.log(error)); //redirect to confirmation page\n\n    this.props.history.push('/add-test-confirmation');\n  }\n\n  render() {\n    const labelstyle = {\n      color: \"#3cB650\",\n      fontFamily: \"sans-serif\",\n      fontWeight: \"400\",\n      padding: \"20px\",\n      position: \"relative\",\n      textRendering: \"optimizeLegibility\",\n      display: \"inline-block\",\n      width: \"70%\"\n    };\n    const textbxstyle = {\n      width: \"70%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      boxSizing: \"border-box\",\n      display: \"inline-block\"\n    };\n    const textbxstyle2 = {\n      width: \"70%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      boxSizing: \"border-box\",\n      display: \"inline-block\"\n    };\n    const buttonstyle = {\n      backgroundColor: \"#4CAF50\",\n      border: \"none\",\n      color: \"white\",\n      padding: \"10px 22px\",\n      textAlign: \"center\",\n      textDecoration: \"none\",\n      display: \"inline-block\",\n      fontSize: \"16px\",\n      margin: \"4px 2px\",\n      cursor: \"pointer\",\n      borderRadius: \"30px\"\n    }; // const textbxstyle3 = {\n    //   width: \"90%\",\n    //   padding: \"12px 20px\",\n    //   margin: \"8px 0\",\n    //   border: \"1px solid #ccc\",\n    //   borderRadius: \"4px\",\n    //   boxSizing: \"border-box\",\n    //   display: \"inline-block\"\n    // }; \n    // const textbxstyle4 = {\n    //   width: \"40%\",\n    //   padding: \"12px 20px\",\n    //   margin: \"8px 0\",\n    //   border: \"1px solid #ccc\",\n    //   borderRadius: \"4px\",\n    //   boxSizing: \"border-box\",\n    //   display: \"inline-block\"\n    // }; \n\n    const {\n      isOpen\n    } = this.state;\n    const {\n      isOpen2\n    } = this.state;\n    const {\n      isOpen3\n    } = this.state;\n    const {\n      isOpen4\n    } = this.state;\n    const {\n      isOpen5\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsxDEV(Heading2, {\n          children: \"Add Organizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.wrapper,\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexChild,\n              children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell3,\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"orgname\",\n                      style: labelstyle,\n                      children: \"Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell4,\n                    style: {\n                      textAlign: \"left\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      // onBlur = {()=> this.ValidatorN()} \n                      // onChangeText={(text) => {this.setState({ name: text })}} \n                      style: textbxstyle2,\n                      type: \"text\",\n                      id: \"orgname\",\n                      name: \"orgname\",\n                      value: this.state.description,\n                      onChange: this.handleNameChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              isOpen: isOpen,\n              onChange: this.onChange,\n              label: \"Address\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"addresstype\",\n                        style: labelstyle,\n                        children: \"Type of Address (Primary/Billing/Technical):\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"addresstype\",\n                        name: \"addresstype\" //onChange={this.handleAChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 464,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"street\",\n                        style: labelstyle,\n                        children: \"Street:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 480,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"street\",\n                        name: \"street\" //onChange={this.handleAChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 489,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"city\",\n                        style: labelstyle,\n                        children: \"City:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"city\",\n                        name: \"city\" //value={this.state.address.city}\n                        //onChange={this.handleAChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"state\",\n                        style: labelstyle,\n                        children: \"State/Province:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"state\",\n                        name: \"state\" // value={this.state.address.state}\n                        //onChange={this.handleAChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 541,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"zip\",\n                        style: labelstyle,\n                        children: \"Zip Code:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 558,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.ValidatorZC()} \n                        style: textbxstyle2 // onChangeText={(text) => {this.setState({ zipcode: text })}} \n                        ,\n                        type: \"text\",\n                        id: \"zip\",\n                        name: \"zip\" // value={this.state.address.zip}\n                        //onChange={this.handleAChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 567,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"country\",\n                        style: labelstyle,\n                        children: \"Country:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 586,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.ValidatorCountry()} \n                        style: textbxstyle2 // onChangeText={(text) => {this.setState({ country: text })}}\n                        ,\n                        type: \"text\",\n                        id: \"country\",\n                        name: \"country\" // value={this.state.address.country}\n                        ,\n                        onChange: this.handleAChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Accordion4, {\n                isOpen4: isOpen4,\n                onChange: this.onChange4,\n                label: \"Add Additional Address\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell3,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"addresstype2\",\n                          style: labelstyle,\n                          children: \"Type of Address (Primary/Billing/Technical):\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 619,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 616,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell4,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          // onChangeText={(text) => {this.setState({ typeofaddress2: text })}} \n                          style: textbxstyle2,\n                          type: \"text\",\n                          id: \"addresstype2\",\n                          name: \"addresstype2\",\n                          value: this.state.typeofaddress2,\n                          onChange: this.handleToA2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 628,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 625,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell3,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"street2\",\n                          style: labelstyle,\n                          children: \"Street:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 643,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 640,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell4,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          style: textbxstyle2 // onChangeText={(text) => {this.setState({ street2: text })}}\n                          ,\n                          type: \"text\",\n                          id: \"street2\",\n                          name: \"street2\",\n                          value: this.state.street2,\n                          onChange: this.handleStr2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 652,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 649,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell3,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"city2\",\n                          style: labelstyle,\n                          children: \"City:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 666,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell4,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          style: textbxstyle2 // onChangeText={(text) => {this.setState({ city2: text })}} \n                          ,\n                          type: \"text\",\n                          id: \"city2\",\n                          name: \"city2\",\n                          value: this.state.city2,\n                          onChange: this.handleCity2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 675,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 672,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell3,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"state2\",\n                          style: labelstyle,\n                          children: \"State/Province:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 688,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 686,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell4,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          style: textbxstyle2 // onChangeText={(text) => {this.setState({ statea2: text })}} \n                          ,\n                          type: \"text\",\n                          id: \"state2\",\n                          name: \"state2\",\n                          value: this.state.statea2,\n                          onChange: this.handleState2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 697,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 694,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 685,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell3,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"zip2\",\n                          style: labelstyle,\n                          children: \"Zip Code:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 711,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 708,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell4,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          style: textbxstyle2 // onChangeText={(text) => {this.setState({ zipcode2: text })}} \n                          ,\n                          type: \"text\",\n                          id: \"zip2\",\n                          name: \"zip2\",\n                          value: this.state.zipcode2,\n                          onChange: this.handleZip2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 720,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 717,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell3,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"country2\",\n                          style: labelstyle,\n                          children: \"Country:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 734,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 731,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell4,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          // onChangeText={(text) => {this.setState({ country2: text })}} \n                          style: textbxstyle2,\n                          type: \"text\",\n                          id: \"country2\",\n                          name: \"country2\",\n                          value: this.state.country2,\n                          onChange: this.handleCountry2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 743,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 740,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Accordion2, {\n              isOpen2: isOpen2,\n              onChange: this.onChange2,\n              label: \"Contact\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"contacttype\",\n                        style: labelstyle,\n                        children: \"Type of Contact (Primary/Billing/Technical):\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 765,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.ValidatorTofC()} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"contacttype\",\n                        name: \"contacttype\" //onChange={this.handleCChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 774,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"fname\",\n                        style: labelstyle,\n                        children: \"First Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 792,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 789,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.Validatorfname()} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"fname\",\n                        name: \"fname\" //onChange={this.handleCChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 801,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 798,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 788,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"lname\",\n                        style: labelstyle,\n                        children: \"Last Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 819,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.Validatorlname()} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"lname\",\n                        name: \"lname\" //onChange={this.handleCChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 828,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 825,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"email\",\n                        style: labelstyle,\n                        children: \"Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 846,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 843,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.Validatoremail()} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"email\",\n                        name: \"email\" //onChange={this.handleCChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 855,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 852,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"phone\",\n                        style: labelstyle,\n                        children: \"Phone:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 873,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 870,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.Validatorphone()} \n                        // onChangeText={(text) => {this.setState({ phone: text })}} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"phone\",\n                        name: \"phone\",\n                        onChange: this.handleCChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 882,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 879,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 869,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Accordion5, {\n                isOpen5: isOpen5,\n                onChange: this.onChange5,\n                label: \"Add Additional Contact\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        id: classes.cell1,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"contacttype2\",\n                          style: labelstyle,\n                          children: \"Type of Contact (Primary/Billing/Technical):\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 905,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 902,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell2,\n                        style: {\n                          textAlign: \"left\",\n                          width: \"30%\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          // onChangeText={(text) => {this.setState({ typeofcontact2: text })}} \n                          style: textbxstyle,\n                          type: \"text\",\n                          id: \"contacttype2\",\n                          name: \"contacttype2\",\n                          value: this.state.typeofcontact2,\n                          onChange: this.handleToA2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 914,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 911,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 901,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        id: classes.cell1,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          for: \"fname2\",\n                          style: labelstyle,\n                          children: \"First Name:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 929,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 926,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell2,\n                        style: {\n                          textAlign: \"left\",\n                          width: \"30%\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          style: textbxstyle // onChangeText={(text) => {this.setState({ fname2: text })}} \n                          ,\n                          type: \"text\",\n                          id: \"fname2\",\n                          name: \"fname2\",\n                          value: this.state.fname2,\n                          onChange: this.handleFname2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 938,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 935,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 925,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell1,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          for: \"lname2\",\n                          style: labelstyle,\n                          children: \"Last Name:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 952,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 949,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell2,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          style: textbxstyle // onChangeText={(text) => {this.setState({ lname2: text })}} \n                          ,\n                          type: \"text\",\n                          id: \"lname2\",\n                          name: \"lname2\",\n                          value: this.state.lname2,\n                          onChange: this.handleLname2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 961,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 958,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 948,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell1,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"email2\",\n                          style: labelstyle,\n                          children: \"Email:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 975,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 972,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell2,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          // onChangeText={(text) => {this.setState({ email2: text })}} \n                          style: textbxstyle,\n                          type: \"text\",\n                          id: \"email2\",\n                          name: \"email2\",\n                          value: this.state.email2,\n                          onChange: this.handleEmail2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 983,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 980,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell1,\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"phone2\",\n                          style: labelstyle,\n                          children: \"Phone:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 997,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 994,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: classes.cell2,\n                        style: {\n                          textAlign: \"left\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          // onChangeText={(text) => {this.setState({ phone2: text })}} \n                          style: textbxstyle,\n                          type: \"text\",\n                          id: \"phone2\",\n                          name: \"phone2\",\n                          value: this.state.phone2,\n                          onChange: this.handlePhone2Change\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1006,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1003,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 993,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 900,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Accordion3, {\n              isOpen3: isOpen3,\n              onChange: this.onChange3,\n              label: \"Configuration Settings\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell14,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"ImgCapture\",\n                        style: labelstyle,\n                        children: \"Image Capture Setting:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1027,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1024,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell15,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        style: labelstyle,\n                        style: {\n                          paddingBottom: \"0\",\n                          color: \"#3cB650\"\n                        },\n                        children: \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1036,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1041,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        style: labelstyle,\n                        style: {\n                          paddingBottom: \"0\",\n                          color: \"#3cB650\"\n                        },\n                        children: \"Yes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1042,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1033,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell16,\n                      style: {\n                        textAlign: \"center\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          id: \"labelr\",\n                          className: classes.RadioButton,\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            name: \"Testradio\",\n                            id: \"RadioBtn\",\n                            value: \"false\",\n                            onChange: this.handleRadiobtn\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1055,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.checkmark\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1061,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1052,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          id: \"labelr\",\n                          className: classes.RadioButton,\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            name: \"Testradio\",\n                            id: \"RadioBtn2\",\n                            value: \"true\",\n                            onChange: this.handleRadiobtn\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1068,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.checkmark\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1075,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1065,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1051,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1048,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"frameInterval\",\n                        style: labelstyle,\n                        children: \"Frame Interval:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1088,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1085,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onChangeText={(text) => {this.setState({ frameinterval: text })}} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"frameinterval\",\n                        name: \"frameinterval\" // value={this.state.frameInterval}\n                        //onChange={this.handleConfigChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1097,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1094,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1084,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"anomalyDuration\",\n                        style: labelstyle,\n                        children: \"Anomaly Duration:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1112,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1109,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onChangeText={(text) => {this.setState({ anomalyduration: text })}} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"anomalyduration\",\n                        name: \"anomalyduration\" // value={this.state.anomalyDuration}\n                        //onChange={this.handleConfigChange}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1121,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1118,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1108,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"smoothingFrame\",\n                        style: labelstyle,\n                        children: \"Smoothing Frame:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1136,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1133,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onChangeText={(text) => {this.setState({ smoothingFrame: text })}} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"smoothingframe\",\n                        name: \"smoothingframe\" // value={this.state.smoothingFrame}\n                        ,\n                        onChange: this.handleConfigChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1145,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1142,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1132,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexChild,\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell7,\n                    style: {\n                      textAlign: \"right\",\n                      paddingRight: \"2%\",\n                      paddingTop: \"2%\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      //onChange={this.handleAChange && this.handleCChange && this.handleConfigChange}\n                      type: \"submit\",\n                      value: \"Submit\",\n                      style: buttonstyle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1165,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1162,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1161,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(OrgForm); // ValidatorN() {\n//   if (this.state.name === \"\")\n//   {\n//     this.setState ({emptyErrorName: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorName: \"\"})\n//   }\n// }\n// ValidatorTofA() {\n//   if (this.state.typeofaddress === \"\" )\n//   {\n//     this.setState ({emptyErrorTofA: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorTofA: \"\"})\n//   }\n// }\n// ValidatorStr() {\n//   if (this.state.street === \"\")\n//   {\n//     this.setState ({emptyErrorStreet: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorStreet: \"\"})\n//   }\n// }\n// ValidatorCit() {\n//   if (this.state.city === \"\" )\n//   {\n//     this.setState ({emptyErrorCity: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorCity: \"\"})\n//   }\n// }\n// ValidatorSt() {\n//   if (this.state.statea === \"\")\n//   {\n//     this.setState ({emptyErrorState: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorState: \"\"})\n//   }\n// }\n// ValidatorZC() {\n//   if (this.state.zipcode === \"\")\n//   {\n//     this.setState ({emptyErrorZipcode: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorZipcode: \"\"})\n//   }\n// }\n// ValidatorCountry() {\n//   if (this.state.country === \"\")\n//   {\n//     this.setState ({emptyErrorCountry: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorCountry: \"\"})\n//   }\n// }\n// ValidatorTofC () {\n//   if (this.state.typeofcontact === \"\" )\n//   {\n//     this.setState ({emptyErrorTofC: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorTofC: \"\"})\n//   }\n// }\n// Validatorfname() {\n//   if (this.state.fname === \"\")\n//   {\n//     this.setState ({emptyErrorfname: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorfname: \"\"})\n//   }\n// }\n// Validatorlname() {\n//   if (this.state.lname === \"\" )\n//   {\n//     this.setState ({emptyErrorlname: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorlname: \"\"})\n//   }\n// }\n// Validatorphone() {\n//   if (this.state.phone === \"\")\n//   {\n//     this.setState ({emptyErrorphone: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErrorphone: \"\"})\n//   }\n// }\n// Validatoremail() {\n//   if (this.state.email === \"\")\n//   {\n//     this.setState ({emptyErroremail: \"This field cannot be empty\"})\n//   }\n//   else \n//   {\n//     this.setState ({emptyErroremail: \"\"})\n//   }\n// }\n// Validatoremailrg() {\n// let rg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// let isValid= rg.test(this.state.email)\n// if (isValid)\n// {\n//   this.setState ({emailError: \"The email address entered has an incorrect format\"})\n//   alert(\"The email address entered has an incorrect format\")\n// }\n// else \n// {\n//   this.setState ({emailError: \"\"})\n// }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/containers/OrgForm/OrgForm.js"],"names":["React","Component","withRouter","axios","classes","RadioButton","Heading2","Accordion","Accordion2","Accordion3","Accordion4","Accordion5","faVuejs","OrgForm","constructor","state","isOpen","isOpen2","isOpen3","isOpen4","isOpen5","onChange","setState","onChange2","onChange3","onChange4","onChange5","description","id","contact","address","configuration","typeofaddress2","street2","city2","statea2","zipcode2","country2","typeofcontact2","fname2","lname2","phone2","email2","RadioVal","handleNameChange","bind","handleOrgIDChange","handleToA2Change","handleStr2Change","handleCity2Change","handleState2Change","handleZip2Change","handleCountry2Change","handleTofC2Change","handleFname2Change","handleLname2Change","handlePhone2Change","handleEmail2Change","handleSubmit","handleCChange","handleAChange","event","target","value","typea","document","getElementById","streeta","citya","statea","zipa","countrya","fnamec","lnamec","typec","phonec","emailc","preventDefault","Description","Contact","Address","Config","console","log","post","then","response","catch","error","props","history","push","render","labelstyle","color","fontFamily","fontWeight","padding","position","textRendering","display","width","textbxstyle","margin","border","borderRadius","boxSizing","textbxstyle2","buttonstyle","backgroundColor","textAlign","textDecoration","fontSize","cursor","main","wrapper","flexChild","cell3","cell4","cell1","cell2","cell14","cell15","paddingBottom","cell16","handleRadiobtn","checkmark","handleConfigChange","cell7","paddingRight","paddingTop"],"mappings":"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":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from '../../axios';\r\n\r\nimport classes from './OrgForm.module.css';\r\nimport RadioButton from '../../components/Form Inputs/RadioButton/RadioButton';\r\nimport Heading2 from '../../components/Form Inputs/Heading2/Heading2';\r\nimport Accordion from '../../components/Accordion/Accordion';\r\nimport Accordion2 from '../../components/Accordion/Accordion2';\r\nimport Accordion3 from '../../components/Accordion/Accordion3';\r\nimport Accordion4 from '../../components/Accordion/Accordion4';\r\nimport Accordion5 from '../../components/Accordion/Accodion5';\r\nimport { faVuejs } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass OrgForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n          description: '',\r\n          id: '',\r\n          contact: null,\r\n          address: null,\r\n\r\n          configuration: null,\r\n\r\n          typeofaddress2:'',\r\n          street2:'',\r\n          city2:'',\r\n          statea2:'',\r\n          zipcode2:'',\r\n          country2:'',\r\n          typeofcontact2:'',\r\n          fname2:'',\r\n          lname2:'',\r\n          phone2:'',\r\n          email2:'',\r\n\r\n          }\r\n    \r\n    let RadioVal = null\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleOrgIDChange = this.handleOrgIDChange.bind(this);\r\n    // this.handleTofAChange = this.handleTofAChange.bind(this);\r\n    // this.handleStrChange = this.handleStrChange.bind(this);\r\n    // this.handleCityChange = this.handleCityChange.bind(this);\r\n    // this.handleStateChange = this.handleStateChange.bind(this);\r\n    // this.handleZipChange = this.handleZipChange.bind(this);\r\n    // this.handleCountryChange = this.handleCountryChange.bind(this);\r\n    this.handleToA2Change = this.handleToA2Change.bind(this);\r\n    this.handleStr2Change = this.handleStr2Change.bind(this);\r\n    this.handleCity2Change = this.handleCity2Change.bind(this);\r\n    this.handleState2Change = this.handleState2Change.bind(this);\r\n    this.handleZip2Change = this.handleZip2Change.bind(this);\r\n    this.handleCountry2Change = this.handleCountry2Change.bind(this);\r\n    // this.handleTofCChange = this.handleTofCChange.bind(this);\r\n    // this.handleFnameChange = this.handleFnameChange.bind(this);\r\n    // this.handleLnameChange = this.handleLnameChange.bind(this);\r\n    // this.handlePhoneChange = this.handlePhoneChange.bind(this);\r\n    // this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handleTofC2Change = this.handleTofC2Change.bind(this);\r\n    this.handleFname2Change = this.handleFname2Change.bind(this);\r\n    this.handleLname2Change = this.handleLname2Change.bind(this);\r\n    this.handlePhone2Change = this.handlePhone2Change.bind(this);\r\n    this.handleEmail2Change = this.handleEmail2Change.bind(this);\r\n    // this.handleImageCYChange = this.handleImageCYChange.bind(this);\r\n    // this.handleImageCNChange = this.handleImageCNChange.bind(this);\r\n    // this.handleAnomDChange = this.handleAnomDChange.bind(this);\r\n    // this.handleSmoothChange = this.handleSmoothChange.bind(this);\r\n    // this.handleFrameIChange = this.handleFrameIChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCChange = this.handleCChange.bind(this);\r\n    this.handleAChange = this.handleAChange.bind(this);\r\n    // this.handleRadiobtn = this.handleRadiobtn.bind(this);\r\n    // this.handleConfigChange = this.handleConfigChange.bind(this);\r\n  }\r\n\r\n  // whenever a change is made to an input field, update the corresponding state property\r\n  handleNameChange(event) {\r\n    this.setState({description: event.target.value});\r\n  }\r\n\r\n  handleOrgIDChange(event) {\r\n    this.setState({id: event.target.value});\r\n  }\r\n\r\n  // handleTofAChange(event) {\r\n  //   this.setState({ address: {...this.state.address, type: event.target.value}});\r\n  // }\r\n\r\n  // handleStrChange(event) {\r\n  //   this.setState({ address: {...this.state.address, street: event.target.value}});\r\n  // }\r\n\r\n  // handleCityChange(event) {\r\n  //   this.setState({ address: {...this.state.address, city: event.target.value}});\r\n  // }\r\n\r\n  // handleStateChange(event) {\r\n  //   this.setState({ address: {...this.state.address, state: event.target.value}});\r\n  // }\r\n\r\n  // handleZipChange(event) {\r\n  //   this.setState({ address: {...this.state.address, zip: event.target.value}});\r\n  // }\r\n\r\n  // handleCountryChange(event) {\r\n  //   this.setState({ address: {...this.state.address, country: event.target.value}});\r\n  // }\r\n\r\n  handleToA2Change(event) {\r\n    this.setState({typeofaddress2: event.target.value});\r\n  }\r\n\r\n  handleStr2Change(event) {\r\n    this.setState({street2: event.target.value});\r\n  }\r\n\r\n  handleCity2Change(event) {\r\n    this.setState({city2: event.target.value});\r\n  }\r\n\r\n  handleState2Change(event) {\r\n    this.setState({statea2: event.target.value});\r\n  }\r\n\r\n  handleZip2Change(event) {\r\n    this.setState({zipcode2: event.target.value});\r\n  }\r\n\r\n  handleCountry2Change(event) {\r\n    this.setState({country2: event.target.value});\r\n  }\r\n\r\n  handleAChange() {\r\n    let typea = document.getElementById(\"addresstype\")\r\n    let streeta = document.getElementById(\"street\")\r\n    let citya = document.getElementById(\"city\")\r\n    let statea = document.getElementById(\"state\")\r\n    let zipa = document.getElementById(\"zip\")\r\n    let countrya = document.getElementById(\"country\")\r\n    this.setState({\r\n      \"address\": \r\n      [{\"zip\": zipa.value,\r\n        \"country\": countrya.value,\r\n        \"state\": statea.value,\r\n        \"type\": typea.value,\r\n        \"city\": citya.value,\r\n        \"street\": streeta.value }]\r\n      })\r\n  }\r\n\r\n  handleCChange() {\r\n    let fnamec = document.getElementById(\"fname\")\r\n    let lnamec = document.getElementById(\"lname\")\r\n    let typec = document.getElementById(\"contacttype\")\r\n    let phonec = document.getElementById(\"phone\")\r\n    let emailc = document.getElementById(\"email\")\r\n    this.setState({ \r\n      \"contact\": \r\n      [{\"firstName\": fnamec.value,\r\n        \"lastName\": lnamec.value, \r\n        \"type\": typec.value, \r\n        \"phone\": phonec.value, \r\n        \"email\": emailc.value}]\r\n      })\r\n  }\r\n\r\n  // handleRadiobtn() {\r\n  //   let RadioNo = document.getElementById(\"RadioBtn\")\r\n  //   let RadioYes = document.getElementById(\"RadioBtn2\")\r\n\r\n  //   if (RadioNo.checked) {\r\n  //     this.RadioVal = \"false\"\r\n  //   }\r\n  //   if (RadioYes.checked) {\r\n  //     this.RadioVal = \"true\"\r\n  //   }\r\n  // }\r\n\r\n  // handleConfigChange() {\r\n  //   let smoothingf = document.getElementById(\"smoothingframe\")\r\n  //   let anomalyd = document.getElementById(\"anomalyduration\")\r\n  //   let framei = document.getElementById(\"frameinterval\")\r\n  //   this.setState({ \r\n  //     configuration: {\r\n  //       Registration: {\r\n  //         imageCapture: this.RadioVal},\r\n  //       postProcess: {\r\n  //         anomalyDuration: anomalyd.value,\r\n  //         smoothingFrame: smoothingf.value,\r\n  //         frameInterval: framei.value,}\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // handleTofCChange(event) {\r\n  //   this.setState({ contact: {...this.state.contact, type: event.target.value}});\r\n  // }\r\n\r\n  // handleFnameChange(event) {\r\n  //   this.setState({ contact: {...this.state.contact, firstName: event.target.value}});\r\n  // }\r\n\r\n  // handleLnameChange(event) {\r\n  //   this.setState({ contact: {...this.state.contact, lastName: event.target.value}});\r\n  // }\r\n\r\n  // handlePhoneChange(event) {\r\n  //   this.setState({ contact: {...this.state.contact, phone: event.target.value}});\r\n  // }\r\n\r\n  // handleEmailChange(event) {\r\n  //   this.setState({ contact: {...this.state.contact, email: event.target.value}});\r\n  //}\r\n\r\n  handleTofC2Change(event) {\r\n    this.setState({typeofcontact2: event.target.value});\r\n  }\r\n\r\n  handleFname2Change(event) {\r\n    this.setState({fname2: event.target.value});\r\n  }\r\n\r\n  handleLname2Change(event) {\r\n    this.setState({lname2: event.target.value});\r\n  }\r\n\r\n  handlePhone2Change(event) {\r\n    this.setState({phone2: event.target.value});\r\n  }\r\n\r\n  handleEmail2Change(event) {\r\n    this.setState({email2: event.target.value});\r\n  }\r\n\r\n  // handleImageCYChange(event) {\r\n  //   this.setState({ configuration: {registration: {...this.state.configuration.registration, imageCapture: \"true\"}}});\r\n  // }\r\n\r\n  // handleImageCNChange(event) {\r\n  //   this.setState({ configuration: {registration: {...this.state.configuration.registration, imageCapture: \"false\"}}});\r\n  //}\r\n\r\n  // handleAnomDChange(event) {\r\n  //   this.setState({ configuration: {postProcess: {...this.state.configuration.postProcess, anomalyDuration: event.target.value}}});\r\n  // }\r\n\r\n  // handleFrameIChange(event) {\r\n  //   this.setState({ configuration: {postProcess: {...this.state.configuration.postProcess, frameInterval: event.target.value}}});\r\n  // }\r\n\r\n  // handleSmoothChange(event) {\r\n  //   this.setState({ configuration: {postProcess: {...this.state.configuration.postProcess, smoothingFrame: event.target.value}}});\r\n  // }\r\n\r\n\r\n  handleSubmit(event) {\r\n\r\n    event.preventDefault();\r\n\r\n    // prevent default submit action\r\n    // distribute data stored in state into new object\r\n    const Description = {...this.state.description}\r\n    const Contact = {...this.state.contact}\r\n    const Address = {...this.state.address}\r\n    const Config = {...this.state.configuration}\r\n    console.log(Description, Contact, Address, Config);\r\n    //make api call to post data\r\n    axios.post('/orgs', Description, Contact, Address, Config)\r\n         .then(response => console.log(response))\r\n         .catch(error => console.log(error));\r\n\r\n    //redirect to confirmation page\r\n    this.props.history.push('/add-test-confirmation')\r\n  }\r\n      state = {\r\n      isOpen: true,\r\n      isOpen2: false,\r\n      isOpen3: false,\r\n      isOpen4: false, \r\n      isOpen5: false,\r\n      };\r\n\r\n      onChange = isOpen => {\r\n        this.setState({\r\n          isOpen\r\n        });\r\n      };\r\n\r\n      onChange2 = isOpen2 => {\r\n        this.setState({\r\n          isOpen2\r\n        });\r\n      };\r\n\r\n      onChange3 = isOpen3 => {\r\n        this.setState({\r\n          isOpen3\r\n        });\r\n      };\r\n\r\n      onChange4 = isOpen4 => {\r\n        this.setState({\r\n          isOpen4\r\n        });\r\n      };\r\n\r\n      onChange5 = isOpen5 => {\r\n        this.setState({\r\n          isOpen5\r\n        });\r\n      };\r\n\r\n  render () {\r\n    const labelstyle = {\r\n      color: \"#3cB650\",\r\n\t    fontFamily: \"sans-serif\",\r\n      fontWeight: \"400\",\r\n      padding: \"20px\",\r\n      position: \"relative\",\r\n      textRendering: \"optimizeLegibility\",\r\n      display: \"inline-block\",\r\n      width: \"70%\"\r\n      };\r\n    \r\n      const textbxstyle = {\r\n        width: \"70%\",\r\n        padding: \"12px 20px\",\r\n        margin: \"8px 0\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"4px\",\r\n        boxSizing: \"border-box\",\r\n        display: \"inline-block\"\r\n      }; \r\n\r\n      const textbxstyle2 = {\r\n        width: \"70%\",\r\n        padding: \"12px 20px\",\r\n        margin: \"8px 0\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"4px\",\r\n        boxSizing: \"border-box\",\r\n        display: \"inline-block\"\r\n      }; \r\n\r\n      const buttonstyle = {\r\n        backgroundColor: \"#4CAF50\",\r\n        border: \"none\",\r\n        color: \"white\",\r\n        padding: \"10px 22px\",\r\n        textAlign: \"center\",\r\n        textDecoration: \"none\",\r\n        display: \"inline-block\",\r\n        fontSize: \"16px\",\r\n        margin: \"4px 2px\",\r\n        cursor: \"pointer\",\r\n        borderRadius:\"30px\",\r\n      };\r\n\r\n      // const textbxstyle3 = {\r\n      //   width: \"90%\",\r\n      //   padding: \"12px 20px\",\r\n      //   margin: \"8px 0\",\r\n      //   border: \"1px solid #ccc\",\r\n      //   borderRadius: \"4px\",\r\n      //   boxSizing: \"border-box\",\r\n      //   display: \"inline-block\"\r\n      // }; \r\n\r\n      // const textbxstyle4 = {\r\n      //   width: \"40%\",\r\n      //   padding: \"12px 20px\",\r\n      //   margin: \"8px 0\",\r\n      //   border: \"1px solid #ccc\",\r\n      //   borderRadius: \"4px\",\r\n      //   boxSizing: \"border-box\",\r\n      //   display: \"inline-block\"\r\n      // }; \r\n\r\n      const { isOpen } = this.state;\r\n      const { isOpen2 } = this.state;\r\n      const { isOpen3 } = this.state;\r\n      const { isOpen4 } = this.state;\r\n      const { isOpen5 } = this.state;\r\n      \r\n    return (\r\n      <div>\r\n        <main className={classes.main}>\r\n          <Heading2>Add Organizations</Heading2>\r\n          <form className={classes.wrapper} onSubmit={this.handleSubmit}>\r\n            <fieldset>\r\n              <div className={classes.flexChild}>\r\n                <table>\r\n                  <tr>\r\n                    <td className={classes.cell3} \r\n                        style={{textAlign:\"right\"}}>\r\n                        <label htmlFor=\"orgname\" \r\n                          style={labelstyle}>\r\n                          Name:\r\n                       </label>\r\n                    </td>\r\n                    <td \r\n                      className={classes.cell4} \r\n                      style={{textAlign:\"left\"}}>\r\n                      <input \r\n                        // onBlur = {()=> this.ValidatorN()} \r\n                        // onChangeText={(text) => {this.setState({ name: text })}} \r\n                        style={textbxstyle2} \r\n                        type=\"text\" \r\n                        id=\"orgname\" \r\n                        name=\"orgname\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleNameChange}\r\n                        />\r\n                      {/* <p \r\n                        style={{color:\"red\"}}>\r\n                        {this.state.emptyErrorName}\r\n                      </p> */}\r\n                    </td>\r\n                  </tr>\r\n                  {/* <tr>\r\n                    <td \r\n                      className={classes.cell3} \r\n                      style={{textAlign:\"right\"}}>\r\n                      <label \r\n                        htmlFor=\"orgID\" \r\n                        style={labelstyle}>\r\n                        ID:\r\n                      </label>\r\n                    </td>\r\n                    <td \r\n                      className={classes.cell4} \r\n                      style={{textAlign:\"left\"}}>\r\n                        <input \r\n                          // onChangeText={(text) => {this.setState({ ID: text })}} \r\n                          style={textbxstyle2} \r\n                          type=\"text\" \r\n                          id=\"orgID\" \r\n                          name=\"orgID\"\r\n                          value={this.state.ID}\r\n                          onChange={this.handleOrgIDChange}/>\r\n                    </td>\r\n                  </tr> */}\r\n                </table>\r\n                  <hr></hr>\r\n                    </div> \r\n                      <Accordion isOpen={isOpen} onChange={this.onChange} label={\"Address\"}>\r\n                        <div>\r\n                          <br/>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"addresstype\" \r\n                                  style={labelstyle}>\r\n                                  Type of Address (Primary/Billing/Technical):\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4}\r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                style={textbxstyle2} \r\n                                type=\"text\" \r\n                                id=\"addresstype\" \r\n                                name=\"addresstype\"\r\n                                //onChange={this.handleAChange}\r\n                                />\r\n                                {/* <p style={{color:\"red\"}}>\r\n                                  {this.state.emptyErrorTofA}\r\n                                </p> */}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"street\" \r\n                                  style={labelstyle}>\r\n                                  Street:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"street\" \r\n                                  name=\"street\"\r\n                                  //onChange={this.handleAChange}\r\n                                  />\r\n                                {/* <p \r\n                                  style={{color:\"red\"}}>\r\n                                  {this.state.emptyErrorStreet}\r\n                                </p> */}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"city\" \r\n                                  style={labelstyle}>\r\n                                  City:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"city\" \r\n                                  name=\"city\"\r\n                                  //value={this.state.address.city}\r\n                                  //onChange={this.handleAChange}\r\n                                  />\r\n                                  {/* <p style={{color:\"red\"}}>\r\n                                    {this.state.emptyErrorCity}\r\n                                </p> */}\r\n                              </td>\r\n                            </tr>\r\n                            <tr> \r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"state\" \r\n                                  style={labelstyle}>\r\n                                  State/Province:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"state\" \r\n                                  name=\"state\"\r\n                                  // value={this.state.address.state}\r\n                                  //onChange={this.handleAChange}\r\n                                  />\r\n                                {/* <p style={{color:\"red\"}}>\r\n                                  {this.state.emptyErrorState}\r\n                                </p> */}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"zip\" \r\n                                  style={labelstyle}>\r\n                                  Zip Code:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  // onBlur = {()=> this.ValidatorZC()} \r\n                                  style={textbxstyle2} \r\n                                  // onChangeText={(text) => {this.setState({ zipcode: text })}} \r\n                                  type=\"text\" \r\n                                  id=\"zip\" \r\n                                  name=\"zip\"\r\n                                  // value={this.state.address.zip}\r\n                                  //onChange={this.handleAChange}\r\n                                  />\r\n                                {/* <p style={{color:\"red\"}}>\r\n                                  {this.state.emptyErrorZipcode}\r\n                                </p> */}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                htmlFor=\"country\" \r\n                                style={labelstyle}>\r\n                                  Country:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                // onBlur = {()=> this.ValidatorCountry()} \r\n                                style={textbxstyle2} \r\n                                // onChangeText={(text) => {this.setState({ country: text })}}\r\n                                type=\"text\" \r\n                                id=\"country\" \r\n                                name=\"country\"\r\n                                // value={this.state.address.country}\r\n                                onChange={this.handleAChange}\r\n                                />\r\n                                {/* <p style={{color:\"red\"}}>\r\n                                  {this.state.emptyErrorCountry}\r\n                                </p> */}\r\n                              </td>\r\n                            </tr>\r\n                          </table> \r\n                        </div>\r\n                        <Accordion4 isOpen4={isOpen4} onChange={this.onChange4} label={\"Add Additional Address\"}>\r\n                        <div>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"addresstype2\" \r\n                                  style={labelstyle}>\r\n                                  Type of Address (Primary/Billing/Technical):\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  // onChangeText={(text) => {this.setState({ typeofaddress2: text })}} \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"addresstype2\" \r\n                                  name=\"addresstype2\"\r\n                                  value={this.state.typeofaddress2}\r\n                                  onChange={this.handleToA2Change}\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"street2\" \r\n                                  style={labelstyle}>\r\n                                  Street:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  // onChangeText={(text) => {this.setState({ street2: text })}}\r\n                                  type=\"text\" \r\n                                  id=\"street2\" \r\n                                  name=\"street2\"\r\n                                  value={this.state.street2}\r\n                                  onChange={this.handleStr2Change}/>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"city2\" \r\n                                  style={labelstyle}>\r\n                                  City:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  // onChangeText={(text) => {this.setState({ city2: text })}} \r\n                                  type=\"text\" \r\n                                  id=\"city2\" \r\n                                  name=\"city2\"\r\n                                  value={this.state.city2}\r\n                                  onChange={this.handleCity2Change}/>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"state2\" \r\n                                  style={labelstyle}>\r\n                                  State/Province:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                              className={classes.cell4} \r\n                              style={{textAlign:\"left\"}}>\r\n                              <input \r\n                                style={textbxstyle2} \r\n                                // onChangeText={(text) => {this.setState({ statea2: text })}} \r\n                                type=\"text\" \r\n                                id=\"state2\" \r\n                                name=\"state2\"\r\n                                value={this.state.statea2}\r\n                                onChange={this.handleState2Change}/>\r\n                              </td>\r\n                            </tr>                            \r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"zip2\" \r\n                                  style={labelstyle}>\r\n                                  Zip Code:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  // onChangeText={(text) => {this.setState({ zipcode2: text })}} \r\n                                  type=\"text\" \r\n                                  id=\"zip2\" \r\n                                  name=\"zip2\"\r\n                                  value={this.state.zipcode2}\r\n                                  onChange={this.handleZip2Change}/>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"country2\" \r\n                                  style={labelstyle}>\r\n                                  Country:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  // onChangeText={(text) => {this.setState({ country2: text })}} \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"country2\" \r\n                                  name=\"country2\"\r\n                                  value={this.state.country2}\r\n                                  onChange={this.handleCountry2Change}/>\r\n                              </td>\r\n                            </tr>\r\n                          </table> \r\n                        </div>\r\n                        </Accordion4>\r\n                      </Accordion>\r\n                      <Accordion2 isOpen2={isOpen2} onChange={this.onChange2} label={\"Contact\"}>\r\n                        <div>\r\n                          <br/>\r\n                            <table>\r\n                              <tr>\r\n                                <td \r\n                                  id={classes.cell1}  \r\n                                  style={{textAlign:\"right\"}}>\r\n                                  <label \r\n                                    htmlFor=\"contacttype\" \r\n                                    style={labelstyle}>\r\n                                    Type of Contact (Primary/Billing/Technical):\r\n                                  </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\", width:\"30%\"}}>\r\n                                  <input \r\n                                    // onBlur = {()=> this.ValidatorTofC()} \r\n                                    style={textbxstyle} \r\n                                    type=\"text\" \r\n                                    id=\"contacttype\" \r\n                                    name=\"contacttype\"\r\n                                    //onChange={this.handleCChange}\r\n                                    />\r\n                                    {/* <p \r\n                                      style={{color:\"red\"}}>\r\n                                      {this.state.emptyErrorTofC}\r\n                                    </p> */}\r\n                                </td>\r\n                              </tr>           \r\n                              <tr>\r\n                                <td \r\n                                  id={classes.cell1}  \r\n                                  style={{textAlign:\"right\"}}>\r\n                                  <label \r\n                                    htmlFor=\"fname\" \r\n                                    style={labelstyle}>\r\n                                    First Name:\r\n                                  </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\", width:\"30%\"}}>\r\n                                  <input \r\n                                    // onBlur = {()=> this.Validatorfname()} \r\n                                    style={textbxstyle}\r\n                                    type=\"text\" \r\n                                    id=\"fname\" \r\n                                    name=\"fname\"\r\n                                    //onChange={this.handleCChange}\r\n                                   />\r\n                                    {/* <p \r\n                                      style={{color:\"red\"}}>\r\n                                      {this.state.emptyErrorfname}\r\n                                    </p> */}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td \r\n                                  className={classes.cell1} \r\n                                  style={{textAlign:\"right\"}}>\r\n                                  <label \r\n                                    htmlFor=\"lname\" \r\n                                    style={labelstyle}>\r\n                                    Last Name:\r\n                                  </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\"}}>\r\n                                  <input \r\n                                    // onBlur = {()=> this.Validatorlname()} \r\n                                    style={textbxstyle} \r\n                                    type=\"text\" \r\n                                    id=\"lname\" \r\n                                    name=\"lname\"\r\n                                    //onChange={this.handleCChange}\r\n                                    />\r\n                                  {/* <p \r\n                                    style={{color:\"red\"}}>\r\n                                    {this.state.emptyErrorlname}\r\n                                  </p> */}\r\n                                </td>\r\n                              </tr>               \r\n                              <tr>\r\n                                <td \r\n                                  className={classes.cell1} \r\n                                  style={{textAlign:\"right\"}}>\r\n                                    <label \r\n                                      htmlFor=\"email\" \r\n                                      style={labelstyle}>\r\n                                      Email:\r\n                                    </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\"}}>\r\n                                  <input \r\n                                    // onBlur = {()=> this.Validatoremail()} \r\n                                    style={textbxstyle} \r\n                                    type=\"text\" \r\n                                    id=\"email\" \r\n                                    name=\"email\"\r\n                                    //onChange={this.handleCChange}\r\n                                    />\r\n                                  {/* <p \r\n                                    style={{color:\"red\"}}>\r\n                                    {this.state.emptyErroremail}\r\n                                  </p> */}\r\n                                </td>\r\n                              </tr>                \r\n                              <tr>\r\n                                <td \r\n                                  className={classes.cell1} \r\n                                  style={{textAlign:\"right\"}}>\r\n                                  <label \r\n                                    htmlFor=\"phone\" \r\n                                    style={labelstyle}>\r\n                                    Phone:\r\n                                  </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\"}}>\r\n                                  <input \r\n                                    // onBlur = {()=> this.Validatorphone()} \r\n                                    // onChangeText={(text) => {this.setState({ phone: text })}} \r\n                                    style={textbxstyle} \r\n                                    type=\"text\" \r\n                                    id=\"phone\" \r\n                                    name=\"phone\"\r\n                                    onChange={this.handleCChange}\r\n                                    />\r\n                                  {/* <p style={{color:\"red\"}}>\r\n                                    {this.state.emptyErrorphone}\r\n                                  </p> */}\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n                        </div>\r\n                      <Accordion5 isOpen5={isOpen5} onChange={this.onChange5} label={\"Add Additional Contact\"}>\r\n                        <div>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                id={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"contacttype2\" \r\n                                  style={labelstyle}>\r\n                                  Type of Contact (Primary/Billing/Technical):\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\", width:\"30%\"}}>\r\n                                <input \r\n                                  // onChangeText={(text) => {this.setState({ typeofcontact2: text })}} \r\n                                  style={textbxstyle} \r\n                                  type=\"text\" \r\n                                  id=\"contacttype2\" \r\n                                  name=\"contacttype2\"\r\n                                  value={this.state.typeofcontact2}\r\n                                  onChange={this.handleToA2Change}\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                id={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  for=\"fname2\" \r\n                                  style={labelstyle}>\r\n                                  First Name:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\", width:\"30%\"}}>\r\n                                <input \r\n                                  style={textbxstyle} \r\n                                  // onChangeText={(text) => {this.setState({ fname2: text })}} \r\n                                  type=\"text\" \r\n                                  id=\"fname2\" \r\n                                  name=\"fname2\"\r\n                                  value={this.state.fname2}\r\n                                  onChange={this.handleFname2Change}/>\r\n                              </td>\r\n                            </tr>            \r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  for=\"lname2\" \r\n                                  style={labelstyle}>\r\n                                  Last Name:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle} \r\n                                  // onChangeText={(text) => {this.setState({ lname2: text })}} \r\n                                  type=\"text\" \r\n                                  id=\"lname2\" \r\n                                  name=\"lname2\"\r\n                                  value={this.state.lname2}\r\n                                  onChange={this.handleLname2Change}/>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label htmlFor=\"email2\" \r\n                                  style={labelstyle}>\r\n                                  Email:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  // onChangeText={(text) => {this.setState({ email2: text })}} \r\n                                  style={textbxstyle} \r\n                                  type=\"text\" \r\n                                  id=\"email2\" \r\n                                  name=\"email2\"\r\n                                  value={this.state.email2}\r\n                                  onChange={this.handleEmail2Change}/>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"phone2\" \r\n                                  style={labelstyle}>\r\n                                  Phone:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  // onChangeText={(text) => {this.setState({ phone2: text })}} \r\n                                  style={textbxstyle} \r\n                                  type=\"text\" \r\n                                  id=\"phone2\" \r\n                                  name=\"phone2\"\r\n                                  value={this.state.phone2}\r\n                                  onChange={this.handlePhone2Change}/>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </div>\r\n                      </Accordion5>\r\n                      </Accordion2>\r\n                      <Accordion3 isOpen3={isOpen3} onChange={this.onChange3} label={\"Configuration Settings\"}>\r\n                        <div>  \r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell14} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"ImgCapture\" \r\n                                  style={labelstyle}>\r\n                                  Image Capture Setting:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell15} \r\n                                style={{textAlign: \"right\"}}>\r\n                                <label \r\n                                  style={labelstyle} \r\n                                  style={{paddingBottom: \"0\", color: \"#3cB650\"}}>\r\n                                  No\r\n                                </label>\r\n                                  <br/>\r\n                                <label \r\n                                  style={labelstyle} \r\n                                  style={{paddingBottom:\"0\", color: \"#3cB650\"}}>\r\n                                  Yes\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell16} \r\n                                style={{textAlign:\"center\"}}>\r\n                                <div>\r\n                                  <label \r\n                                    id=\"labelr\" \r\n                                    className={classes.RadioButton}>\r\n                                    <input type=\"radio\" \r\n                                      name=\"Testradio\" \r\n                                      id=\"RadioBtn\"\r\n                                      value=\"false\"\r\n                                      onChange={this.handleRadiobtn}  \r\n                                       />\r\n                                    <span \r\n                                      className={classes.checkmark}>\r\n                                    </span>\r\n                                  </label>\r\n                                    <label \r\n                                      id=\"labelr\" \r\n                                      className={classes.RadioButton}>\r\n                                    <input \r\n                                      type=\"radio\" \r\n                                      name=\"Testradio\" \r\n                                      id=\"RadioBtn2\" \r\n                                      value=\"true\"\r\n                                      onChange={this.handleRadiobtn}\r\n                                      />                                  \r\n                                    <span \r\n                                      className={classes.checkmark}>  \r\n                                    </span>\r\n                                  </label>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                          <table>\r\n                          <tr>\r\n                            <td \r\n                              id={classes.cell1}  \r\n                              style={{textAlign:\"right\"}}>\r\n                              <label \r\n                                htmlFor=\"frameInterval\" \r\n                                style={labelstyle}>\r\n                                Frame Interval:\r\n                              </label>\r\n                            </td>\r\n                            <td \r\n                              className={classes.cell2} \r\n                              style={{textAlign:\"left\", width:\"30%\"}}>\r\n                              <input \r\n                                // onChangeText={(text) => {this.setState({ frameinterval: text })}} \r\n                                style={textbxstyle} \r\n                                type=\"text\" \r\n                                id=\"frameinterval\" \r\n                                name=\"frameinterval\"\r\n                                // value={this.state.frameInterval}\r\n                                //onChange={this.handleConfigChange}\r\n                                />\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td \r\n                              className={classes.cell1} \r\n                              style={{textAlign:\"right\"}}>\r\n                              <label \r\n                                htmlFor=\"anomalyDuration\" \r\n                                style={labelstyle}>\r\n                                Anomaly Duration:\r\n                              </label>\r\n                            </td>\r\n                            <td \r\n                              className={classes.cell2} \r\n                              style={{textAlign:\"left\"}}>\r\n                              <input \r\n                                // onChangeText={(text) => {this.setState({ anomalyduration: text })}} \r\n                                style={textbxstyle} \r\n                                type=\"text\" \r\n                                id=\"anomalyduration\" \r\n                                name=\"anomalyduration\"\r\n                                // value={this.state.anomalyDuration}\r\n                                //onChange={this.handleConfigChange}\r\n                                />\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td \r\n                              className={classes.cell1} \r\n                              style={{textAlign:\"right\"}}>\r\n                              <label \r\n                                htmlFor=\"smoothingFrame\" \r\n                                style={labelstyle}>\r\n                                Smoothing Frame:\r\n                              </label>\r\n                            </td>\r\n                            <td \r\n                              className={classes.cell2} \r\n                              style={{textAlign:\"left\"}}>\r\n                              <input \r\n                                // onChangeText={(text) => {this.setState({ smoothingFrame: text })}} \r\n                                style={textbxstyle} \r\n                                type=\"text\" \r\n                                id=\"smoothingframe\" \r\n                                name=\"smoothingframe\"\r\n                                // value={this.state.smoothingFrame}\r\n                                onChange={this.handleConfigChange}\r\n                                />\r\n                            </td>\r\n                          </tr>\r\n                          </table>\r\n                        </div>\r\n                      </Accordion3>\r\n                        <div className={classes.flexChild}>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell7} \r\n                                style={{textAlign:\"right\", paddingRight: \"2%\", paddingTop:\"2%\"}}>\r\n                                <input \r\n                                  //onChange={this.handleAChange && this.handleCChange && this.handleConfigChange}\r\n                                  type=\"submit\" value=\"Submit\" \r\n                                  style={buttonstyle}/>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </div>\r\n            </fieldset>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(OrgForm);\r\n\r\n// ValidatorN() {\r\n\r\n//   if (this.state.name === \"\")\r\n//   {\r\n//     this.setState ({emptyErrorName: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorName: \"\"})\r\n//   }\r\n// }\r\n// ValidatorTofA() {\r\n//   if (this.state.typeofaddress === \"\" )\r\n//   {\r\n//     this.setState ({emptyErrorTofA: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorTofA: \"\"})\r\n//   }\r\n// }\r\n// ValidatorStr() {\r\n//   if (this.state.street === \"\")\r\n//   {\r\n//     this.setState ({emptyErrorStreet: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorStreet: \"\"})\r\n//   }\r\n// }\r\n// ValidatorCit() {\r\n//   if (this.state.city === \"\" )\r\n//   {\r\n//     this.setState ({emptyErrorCity: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorCity: \"\"})\r\n//   }\r\n// }\r\n\r\n// ValidatorSt() {\r\n//   if (this.state.statea === \"\")\r\n//   {\r\n//     this.setState ({emptyErrorState: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorState: \"\"})\r\n//   }\r\n// }\r\n// ValidatorZC() {\r\n//   if (this.state.zipcode === \"\")\r\n//   {\r\n//     this.setState ({emptyErrorZipcode: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorZipcode: \"\"})\r\n//   }\r\n// }\r\n// ValidatorCountry() {\r\n//   if (this.state.country === \"\")\r\n//   {\r\n//     this.setState ({emptyErrorCountry: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorCountry: \"\"})\r\n//   }\r\n// }\r\n// ValidatorTofC () {\r\n//   if (this.state.typeofcontact === \"\" )\r\n//   {\r\n//     this.setState ({emptyErrorTofC: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorTofC: \"\"})\r\n//   }\r\n// }\r\n// Validatorfname() {\r\n//   if (this.state.fname === \"\")\r\n//   {\r\n//     this.setState ({emptyErrorfname: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorfname: \"\"})\r\n//   }\r\n// }\r\n// Validatorlname() {\r\n//   if (this.state.lname === \"\" )\r\n//   {\r\n//     this.setState ({emptyErrorlname: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorlname: \"\"})\r\n//   }\r\n// }\r\n// Validatorphone() {\r\n//   if (this.state.phone === \"\")\r\n//   {\r\n//     this.setState ({emptyErrorphone: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErrorphone: \"\"})\r\n//   }\r\n// }\r\n// Validatoremail() {\r\n//   if (this.state.email === \"\")\r\n//   {\r\n//     this.setState ({emptyErroremail: \"This field cannot be empty\"})\r\n//   }\r\n//   else \r\n//   {\r\n//     this.setState ({emptyErroremail: \"\"})\r\n//   }\r\n// }\r\n// Validatoremailrg() {\r\n// let rg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n// let isValid= rg.test(this.state.email)\r\n// if (isValid)\r\n// {\r\n//   this.setState ({emailError: \"The email address entered has an incorrect format\"})\r\n//   alert(\"The email address entered has an incorrect format\")\r\n// }\r\n// else \r\n// {\r\n//   this.setState ({emailError: \"\"})\r\n// }\r\n// }"]},"metadata":{},"sourceType":"module"}