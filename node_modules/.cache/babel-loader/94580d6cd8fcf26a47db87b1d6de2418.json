{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\components\\\\Accordion\\\\Accordion.js\";\n// import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import cx from \"classnames\";\n// import styles from \"./Accordion.module.css\";\n// const Accordion = ({ children, onChange, isOpen, label }) => {\n//   const onChangeHandler = () => {\n//     onChange && onChange(!isOpen);\n//   };\n//   return (\n//     <div className={styles.wrapper}>\n//       <span\n//         className={cx(styles.toggler, { [styles.active]: isOpen })}\n//         onClick={onChangeHandler}>\n//         {label}\n//       </span>\n//       <div\n//         className={cx(styles.panel, {\n//           [styles.active]: isOpen\n//         })}\n//       >\n//         <div className={styles.contentWrapper}>{children}</div>\n//       </div>\n//     </div>\n//   );\n// };\n// Accordion.propTypes = {\n//   isOpen: PropTypes.bool.isRequired,\n//   onChange: PropTypes.func,\n//   children: PropTypes.node,\n//   label: PropTypes.string.isRequired\n// };\n// Accordion.defaultProps = {\n//   isOpen: false,\n//   children: null,\n//   label: \"Accordion\"\n// };\n// export default Accordion;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AccordionSection from './AccordionSection';\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = label => {\n      const {\n        props: {\n          allowMultipleOpen\n        },\n        state: {\n          openSections\n        }\n      } = this;\n      const isOpen = !!openSections[label];\n\n      if (allowMultipleOpen) {\n        this.setState({\n          openSections: { ...openSections,\n            [label]: !isOpen\n          }\n        });\n      } else {\n        this.setState({\n          openSections: {\n            [label]: !isOpen\n          }\n        });\n      }\n    };\n\n    const _openSections = {};\n    this.props.children.forEach(child => {\n      if (child.props.isOpen) {\n        _openSections[child.props.label] = true;\n      }\n    });\n    this.state = {\n      openSections: _openSections\n    };\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        children\n      },\n      state: {\n        openSections\n      }\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"2px solid black\"\n      },\n      children: children.map(child => /*#__PURE__*/_jsxDEV(AccordionSection, {\n        isOpen: !!openSections[child.props.label],\n        label: child.props.label,\n        onClick: onClick,\n        children: child.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAccordion.propTypes = {\n  allowMultipleOpen: PropTypes.bool,\n  children: PropTypes.instanceOf(Object).isRequired\n};\nexport default Accordion;","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/components/Accordion/Accordion.js"],"names":["React","Component","PropTypes","AccordionSection","Accordion","constructor","props","onClick","label","allowMultipleOpen","state","openSections","isOpen","setState","children","forEach","child","render","border","map","propTypes","bool","instanceOf","Object","isRequired"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAMhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,OAdmB,GAcTC,KAAK,IAAI;AACjB,YAAM;AACJF,QAAAA,KAAK,EAAE;AAAEG,UAAAA;AAAF,SADH;AAEJC,QAAAA,KAAK,EAAE;AAAEC,UAAAA;AAAF;AAFH,UAGF,IAHJ;AAKA,YAAMC,MAAM,GAAG,CAAC,CAACD,YAAY,CAACH,KAAD,CAA7B;;AAEA,UAAIC,iBAAJ,EAAuB;AACrB,aAAKI,QAAL,CAAc;AACZF,UAAAA,YAAY,EAAE,EACZ,GAAGA,YADS;AAEZ,aAACH,KAAD,GAAS,CAACI;AAFE;AADF,SAAd;AAMD,OAPD,MAOO;AACL,aAAKC,QAAL,CAAc;AACZF,UAAAA,YAAY,EAAE;AACZ,aAACH,KAAD,GAAS,CAACI;AADE;AADF,SAAd;AAKD;AACF,KApCkB;;AAGjB,UAAMD,aAAY,GAAG,EAArB;AAEA,SAAKL,KAAL,CAAWQ,QAAX,CAAoBC,OAApB,CAA4BC,KAAK,IAAI;AACnC,UAAIA,KAAK,CAACV,KAAN,CAAYM,MAAhB,EAAwB;AACtBD,QAAAA,aAAY,CAACK,KAAK,CAACV,KAAN,CAAYE,KAAb,CAAZ,GAAkC,IAAlC;AACD;AACF,KAJD;AAMA,SAAKE,KAAL,GAAa;AAAEC,MAAAA,YAAY,EAAZA;AAAF,KAAb;AACD;;AA0BDM,EAAAA,MAAM,GAAG;AACP,UAAM;AACJV,MAAAA,OADI;AAEJD,MAAAA,KAAK,EAAE;AAAEQ,QAAAA;AAAF,OAFH;AAGJJ,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAHH,QAIF,IAJJ;AAMA,wBACE;AAAK,MAAA,KAAK,EAAE;AAACO,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA,gBACGJ,QAAQ,CAACK,GAAT,CAAaH,KAAK,iBACjB,QAAC,gBAAD;AACE,QAAA,MAAM,EAAE,CAAC,CAACL,YAAY,CAACK,KAAK,CAACV,KAAN,CAAYE,KAAb,CADxB;AAEE,QAAA,KAAK,EAAEQ,KAAK,CAACV,KAAN,CAAYE,KAFrB;AAGE,QAAA,OAAO,EAAED,OAHX;AAAA,kBAKGS,KAAK,CAACV,KAAN,CAAYQ;AALf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAhE+B;;AAA5BV,S,CACGgB,S,GAAY;AACjBX,EAAAA,iBAAiB,EAAEP,SAAS,CAACmB,IADZ;AAEjBP,EAAAA,QAAQ,EAAEZ,SAAS,CAACoB,UAAV,CAAqBC,MAArB,EAA6BC;AAFtB,C;AAkErB,eAAepB,SAAf","sourcesContent":["// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// import cx from \"classnames\";\r\n// import styles from \"./Accordion.module.css\";\r\n\r\n// const Accordion = ({ children, onChange, isOpen, label }) => {\r\n//   const onChangeHandler = () => {\r\n//     onChange && onChange(!isOpen);\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <div className={styles.wrapper}>\r\n//       <span\r\n//         className={cx(styles.toggler, { [styles.active]: isOpen })}\r\n//         onClick={onChangeHandler}>\r\n//         {label}\r\n//       </span>\r\n//       <div\r\n//         className={cx(styles.panel, {\r\n//           [styles.active]: isOpen\r\n//         })}\r\n//       >\r\n//         <div className={styles.contentWrapper}>{children}</div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// Accordion.propTypes = {\r\n//   isOpen: PropTypes.bool.isRequired,\r\n//   onChange: PropTypes.func,\r\n//   children: PropTypes.node,\r\n//   label: PropTypes.string.isRequired\r\n// };\r\n\r\n// Accordion.defaultProps = {\r\n//   isOpen: false,\r\n//   children: null,\r\n//   label: \"Accordion\"\r\n// };\r\n\r\n// export default Accordion;\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AccordionSection from './AccordionSection';\r\n\r\nclass Accordion extends Component {\r\n  static propTypes = {\r\n    allowMultipleOpen: PropTypes.bool,\r\n    children: PropTypes.instanceOf(Object).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const openSections = {};\r\n\r\n    this.props.children.forEach(child => {\r\n      if (child.props.isOpen) {\r\n        openSections[child.props.label] = true;\r\n      }\r\n    });\r\n\r\n    this.state = { openSections };\r\n  }\r\n\r\n  onClick = label => {\r\n    const {\r\n      props: { allowMultipleOpen },\r\n      state: { openSections },\r\n    } = this;\r\n\r\n    const isOpen = !!openSections[label];\r\n\r\n    if (allowMultipleOpen) {\r\n      this.setState({\r\n        openSections: {\r\n          ...openSections,\r\n          [label]: !isOpen\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        openSections: {\r\n          [label]: !isOpen\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: { children },\r\n      state: { openSections },\r\n    } = this;\r\n\r\n    return (\r\n      <div style={{border: \"2px solid black\"}}>\r\n        {children.map(child => (\r\n          <AccordionSection\r\n            isOpen={!!openSections[child.props.label]}\r\n            label={child.props.label}\r\n            onClick={onClick}\r\n          >\r\n            {child.props.children}\r\n          </AccordionSection>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}