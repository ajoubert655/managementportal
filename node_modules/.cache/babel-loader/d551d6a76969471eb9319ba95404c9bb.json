{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\containers\\\\TestForm\\\\TestForm.js\";\nimport React, { Component } from 'react';\nimport classes from './TestForm.module.css';\nimport Heading2 from '../../components/Form Inputs/Heading2/Heading2';\n\nclass TestForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itemtype: \"\",\n      testorgid: \"\",\n      testid: \"\",\n      tds: \"\"\n    };\n  }\n\n  ValidatorItemType() {\n    if (this.state.itemtype == \"\") {\n      this.setState({\n        emptyErroritype: \"This field cannot be empty\"\n      });\n    } else {\n      this.setState({\n        emptyErroritype: \"\"\n      });\n    }\n  }\n\n  ValidatorToI() {\n    if (this.state.testorgid == \"\") {\n      this.setState({\n        emptyErrortestOid: \"This field cannot be empty\"\n      });\n    } else {\n      this.setState({\n        emptyErrortestOid: \"\"\n      });\n    }\n  }\n\n  ValidatorTid() {\n    if (this.state.testid == \"\") {\n      this.setState({\n        emptyErrortestid: \"This field cannot be empty\"\n      });\n    } else {\n      this.setState({\n        emptyErrortestid: \"\"\n      });\n    }\n  }\n\n  Validatortds() {\n    if (this.state.tds == \"\") {\n      this.setState({\n        emptyErrortds: \"This field cannot be empty\"\n      });\n    } else {\n      this.setState({\n        emptyErrortds: \"\"\n      });\n    }\n  }\n\n  SubmitValidator() {\n    if (this.state.itemtype == \"\" || this.state.testorgid == \"\" || this.state.testid == \"\" || this.state.tds == \"\") {\n      alert(\"A required field is missing\");\n    }\n  }\n\n  render() {\n    const labelstyle = {\n      color: \"#3cB650\",\n      fontFamily: \"sans-serif\",\n      fontWeight: \"400\",\n      padding: \"20px\",\n      position: \"relative\",\n      textRendering: \"optimizeLegibility\",\n      display: \"inline-block\",\n      width: \"100%\"\n    };\n    const textbxstyle = {\n      width: \"70%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      boxSizing: \"border-box\",\n      display: \"inline-block\"\n    };\n    const buttonstyle = {\n      backgroundColor: \"#4CAF50\",\n      border: \"none\",\n      color: \"white\",\n      padding: \"10px 22px\",\n      textAlign: \"center\",\n      textDecoration: \"none\",\n      display: \"inline-block\",\n      fontSize: \"16px\",\n      margin: \"4px 2px\",\n      cursor: \"pointer\",\n      borderRadius: \"30px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsxDEV(Heading2, {\n          children: \" Manage Tests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.wrapper,\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexChild,\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    id: classes.cell1,\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"ItemType\",\n                      style: labelstyle,\n                      children: \"Item Type:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 75\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell2,\n                    style: {\n                      textAlign: \"left\",\n                      width: \"30%\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onBlur: () => this.ValidatorItemType(),\n                      onChangeText: text => {\n                        this.setState({\n                          itemtype: text\n                        });\n                      },\n                      style: textbxstyle,\n                      type: \"text\",\n                      id: \"itemType\",\n                      name: \"itemType\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 87\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: this.state.emptyErroritype\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell1,\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"testOrdId\",\n                      style: labelstyle,\n                      children: \"Test Organization ID:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 80\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell2,\n                    style: {\n                      textAlign: \"left\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onBlur: () => this.ValidatorToI(),\n                      onChangeText: text => {\n                        this.setState({\n                          testorgid: text\n                        });\n                      },\n                      style: textbxstyle,\n                      type: \"text\",\n                      id: \"testOrgId\",\n                      name: \"testOrgId\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 74\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: this.state.emptyErrortestOid\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell1,\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"id\",\n                      style: labelstyle,\n                      children: \"Test ID:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 80\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell2,\n                    style: {\n                      textAlign: \"left\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onBlur: () => this.ValidatorTid(),\n                      onChangeText: text => {\n                        this.setState({\n                          testid: text\n                        });\n                      },\n                      style: textbxstyle,\n                      type: \"text\",\n                      id: \"id\",\n                      name: \"id\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 74\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: this.state.emptyErrortestid\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell1,\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"tds\",\n                      style: labelstyle,\n                      children: \"Test Delivery System:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell2,\n                    style: {\n                      textAlign: \"left\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onBlur: () => this.Validatortds(),\n                      onChangeText: text => {\n                        this.setState({\n                          tds: text\n                        });\n                      },\n                      style: textbxstyle,\n                      type: \"text\",\n                      id: \"tds\",\n                      name: \"tds\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 74\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: this.state.emptyErrortds\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexChild,\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell7,\n                    style: {\n                      textAlign: \"right\",\n                      paddingRight: \"2%\",\n                      paddingTop: \"2%\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: this.SubmitValidator,\n                      style: buttonstyle,\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 114\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell8,\n                    style: {\n                      textAlign: \"left\",\n                      paddingLeft: \"2%\",\n                      paddingTop: \"2%\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: this.SubmitValidator,\n                      style: buttonstyle,\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 112\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestForm;","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/containers/TestForm/TestForm.js"],"names":["React","Component","classes","Heading2","TestForm","constructor","state","itemtype","testorgid","testid","tds","ValidatorItemType","setState","emptyErroritype","ValidatorToI","emptyErrortestOid","ValidatorTid","emptyErrortestid","Validatortds","emptyErrortds","SubmitValidator","alert","render","labelstyle","color","fontFamily","fontWeight","padding","position","textRendering","display","width","textbxstyle","margin","border","borderRadius","boxSizing","buttonstyle","backgroundColor","textAlign","textDecoration","fontSize","cursor","main","wrapper","flexChild","cell1","cell2","text","cell7","paddingRight","paddingTop","cell8","paddingLeft"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport classes from './TestForm.module.css';\r\nimport Heading2 from '../../components/Form Inputs/Heading2/Heading2';\r\n\r\nclass TestForm extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        itemtype: \"\",\r\n        testorgid: \"\",\r\n        testid: \"\",\r\n        tds: \"\",\r\n        }\r\n      }\r\n\r\n    ValidatorItemType() {\r\n    if (this.state.itemtype == \"\")\r\n      {\r\n        this.setState ({emptyErroritype: \"This field cannot be empty\"})\r\n      }\r\n      else \r\n      {\r\n        this.setState ({emptyErroritype: \"\"})\r\n      }\r\n    }\r\n    ValidatorToI() {\r\n      if (this.state.testorgid == \"\" )\r\n      {\r\n        this.setState ({emptyErrortestOid: \"This field cannot be empty\"})\r\n      }\r\n      else \r\n      {\r\n        this.setState ({emptyErrortestOid: \"\"})\r\n      }\r\n    }\r\n    ValidatorTid() {\r\n      if (this.state.testid == \"\")\r\n      {\r\n        this.setState ({emptyErrortestid: \"This field cannot be empty\"})\r\n      }\r\n      else \r\n      {\r\n        this.setState ({emptyErrortestid: \"\"})\r\n      }\r\n    }\r\n    Validatortds() {\r\n      if (this.state.tds == \"\" )\r\n      {\r\n        this.setState ({emptyErrortds: \"This field cannot be empty\"})\r\n      }\r\n      else \r\n      {\r\n        this.setState ({emptyErrortds: \"\"})\r\n      }\r\n    }\r\n\r\n    SubmitValidator() {\r\n        if (this.state.itemtype == \"\" || this.state.testorgid == \"\" || this.state.testid == \"\" || this.state.tds == \"\" )\r\n        {\r\n            alert(\"A required field is missing\")\r\n        }\r\n    }\r\n\r\n  render () {\r\n      const labelstyle = {\r\n        color: \"#3cB650\",\r\n            fontFamily: \"sans-serif\",\r\n        fontWeight: \"400\",\r\n        padding: \"20px\",\r\n        position: \"relative\",\r\n        textRendering: \"optimizeLegibility\",\r\n        display: \"inline-block\",\r\n        width: \"100%\"\r\n        };\r\n    \r\n      const textbxstyle = {\r\n        width: \"70%\",\r\n        padding: \"12px 20px\",\r\n        margin: \"8px 0\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"4px\",\r\n        boxSizing: \"border-box\",\r\n        display: \"inline-block\"\r\n      }; \r\n\r\n      const buttonstyle = {\r\n        backgroundColor: \"#4CAF50\",\r\n        border: \"none\",\r\n        color: \"white\",\r\n        padding: \"10px 22px\",\r\n        textAlign: \"center\",\r\n        textDecoration: \"none\",\r\n        display: \"inline-block\",\r\n        fontSize: \"16px\",\r\n        margin: \"4px 2px\",\r\n        cursor: \"pointer\",\r\n        borderRadius:\"30px\",\r\n      };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <main className={classes.main}>\r\n            <Heading2> Manage Tests</Heading2>\r\n          <form className={classes.wrapper}>\r\n              <fieldset>\r\n              \r\n              <div className={classes.flexChild}>\r\n                <br/>\r\n              <table>\r\n            \r\n                <tr ><td id={classes.cell1}  style={{textAlign:\"right\"}} ><label for=\"ItemType\" style={labelstyle}>Item Type:</label></td>\r\n                <td className={classes.cell2} style={{textAlign:\"left\", width:\"30%\"}}><input onBlur = {()=> this.ValidatorItemType()} onChangeText={(text) => {this.setState({ itemtype: text })}} style={textbxstyle} type=\"text\" id=\"itemType\" name=\"itemType\"/>\r\n                <p style={{color:\"red\"}}>{this.state.emptyErroritype}</p></td>\r\n                </tr>\r\n            \r\n                <tr ><td className={classes.cell1} style={{textAlign:\"right\"}}><label for=\"testOrdId\" style={labelstyle}>Test Organization ID:</label></td>\r\n                <td className={classes.cell2} style={{textAlign:\"left\"}}><input onBlur = {()=> this.ValidatorToI()} onChangeText={(text) => {this.setState({ testorgid: text })}} style={textbxstyle} type=\"text\" id=\"testOrgId\" name=\"testOrgId\"/>\r\n                <p style={{color:\"red\"}}>{this.state.emptyErrortestOid}</p></td>\r\n                </tr>\r\n\r\n                <tr ><td className={classes.cell1} style={{textAlign:\"right\"}}><label for=\"id\" style={labelstyle}>Test ID:</label></td>\r\n                <td className={classes.cell2} style={{textAlign:\"left\"}}><input onBlur = {()=> this.ValidatorTid()} onChangeText={(text) => {this.setState({ testid: text })}} style={textbxstyle} type=\"text\" id=\"id\" name=\"id\"/>\r\n                <p style={{color:\"red\"}}>{this.state.emptyErrortestid}</p></td>\r\n                </tr>\r\n\r\n                <tr><td className={classes.cell1} style={{textAlign:\"right\"}}><label for=\"tds\" style={labelstyle}>Test Delivery System:</label></td>\r\n                <td className={classes.cell2} style={{textAlign:\"left\"}}><input onBlur = {()=> this.Validatortds()} onChangeText={(text) => {this.setState({ tds: text })}} style={textbxstyle} type=\"text\" id=\"tds\" name=\"tds\"/>\r\n                <p style={{color:\"red\"}}>{this.state.emptyErrortds}</p></td>\r\n                </tr>\r\n                </table> \r\n                </div>\r\n                <div className={classes.flexChild}>\r\n                  <table>\r\n                  <tr>\r\n                  <td className={classes.cell7} style={{textAlign:\"right\", paddingRight: \"2%\", paddingTop:\"2%\"}}><button onClick={this.SubmitValidator} style={buttonstyle}>Edit</button></td>\r\n                  <td className={classes.cell8} style={{textAlign:\"left\", paddingLeft: \"2%\", paddingTop:\"2%\"}}><button onClick={this.SubmitValidator} style={buttonstyle}>Add</button></td>\r\n                  </tr>\r\n                  </table>\r\n                </div>\r\n          </fieldset>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TestForm;"]},"metadata":{},"sourceType":"module"}