{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\components\\\\DataTables\\\\Users\\\\UserTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useTable, useSortBy, useGlobalFilter, usePagination, useRowSelect } from 'react-table';\nimport Table from 'react-bootstrap/Table';\nimport axios from '../../../axios';\nimport { COLUMNS } from './columns';\nimport TableFilter from '../../UI/TableFilter/TableFilter';\nimport classes from './UserTable.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport Checkbox from '../../UI/Checkbox/Checkbox';\n\nconst UserTable = () => {\n  _s();\n\n  const [users, setUsers] = useState([]); // get data from api\n\n  useEffect(() => {\n    axios.get('/users').then(res => {\n      console.log(res); // const pathToData = res.data.result.Items\n      // const loadedData = [];\n      // // push data object into an array of kvps\n      // for (const Item in pathToData) {\n      //   loadedData.push({\n      //     id: Item,\n      //     itemType: pathToData[Item].itemType,\n      //     firstName: pathToData[Item].firstName,\n      //     lastName: pathToData[Item].lastName,\n      //     userId: pathToData[Item].userId,\n      //     email: pathToData[Item].email,\n      //     phone: pathToData[Item].phone,\n      //     street: pathToData[Item].address.street1,\n      //     city: pathToData[Item].address.city,\n      //     state: pathToData[Item].address.state,\n      //     zip: pathToData[Item].address.zip,\n      //     country: pathToData[Item].address.country, \n      //   });\n      // }\n      // //console.log(loadedData);\n      // setUsers(loadedData);\n    });\n  }, []); // memoize data to ensure it is not duplicated on each render\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => users, [users]); // create table instance\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    prepareRow,\n    selectedFlatRows,\n    state,\n    setGlobalFilter\n  } = useTable({\n    columns: columns,\n    data: data\n  }, // add sorting, filtering, pagination and row select\n  useGlobalFilter, useSortBy, usePagination, useRowSelect, // add a column for checkbox to tables\n  hooks => {\n    hooks.visibleColumns.push(columns => {\n      return [{\n        id: 'selection',\n        Header: 'select',\n        Cell: ({\n          row\n        }) => /*#__PURE__*/_jsxDEV(Checkbox, { ...row.getToggleRowSelectedProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, ...columns];\n    });\n  }); // destructure global filter and page index from state object\n\n  const {\n    globalFilter,\n    pageIndex\n  } = state; // data from selected row is stored here\n\n  let selectedRow = selectedFlatRows;\n  console.log(selectedRow);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolBarWrap,\n      children: /*#__PURE__*/_jsxDEV(TableFilter, {\n        filter: globalFilter,\n        setFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // render headers w/ sort functionality\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCaretUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 65\n              }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCaretDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 104\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return (\n            /*#__PURE__*/\n            // render table rows\n            _jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 26\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.pageButton,\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.pageNum,\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.pageButton,\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserTable, \"5hqYm4qJaBv2oo+r72yeL431SdA=\", false, function () {\n  return [useTable];\n});\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/components/DataTables/Users/UserTable.js"],"names":["React","useMemo","useState","useEffect","useTable","useSortBy","useGlobalFilter","usePagination","useRowSelect","Table","axios","COLUMNS","TableFilter","classes","FontAwesomeIcon","faCaretUp","faCaretDown","Checkbox","UserTable","users","setUsers","get","then","res","console","log","columns","data","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","prepareRow","selectedFlatRows","state","setGlobalFilter","hooks","visibleColumns","push","id","Header","Cell","row","getToggleRowSelectedProps","globalFilter","pageIndex","selectedRow","toolBarWrap","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","pageButton","pageNum","length"],"mappings":"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","sourcesContent":["import React, {useMemo, useState, useEffect} from 'react';\r\nimport {\r\n  useTable, \r\n  useSortBy, \r\n  useGlobalFilter, \r\n  usePagination,\r\n  useRowSelect\r\n} from 'react-table';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from '../../../axios';\r\n\r\nimport {COLUMNS} from './columns';\r\n\r\nimport TableFilter from '../../UI/TableFilter/TableFilter';\r\n\r\nimport classes from './UserTable.module.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCaretUp} from '@fortawesome/free-solid-svg-icons';\r\nimport {faCaretDown} from '@fortawesome/free-solid-svg-icons';\r\nimport Checkbox from '../../UI/Checkbox/Checkbox';\r\n\r\nconst UserTable = () => {\r\n  const [users, setUsers] = useState([])\r\n\r\n  // get data from api\r\n  useEffect(() => {\r\n    axios.get('/users').then(res => {\r\n      console.log(res);\r\n      // const pathToData = res.data.result.Items\r\n      // const loadedData = [];\r\n      \r\n      // // push data object into an array of kvps\r\n      // for (const Item in pathToData) {\r\n      //   loadedData.push({\r\n      //     id: Item,\r\n      //     itemType: pathToData[Item].itemType,\r\n      //     firstName: pathToData[Item].firstName,\r\n      //     lastName: pathToData[Item].lastName,\r\n      //     userId: pathToData[Item].userId,\r\n      //     email: pathToData[Item].email,\r\n      //     phone: pathToData[Item].phone,\r\n      //     street: pathToData[Item].address.street1,\r\n      //     city: pathToData[Item].address.city,\r\n      //     state: pathToData[Item].address.state,\r\n      //     zip: pathToData[Item].address.zip,\r\n      //     country: pathToData[Item].address.country, \r\n      //   });\r\n      // }\r\n      // //console.log(loadedData);\r\n      // setUsers(loadedData);\r\n    });\r\n  }, []);\r\n\r\n  // memoize data to ensure it is not duplicated on each render\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => users, [users]);\r\n\r\n  // create table instance\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    prepareRow,\r\n    selectedFlatRows,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns: columns,\r\n      data: data\r\n    },\r\n    // add sorting, filtering, pagination and row select\r\n    useGlobalFilter,  useSortBy, usePagination, useRowSelect,\r\n    // add a column for checkbox to tables\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: 'selection',\r\n            Header: 'select',\r\n            Cell: ({row}) => (\r\n              <Checkbox {...row.getToggleRowSelectedProps()} />\r\n            )\r\n          },\r\n          ...columns\r\n        ]\r\n      });\r\n    }\r\n  );\r\n\r\n  // destructure global filter and page index from state object\r\n  const {globalFilter, pageIndex} =  state;\r\n\r\n  // data from selected row is stored here\r\n  let selectedRow = selectedFlatRows\r\n  console.log(selectedRow);\r\n\r\n  return (\r\n    <>\r\n      {/* render filter field, with globalFilter and setGlobalFilter passed as props */}\r\n      <div className={classes.toolBarWrap}>\r\n        {/* render filter field, with globalFilter and setGlobalFilter passed as props */}\r\n        <TableFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      </div>\r\n\r\n      {/* render table */}\r\n      <Table {...getTableProps()} striped bordered hover>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  // render headers w/ sort functionality\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>  \r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted ? (column.isSortedDesc ? <FontAwesomeIcon icon={faCaretUp} /> : <FontAwesomeIcon icon={faCaretDown} />) : ''}\r\n                    </span>\r\n                  </th>\r\n                ))} \r\n              </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              // render table rows\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div>\r\n        {/* render pagination buttons */}\r\n        <button\r\n          className={classes.pageButton} \r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >Previous</button>\r\n        <span className={classes.pageNum}>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>\r\n        </span>\r\n        <button\r\n          className={classes.pageButton} \r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >Next</button>\r\n      </div>\r\n      <br/>\r\n    </>\r\n  );\r\n}\r\nexport default UserTable"]},"metadata":{},"sourceType":"module"}