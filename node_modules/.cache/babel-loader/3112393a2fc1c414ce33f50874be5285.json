{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\components\\\\DataTables\\\\Users\\\\UserTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useTable, useSortBy, useGlobalFilter, usePagination, useRowSelect } from 'react-table';\nimport Table from 'react-bootstrap/Table';\nimport axios from '../../../axios';\nimport { COLUMNS } from './columns';\nimport TableFilter from '../../UI/TableFilter/TableFilter';\nimport classes from './UserTable.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst UserTable = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [loaded, setLoaded] = useState(false); // get data from api\n\n  useEffect(() => {\n    axios.get('/users').then(res => {\n      console.log(res);\n      const pathToData = res.data.result.Items;\n      const loadedData = []; // push data objects into an array\n\n      for (const Item in pathToData) {\n        loadedData.push({\n          id: Item,\n          itemType: pathToData[Item].itemType,\n          firstName: pathToData[Item].firstName,\n          lastName: pathToData[Item].lastName,\n          userId: pathToData[Item].userId,\n          email: pathToData[Item].email,\n          phone: pathToData[Item].phone,\n          street: pathToData[Item].address.street1,\n          city: pathToData[Item].address.city,\n          state: pathToData[Item].address.state,\n          zip: pathToData[Item].address.zip,\n          country: pathToData[Item].address.country\n        });\n      } // update state\n\n\n      setUsers(loadedData);\n      setLoaded(true);\n    });\n  }, []); // memoize data to ensure it is not duplicated on each render\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => users, [users]); // create table instance\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    prepareRow,\n    selectedFlatRows,\n    state,\n    setGlobalFilter\n  } = useTable({\n    columns: columns,\n    data: data\n  }, // add sorting, filtering, pagination and row select\n  useGlobalFilter, useSortBy, usePagination, useRowSelect); // destructure global filter and page index from state object\n\n  const {\n    globalFilter,\n    pageIndex\n  } = state; // data from selected row is stored here\n\n  let selectedRow = selectedFlatRows;\n  console.log(selectedRow);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.tableWrap,\n    children: loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolBarWrap,\n        children: /*#__PURE__*/_jsxDEV(TableFilter, {\n          filter: globalFilter,\n          setFilter: setGlobalFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column =>\n            /*#__PURE__*/\n            // render headers w/ sort functionality\n            _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCaretUp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 69\n                }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCaretDown\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 108\n                }, this) : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map(row => {\n            prepareRow(row);\n            return (\n              /*#__PURE__*/\n              // render table rows\n              _jsxDEV(\"tr\", { ...row.getRowProps(),\n                children: row.cells.map(cell => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    children: cell.render('Cell')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 30\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.pageButton,\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.pageNum,\n          children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [pageIndex + 1, \" of \", pageOptions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.pageButton,\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.spinnerWrap,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserTable, \"8qZA/dQuddMjNAi1IZMfV+GczKc=\", false, function () {\n  return [useTable];\n});\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/components/DataTables/Users/UserTable.js"],"names":["React","useMemo","useState","useEffect","useTable","useSortBy","useGlobalFilter","usePagination","useRowSelect","Table","axios","COLUMNS","TableFilter","classes","FontAwesomeIcon","faCaretUp","faCaretDown","Spinner","UserTable","users","setUsers","loaded","setLoaded","get","then","res","console","log","pathToData","data","result","Items","loadedData","Item","push","id","itemType","firstName","lastName","userId","email","phone","street","address","street1","city","state","zip","country","columns","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","prepareRow","selectedFlatRows","setGlobalFilter","globalFilter","pageIndex","selectedRow","tableWrap","toolBarWrap","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","pageButton","pageNum","length","spinnerWrap"],"mappings":"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","sourcesContent":["import React, {useMemo, useState, useEffect} from 'react';\r\nimport {\r\n  useTable, \r\n  useSortBy, \r\n  useGlobalFilter, \r\n  usePagination,\r\n  useRowSelect\r\n} from 'react-table';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from '../../../axios';\r\n\r\nimport {COLUMNS} from './columns';\r\n\r\nimport TableFilter from '../../UI/TableFilter/TableFilter';\r\n\r\nimport classes from './UserTable.module.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCaretUp} from '@fortawesome/free-solid-svg-icons';\r\nimport {faCaretDown} from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\n\r\nconst UserTable = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  // get data from api\r\n  useEffect(() => {\r\n    axios.get('/users').then(res => {\r\n      console.log(res);\r\n      const pathToData = res.data.result.Items\r\n      const loadedData = [];\r\n      \r\n      // push data objects into an array\r\n      for (const Item in pathToData) {\r\n        loadedData.push({\r\n          id: Item,\r\n          itemType: pathToData[Item].itemType,\r\n          firstName: pathToData[Item].firstName,\r\n          lastName: pathToData[Item].lastName,\r\n          userId: pathToData[Item].userId,\r\n          email: pathToData[Item].email,\r\n          phone: pathToData[Item].phone,\r\n          street: pathToData[Item].address.street1,\r\n          city: pathToData[Item].address.city,\r\n          state: pathToData[Item].address.state,\r\n          zip: pathToData[Item].address.zip,\r\n          country: pathToData[Item].address.country, \r\n        });\r\n      }\r\n      // update state\r\n      setUsers(loadedData);\r\n      setLoaded(true);\r\n    });\r\n  }, []);\r\n\r\n  // memoize data to ensure it is not duplicated on each render\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => users, [users]);\r\n\r\n  // create table instance\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    prepareRow,\r\n    selectedFlatRows,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns: columns,\r\n      data: data\r\n    },\r\n    // add sorting, filtering, pagination and row select\r\n    useGlobalFilter,  useSortBy, usePagination, useRowSelect,\r\n  );\r\n\r\n  // destructure global filter and page index from state object\r\n  const {globalFilter, pageIndex} =  state;\r\n\r\n  // data from selected row is stored here\r\n  let selectedRow = selectedFlatRows\r\n  console.log(selectedRow);\r\n\r\n  return (\r\n    <div className={classes.tableWrap}>\r\n      {/* if data is loaded, render table and associated components. if not, render loading spinner */}\r\n      {loaded ? \r\n        <div>\r\n          {/* render filter field, with globalFilter and setGlobalFilter passed as props */}\r\n          <div className={classes.toolBarWrap}>\r\n            {/* render filter field, with globalFilter and setGlobalFilter passed as props */}\r\n            <TableFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n          </div>\r\n\r\n          {/* render table */}\r\n          <Table {...getTableProps()} striped bordered hover>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map((column) => (\r\n                      // render headers w/ sort functionality\r\n                      <th {...column.getHeaderProps(column.getSortByToggleProps())}>  \r\n                        {column.render('Header')}\r\n                        <span>\r\n                          {column.isSorted ? (column.isSortedDesc ? <FontAwesomeIcon icon={faCaretUp} /> : <FontAwesomeIcon icon={faCaretDown} />) : ''}\r\n                        </span>\r\n                      </th>\r\n                    ))} \r\n                  </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {page.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                  // render table rows\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => {\r\n                      return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    })}\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n          <div>\r\n            {/* render pagination buttons */}\r\n            <button\r\n              className={classes.pageButton} \r\n              onClick={() => previousPage()}\r\n              disabled={!canPreviousPage}\r\n            >Previous</button>\r\n            <span className={classes.pageNum}>\r\n              Page{' '}\r\n              <strong>\r\n                {pageIndex + 1} of {pageOptions.length}\r\n              </strong>\r\n            </span>\r\n            <button\r\n              className={classes.pageButton} \r\n              onClick={() => nextPage()}\r\n              disabled={!canNextPage}\r\n            >Next</button>\r\n          </div>\r\n          <br/>\r\n        </div>\r\n      : \r\n        <div className={classes.spinnerWrap}>\r\n          <Spinner />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default UserTable"]},"metadata":{},"sourceType":"module"}