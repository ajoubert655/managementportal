{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\containers\\\\OrgForms\\\\OrgForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from '../../axios';\nimport classes from './OrgForm.module.css';\nimport RadioButton from '../../components/Form Inputs/RadioButton/RadioButton';\nimport Heading2 from '../../components/Form Inputs/Heading2/Heading2';\nimport Accordion from '../../components/Accordion/Accordion';\nimport Accordion2 from '../../components/Accordion/Accordion2';\nimport Accordion3 from '../../components/Accordion/Accordion3';\nimport Accordion4 from '../../components/Accordion/Accordion4';\nimport Accordion5 from '../../components/Accordion/Accodion5';\n\nclass OrgForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: true,\n      isOpen2: false,\n      isOpen3: false,\n      isOpen4: false,\n      isOpen5: false\n    };\n\n    this.onChange = isOpen => {\n      this.setState({\n        isOpen\n      });\n    };\n\n    this.onChange2 = isOpen2 => {\n      this.setState({\n        isOpen2\n      });\n    };\n\n    this.onChange3 = isOpen3 => {\n      this.setState({\n        isOpen3\n      });\n    };\n\n    this.onChange4 = isOpen4 => {\n      this.setState({\n        isOpen4\n      });\n    };\n\n    this.onChange5 = isOpen5 => {\n      this.setState({\n        isOpen5\n      });\n    };\n\n    this.state = {\n      description: '',\n      id: '',\n      //itemId: '',\n      itemType: '',\n      contact: null,\n      address: null,\n      configuration: null\n    };\n    let RadioVal1 = null;\n    let RadioVal2 = null;\n    let imgCapVal = null;\n    let idCapVal = null;\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleOrgIDChange = this.handleOrgIDChange.bind(this); // this.handleitemTypeChange = this.handleitemTypeChange.bind(this);\n    // this.handleitemIDChange = this.handleitemIDChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCChange = this.handleCChange.bind(this);\n    this.handleAChange = this.handleAChange.bind(this);\n    this.handleimgCapture = this.handleimgCapture.bind(this);\n    this.handleConfigChange = this.handleConfigChange.bind(this);\n    this.handleidCapture = this.handleidCapture.bind(this);\n    this.orgnameVal = this.orgnameVal.bind(this);\n    this.orgidVal = this.orgidVal.bind(this);\n    this.addresstypeVal = this.addresstypeVal.bind(this);\n    this.streetVal = this.streetVal.bind(this);\n    this.cityVal = this.cityVal.bind(this);\n    this.zipVal = this.zipVal.bind(this);\n    this.stateVal = this.stateVal.bind(this);\n    this.countryVal = this.countryVal.bind(this);\n    this.contacttypeVal = this.contacttypeVal.bind(this);\n    this.fnameVal = this.fnameVal.bind(this);\n    this.lnameVal = this.lnameVal.bind(this);\n    this.phoneVal = this.phoneVal.bind(this);\n    this.emailVal = this.emailVal.bind(this);\n    this.imgcaptureVal = this.imgcaptureVal.bind(this);\n    this.idcaptureVal = this.idcaptureVal.bind(this);\n    this.smoothingframeVal = this.smoothingframeVal.bind(this);\n    this.anomalydurationVal = this.anomalydurationVal.bind(this);\n    this.frameintervalVal = this.frameintervalVal.bind(this);\n    this.stateUpdate = this.stateUpdate.bind(this);\n    var countries = Object();\n    countries['Africa'] = '|Algeria|Angola|Benin|Botswana|Burkina Faso|Burundi|Cameroon|Cape Verde|Central African Republic|Chad|Comoros|Congo, Dem.|Congo, Rep.|Djibouti|Egypt|Equatorial Guinea|Eritrea|Ethiopia|Gabon|Gambia|Ghana|Guinea|Guinea-Bissau|Kenya|Lesotho|Liberia|Libya|Madagascar|Malawi|Mali|Mauritania|Mauritius|Morocco|Mozambique|Namibia|Niger|Nigeria|Rwanda|Sao Tome/Principe|Senegal|Seychelles|Sierra Leone|Somalia|South Africa|Sudan|Swaziland|Tanzania|Togo|Tunisia|Uganda|Zambia|Zimbabwe';\n    countries['Antarctica'] = '|Amundsen-Scott';\n    countries['Asia'] = '|Bangladesh|Bhutan|Brunei|Burma (Myanmar)|Cambodia|China|East Timor|India|Indonesia|Japan|Kazakhstan|Korea (north)|Korea (south)|Laos|Malaysia|Maldives|Mongolia|Nepal|Philippines|Russian Federation|Singapore|Sri Lanka|Taiwan|Thailand|Vietnam';\n    countries['Australia/Oceania'] = '|Australia|Fiji|Kiribati|Micronesia|Nauru|New Zealand|Palau|Papua New Guinea|Samoa|Tonga|Tuvalu|Vanuatu';\n    countries['Caribbean'] = '|Anguilla|Antigua/Barbuda|Aruba|Bahamas|Barbados|Cozumel|Cuba|Dominica|Dominican Republic|Grenada|Guadeloupe|Haiti|Jamaica|Martinique|Montserrat|Netherlands Antilles|Puerto Rico|St. Barts|St. Kitts/Nevis|St. Lucia|St. Martin/Sint Maarten|St Vincent/Grenadines|San Andres|Trinidad/Tobago|Turks/Caicos';\n    countries['Central America'] = '|Belize|Costa Rica|El Salvador|Guatemala|Honduras|Nicaragua|Panama';\n    countries['Europe'] = '|Albania|Andorra|Austria|Belarus|Belgium|Bosnia-Herzegovina|Bulgaria|Croatia|Czech Republic|Denmark|Estonia|Finland|France|Georgia|Germany|Greece|Hungary|Iceland|Ireland|Italy|Latvia|Liechtenstein|Lithuania|Luxembourg|Macedonia|Malta|Moldova|Monaco|Netherlands|Norway|Poland|Portugal|Romania|San Marino|Serbia/Montenegro (Yugoslavia)|Slovakia|Slovenia|Spain|Sweden|Switzerland|Ukraine|United Kingdom|Vatican City';\n    countries['Islands'] = '|Arctic Ocean|Atlantic Ocean (North)|Atlantic Ocean (South)|Assorted|Caribbean Sea|Greek Isles|Indian Ocean|Mediterranean Sea|Oceania|Pacific Ocean (North)|Pacific Ocean (South)';\n    countries['Middle East'] = '|Afghanistan|Armenia|Azerbaijan|Bahrain|Cyprus|Iran|Iraq|Israel|Jordan|Kuwait|Kyrgyzstan|Lebanon|Oman|Pakistan|Qatar|Saudi Arabia|Syria|Tajikistan|Turkey|Turkmenistan|United Arab Emirates|Uzbekistan|Yemen';\n    countries['North America'] = '|Bermuda|Canada|Greenland|Mexico|United States';\n    countries['South America'] = '|Argentina|Bolivia|Brazil|Chile|Colombia|Ecuador|Guyana|Paraguay|Peru|Suriname|Uruguay|Venezuela'; ////////////////////////////////////////////////////////////////////////////\n\n    var city_states = Object(); //Africa\n\n    city_states['Algeria'] = '|Algiers||Adrar|Ain Defla|Ain Temouchent|Alger|Annaba|Batna|Bechar|Bejaia|Biskra|Blida|Bordj Bou Arreridj|Bouira|Boumerdes|Chlef|Constantine|Djelfa|El Bayadh|El Oued|El Tarf|Ghardaia|Guelma|Illizi|Jijel|Khenchela|Laghouat|Mascara|Medea|Mila|Mostaganem|M\\'Sila|Naama|Oran|Ouargla|Oum el Bouaghi|Relizane|Saida|Setif|Sidi Bel Abbes|Skikda|Souk Ahras|Tamanghasset|Tebessa|Tiaret|Tindouf|Tipaza|Tissemsilt|Tizi Ouzou|Tlemcen';\n    city_states['Angola'] = '|Luanda||Bengo|Benguela|Bie|Cabinda|Cuando Cubango|Cuanza Norte|Cuanza Sul|Cunene|Huambo|Huila|Lunda Norte|Lunda Sul|Malanje|Moxico|Namibe|Uige|Zaire';\n    city_states['Benin'] = '|Porto-Novo||Alibori|Atakora|Atlantique|Borgou|Collines|Couffo|Donga|Littoral|Mono|Oueme|Plateau|Zou';\n    city_states['Botswana'] = '|Gaborone||Central|Chobe|Francistown|Ghanzi|Kgalagadi|Kgatleng|Kweneng|Lobatse|Ngamiland|North-East|Selebi-Pikwe|South-East|Southern';\n    city_states['Burkina Faso'] = '|Ouagadougou||Bale|Bam|Banwa|Bazega|Bougouriba|Boulgou|Boulkiemde|Comoe|Ganzourgou|Gnagna|Gourma|Houet|Ioba|Kadiogo|Kenedougou|Komandjari|Kompienga|Kossi|Koupelogo|Kouritenga|Kourweogo|Leraba|Loroum|Mouhoun|Nahouri|Namentenga|Nayala|Naumbiel|Oubritenga|Oudalan|Passore|Poni|Samentenga|Sanguie|Seno|Sissili|Soum|Sourou|Tapoa|Tuy|Yagha|Yatenga|Ziro|Zondomo|Zoundweogo';\n    city_states['Burundi'] = '|Bujumbura||Bubanza|Bujumbura|Bururi|Cankuzo|Cibitoke|Gitega|Karuzi|Kayanza|Kirundo|Makamba|Muramvya|Muyinga|Mwaro|Ngozi|Rutana|Ruyigi';\n    city_states['Cameroon'] = '|Yaounde||Adamaoua|Centre|Est|Extreme-Nord|Littoral|Nord|Nord-Ouest|Ouest|Sud|Sud-Ouest';\n    city_states['Cape Verde'] = '|Praia||Boa Vista|Brava|Calheta|Maio|Mosteiros|Paul|Porto Novo|Ribeira Grande|Sal|Santa Catarina|Santa Cruz|Sao Domingos|Sao Nicolau|Sao Filipe|Sao Vicente|Tarrafal';\n    city_states['Central African Republic'] = '|Bangui||Bamingui-Bangoran|Basse-Kotto|Gribingui|Haute-Kotto|Haute-Sangha|Haut-Mbomou|Kemo-Gribingui|Lobaye|Mbomou|Nana-Mambere|Ombella-Mpoko|Ouaka|Ouham|Ouham-Pende|Sangha|Vakaga';\n    city_states['Chad'] = '|N\\'Djamena||Assongha|Baguirmi|Bahr El Gazal|Bahr Koh|Batha Oriental|Batha Occidental|Biltine|Borkou|Dababa|Ennedi|Guera|Hadjer Lamis|Kabia|Kanem|Lac|Lac Iro|Logone Occidental|Logone Oriental|Mandoul|Mayo-Boneye|Mayo-Dallah|Monts de Lam|Ouaddai|Salamat|Sila|Tandjile Oriental|Tandjile Occidental|Tibesti';\n    city_states['Congo, Dem.'] = '|Kinshasa||Bandundu|Bas-Congo|Equateur|Kasai-Occidental|Kasai-Oriental|Katanga|Maniema|Nord-Kivu|Orientale|Sud-Kivu';\n    city_states['Congo, Rep.'] = '|Brazzaville||Bouenza|Cuvette|Kouilou|Lekoumou|Likouala|Niari|Plateaux|Pool|Sangha';\n    city_states['Djibouti'] = '|Djibouti||\\'Ali Sabih|Dikhil|Obock|Tadjoura';\n    city_states['Egypt'] = '|Cairo||Ad Daqahliyah|Al Bahr al Ahmar|Al Buhayrah|Al Fayyum|Al Gharbiyah|Al Iskandariyah|Al Isma\\'iliyah|Al Jizah|Al Minufiyah|Al Minya|Al Qahirah|Al Qalyubiyah|Al Wadi al Jadid|Ash Sharqiyah|As Suways|Aswan|Asyut|Bani Suwayf|Bur Sa\\'id|Dumyat|Janub Sina\\'|Kafr ash Shaykh|Matruh|Qina|Shamal Sina\\'|Suhaj';\n    city_states['Equatorial Guinea'] = '|Malabo||Annobon|Bioko Norte|Bioko Sur|Centro Sur|Kie-Ntem|Litoral|Wele-Nzas';\n    city_states['Eritrea'] = '|Asmara||Central|Anelba|Southern Red Sea|Northern Red Sea|Southern|Gash-Barka';\n    city_states['Ethiopia'] = '|Addis Ababa||Adis Abeba (Addis Ababa)|Afar|Amara|Binshangul Gumuz|Dire Dawa|Gambela Hizboch|Hareri Hizb|Oromiya|Sumale (Somali)|Tigray|YeDebub Biheroch Bihereseboch...';\n    city_states['Gabon'] = '|Libreville';\n    city_states['Gambia'] = '|Estuaire|Haut-Ogooue|Moyen-Ogooue|Ngounie|Nyanga|Ogooue-Ivindo|Ogooue-Lolo|Ogooue-Maritime|Woleu-Ntem';\n    city_states['Ghana'] = '|Accra||Ashanti|Brong-Ahafo|Central|Eastern|Northern|Upper East|Upper West|Volta|Western';\n    city_states['Guinea'] = '|Conakry||Beyla|Boffa|Boke|Coyah|Dabola|Dalaba|Dinguiraye|Dubreka|Faranah|Forecariah|Fria|Gaoual|Gueckedou|Kankan|Kerouane|Kindia|Kissidougou|Koubia|Koundara|Kouroussa|Labe|Lelouma|Lola|Macenta|Mali|Mamou|Mandiana|Nzerekore|Pita|Siguiri|Telimele|Tougue|Yomou';\n    city_states['Guinea-Bissau'] = '|Bissau||Bafata|Biombo|Bolama/Bijagos|Cacheu|Gabu|Oio|Quinara|Tombali';\n    city_states['Kenya'] = '|Nairobi||Central|Coast|Eastern|Nairobi Area|North Eastern|Nyanza|Rift Valley|Western';\n    city_states['Lesotho'] = '|Maseru||Berea|Butha-Buthe|Leribe|Mafeteng|Mohales Hoek|Mokhotlong|Qacha\\'s Nek|Quthing|Thaba-Tseka';\n    city_states['Liberia'] = '|Monrovia||Bomi|Bong|Gparbolu|Grand Bassa|Grand Cape Mount|Grand Gedeh|Grand Kru|Lofa|Margibi|Maryland|Montserrado|Nimba|River Cess|River Gee|Sinoe';\n    city_states['Libya'] = '|Tripoli||Ajdabiya|Al \\'Aziziyah|Al Fatih|Al Jabal al Akhdar|Al Jufrah|Al Khums|Al Kufrah|An Nuqat al Khams|Ash Shati\\'|Awbari|Az Zawiyah|Banghazi|Darnah|Ghadamis|Gharyan|Misratah|Murzuq|Sabha|Sawfajjin|Surt|Tarabulus|Tarhunah|Tubruq|Yafran|Zlitan';\n    city_states['Madagascar'] = '|Antananarivo||Antsiranana|Fianarantsoa|Mahajanga|Toamasina|Toliara';\n    city_states['Malawi'] = '|Lilongwe||Balaka|Blantyre|Chikwawa|Chiradzulu|Chitipa|Dedza|Dowa|Karonga|Kasungu|Likoma|Machinga (Kasupe)|Mangochi|Mchinji|Mulanje|Mwanza|Mzimba|Ntcheu|Nkhata Bay|Nkhotakota|Nsanje|Ntchisi|Phalombe|Rumphi|Salima|Thyolo|Zomba';\n    city_states['Mali'] = '|Bamako||Gao|Kayes|Kidal|Koulikoro|Mopti|Segou|Sikasso|Tombouctou';\n    city_states['Mauritania'] = '|Nouakchott||Adrar|Assaba|Brakna|Dakhlet Nouadhibou|Gorgol|Guidimaka|Hodh Ech Chargui|Hodh El Gharbi|Inchiri|Tagant|Tiris Zemmour|Trarza';\n    city_states['Mauritius'] = '|Port Louis||Agalega Islands|Black River|Cargados Carajos Shoals|Flacq|Grand Port|Moka|Pamplemousses|Plaines Wilhems|Riviere du Rempart|Rodrigues|Savanne';\n    city_states['Morocco'] = '|Rabat||Ad Dakhla (Oued Eddahab)|Agadir|Al Hoceima|Azilal|Beni Mellal|Ben Slimane|Boujdour|Boulemane|Casablanca|Chaouen|El Jadida|El Kelaa des Sraghna|Er Rachidia|Essaouira|Es Smara|Fes|Figuig|Guelmim|Ifrane|Kenitra|Khemisset|Khenifra|Khouribga|Laayoune|Larache|Marrakech|Meknes|Nador|Ouarzazate|Oujda|Safi|Settat|Sidi Kacem|Tanger|Tan-Tan|Taounate|Taroudannt|Tata|Taza|Tetouan|Tiznit';\n    city_states['Mozambique'] = '|Maputo||Cabo Delgado|Gaza|Inhambane|Manica|Maputo|Nampula|Niassa|Sofala|Tete|Zambezia';\n    city_states['Namibia'] = '|Windhoek||Caprivi|Erongo|Hardap|Karas|Khomas|Kunene|Ohangwena|Okavango|Omaheke|Omusati|Oshana|Oshikoto|Otjozondjupa';\n    city_states['Niger'] = '|Niamey||Agadez|Diffa|Dosso|Maradi|Tahoua|Tillaberi|Zinder';\n    city_states['Nigeria'] = '|Abuja||Abia|Adamawa|Akwa Ibom|Anambra|Bauchi|Bayelsa|Benue|Borno|Cross River|Delta|Ebonyi|Edo|Ekiti|Enugu|Gombe|Imo|Jigawa|Kaduna|Kano|Katsina|Kebbi|Kogi|Kwara|Lagos|Nassarawa|Niger|Ogun|Ondo|Osun|Oyo|Plateau|Rivers|Sokoto|Taraba|Yobe|Zamfara';\n    city_states['Rwanda'] = '|Kigali||Butare|Byumba|Cyangugu|Gikongoro|Gisenyi|Gitarama|Kibungo|Kibuye|Ruhengeri|Umutara';\n    city_states['Sao Tome/Principe'] = '|Sao Tome||Principe';\n    city_states['Senegal'] = '|Dakar||Diourbel|Fatick|Kaolack|Kolda|Louga|Matam|Saint-Louis|Tambacounda|Thies|Ziguinchor';\n    city_states['Seychelles'] = '|Victoria||Anse aux Pins|Anse Boileau|Anse Etoile|Anse Louis|Anse Royale|Baie Lazare|Baie Sainte Anne|Beau Vallon|Bel Air|Bel Ombre|Cascade|Glacis|Grand\\' Anse (on Mahe)|Grand\\' Anse (on Praslin)|La Digue|La Riviere Anglaise|Mont Buxton|Mont Fleuri|Plaisance|Pointe La Rue|Port Glaud|Saint Louis|Takamaka';\n    city_states['Sierra Leone'] = '|Freetown||Eastern|Northern|Southern|Western';\n    city_states['Somalia'] = '|Mogadishu||Awdal|Bakool|Banaadir|Bari|Bay|Galguduud|Gedo|Hiiraan|Jubbada Dhexe|Jubbada Hoose|Mudug|Nugaal|Sanaag|Shabeellaha Dhexe|Shabeellaha Hoose|Sool|Togdheer|Woqooyi Galbeed';\n    city_states['South Africa'] = '|Pretoria||Eastern Cape|Free State|Gauteng|KwaZulu-Natal|Mpumalanga|North-West|Northern Cape|Northern Province/Limpopo|Western Cape';\n    city_states['Sudan'] = '|Khartoum||A\\'ali an Nil|Al Bahr al Ahmar|Al Buhayrat|Al Jazirah|Al Khartum|Al Qadarif|Al Wahdah|An Nil al Abyad|An Nil al Azraq|Ash Shamaliyah|Bahr al Jabal|Gharb al Istiwa\\'iyah|Gharb Bahr al Ghazal|Gharb Darfur|Gharb Kurdufan|Janub Darfur|Janub Kurdufan|Junqali|Kassala|Nahr an Nil|Shamal Bahr al Ghazal|Shamal Darfur|Shamal Kurdufan|Sharq al Istiwa\\'iyah|Sinnar|Warab';\n    city_states['Swaziland'] = '|Lobamba/Mbabane||Hhohho|Lubombo|Manzini|Shiselweni';\n    city_states['Tanzania'] = '|Dodoma||Arusha|Dar es Salaam|Iringa|Kagera|Kigoma|Kilimanjaro|Lindi|Mara|Mbeya|Morogoro|Mtwara|Mwanza|Pemba North|Pemba South|Pwani|Rukwa|Ruvuma|Shinyanga|Singida|Tabora|Tanga|Zanzibar Central/South|Zanzibar North|Zanzibar Urban/West';\n    city_states['Togo'] = '|Lome||De La Kara|Des Plateaux|Des Savanes|Centrale|Maritime';\n    city_states['Tunisia'] = '|Tunis||Ariana|Beja|Ben Arous|Bizerte|El Kef|Gabes|Gafsa|Jendouba|Kairouan|Kasserine|Kebili|Mahdia|Medenine|Monastir|Nabeul|Sfax|Sidi Bou Zid|Siliana|Sousse|Tataouine|Tozeur|Zaghouan';\n    city_states['Uganda'] = '|Kampala||Adjumani|Apac|Arua|Bugiri|Bundibugyo|Bushenyi|Busia|Gulu|Hoima|Iganga|Jinja|Kabale|Kabarole|Kaberamaido|Kalangala|Kamuli|Kamwenge|Kanungu|Kapchorwa|Kasese|Katakwi|Kayunga|Kibale|Kiboga|Kisoro|Kitgum|Kotido|Kumi|Kyenjojo|Lira|Luwero|Masaka|Masindi|Mayngc|Mbale|Mbarara|Moroto|Moyo|Mpigi|Mubende|Mukono|Nakapiripiti|Nakasongola|Nebbi|Ntungamo|Pader|Pallisa|Rakai|Rukungiri|Sembabule|Sironko|Soroti|Tororo|Wakiso|Yumbe';\n    city_states['Zambia'] = '|Lusaka||Central|Copperbelt|Eastern|Luapula|Lusaka|Northern|North-Western|Southern|Western';\n    city_states['Zimbabwe'] = '|Harare||Bulawayo|Manicaland|Mashonaland Central|Mashonaland East|Mashonaland West|Masvingo|Matabeleland North|Matabeleland South|Midlands'; //Asia\n\n    city_states['Bangladesh'] = '|Dhaka||Barisal|Chittagong|Khulna|Rajshahi|Sylhet';\n    city_states['Bhutan'] = '|Thimphu||Bumthang|Chhukha|Chirang|Dagana|Gasa|Geylegphug|Ha|Lhuntshi|Mongar|Paro|Pemagatsel|Punakha|Samchi|Samdrup Jongkhar|Shemgang|Tashigang|Tongsa|Wangdi Phodrang|Yangtse';\n    city_states['Brunei'] = '|Bandar Seri Begawan||Belait|Brunei/Muara|Temburong|Tutong';\n    city_states['Burma (Myanmar)'] = '|Rangoon||Ayeyarwady|Bago|Chin|Kachin|Kayin|Kayah|Magway|Mandalay|Mon|Rakhine|Sagaing|Shan|Tanintharyi|Yangon';\n    city_states['Cambodia'] = '|Phnom Penh||Banteay Mean Cheay|Batdambang|Kampong Cham|Kampong Chhnang|Kampong Spoe|Kampong Thum|Kampot|Kandal|Kaoh Kong|Keb|Kracheh|Mondol Kiri|Otdar Mean Cheay|Pailin|Pouthisat|Preah Seihanu (Sihanoukville)|Preah Vihear|Prey Veng|Rotanah Kiri|Siem Reab|Stoeng Treng|Svay Rieng|Takev';\n    city_states['China'] = '|Beijing||Anhui|Chongqing|Fujian|Gansu|Guangdong|Guangxi|Guizhou|Hainan|Hebei|Heilongjiang|Henan|Hubei|Hunan|Jiangsu|Jiangxi|Jilin|Liaoning|Nei Mongol|Ningxia|Qinghai|Shaanxi|Shandong|Shanghai|Shanxi|Sichuan|Tianjin|Xinjiang|Xizang (Tibet)|Yunnan|Zhejiang';\n    city_states['East Timor'] = '|Dili||Aileu|Ainaro|Baucau|Bobonaro (Maliana)|Cova-Lima (Suai)|Ermera|Lautem (Los Palos)|Liquica|Manatuto|Manufahi (Same)|Oecussi (Ambeno)|Viqueque';\n    city_states['India'] = '|New Delhi||Andaman/Nicobar Islands|Andhra Pradesh|Arunachal Pradesh|Assam|Bihar|Chandigarh|Chhattisgarh|Dadra/Nagar Haveli|Daman/Diu|Goa|Gujarat|Haryana|Himachal Pradesh|Jammu/Kashmir|Jharkhand|Karnataka|Kerala|Lakshadweep|Madhya Pradesh|Maharashtra|Manipur|Meghalaya|Mizoram|Nagaland|Orissa|Pondicherry|Punjab|Rajasthan|Sikkim|Tamil Nadu|Tripura|Uttaranchal|Uttar Pradesh|West Bengal';\n    city_states['Indonesia'] = '|Jakarta||Aceh|Bali|Banten|Bengkulu|Gorontalo|Jakarta Raya|Jambi|Jawa Barat|Jawa Tengah|Jawa Timur|Kalimantan Barat|Kalimantan Selatan|Kalimantan Tengah|Kalimantan Timur|Kepulauan Bangka Belitung|Lampung|Maluku|Maluku Utara|Nusa Tenggara Barat|Nusa Tenggara Timur|Papua|Riau|Sulawesi Selatan|Sulawesi Tengah|Sulawesi Tenggara|Sulawesi Utara|Sumatera Barat|Sumatera Selatan|Sumatera Utara|Yogyakarta';\n    city_states['Japan'] = '|Tokyo||Aichi|Akita|Aomori|Chiba|Ehime|Fukui|Fukuoka|Fukushima|Gifu|Gumma|Hiroshima|Hokkaido|Hyogo|Ibaraki|Ishikawa|Iwate|Kagawa|Kagoshima|Kanagawa|Kochi|Kumamoto|Kyoto|Mie|Miyagi|Miyazaki|Nagano|Nagasaki|Nara|Niigata|Oita|Okayama|Okinawa|Osaka|Saga|Saitama|Shiga|Shimane|Shizuoka|Tochigi|Tokushima|Tokyo|Tottori|Toyama|Wakayama|Yamagata|Yamaguchi|Yamanashi';\n    city_states['Kazakhstan'] = '|Astana||Almaty|Almaty|Aqmola|Aqtobe|Astana|Atyrau|Batys Qazaqstan|Bayqongyr|Mangghystau|Ongtustik Qazaqstan|Pavlodar|Qaraghandy|Qostanay|Qyzylorda|Shyghys Qazaqstan|Soltustik Qazaqstan|Zhambyl';\n    city_states['Korea (north)'] = '|P\\'yongyang||Chagang-do|Hamgyong-bukto|Hamgyong-namdo|Hwanghae-bukto|Hwanghae-namdo|Kaesong-si|Kangwon-do|Najin Sonbong-si|Namp\\'o-si|P\\'yongan-bukto|P\\'yongan-namdo|P\\'yongyang-si|Yanggang-do';\n    city_states['Korea (south)'] = '|Seoul||Cheju-do|Cholla-bukto|Cholla-namdo|Ch\\'ungch\\'ong-bukto|Ch\\'ungch\\'ong-namdo|Inch\\'on-gwangyoksi|Kangwon-do|Kwangju-gwangyoksi|Kyonggi-do|Kyongsang-bukto|Kyongsang-namdo|Pusan-gwangyoksi|Soul-t\\'ukpyolsi|Taegu-gwangyoksi|Taejon-gwangyoksi|Ulsan-gwangyoksi';\n    city_states['Laos'] = '|Vientiane||Attapu|Bokeo|Bolikhamxai|Champasak|Houaphan|Khammouan|Louangnamtha|Louangphabang|Oudomxai|Phongsali|Salavan|Savannakhet|Viangchan|Viangchan|Xaignabouli|Xaisomboun|Xekong|Xiangkhoang';\n    city_states['Malaysia'] = '|Kuala Lumpur||Johor|Kedah|Kelantan|Labuan|Melaka|Negeri Sembilan|Pahang|Perak|Perlis|Pulau Pinang|Putrajaya|Sabah|Sarawak|Selangor|Terengganu|Wilayah Persekutuan';\n    city_states['Maldives'] = '|Maale||Alifu|Baa|Dhaalu|Faafu|Gaafu Alifu|Gaafu Dhaalu|Gnaviyani|Haa Alifu|Haa Dhaalu|Kaafu|Laamu|Lhaviyani|Meemu|Noonu|Raa|Seenu|Shaviyani|Thaa|Vaavu';\n    city_states['Mongolia'] = '|Ulaanbaatar||Arhangay|Bayanhongor|Bayan-Olgiy|Bulgan|Darhan Uul|Dornod|Dornogovi|Dundgovi|Dzavhan|Govi-Altay|Govi-Sumber|Hentiy|Hovd|Hovsgol|Omnogovi|Orhon|Ovorhangay|Selenge|Suhbaatar|Tov|Uvs';\n    city_states['Nepal'] = '|Kathmandu||Bagmati|Bheri|Dhawalagiri|Gandaki|Janakpur|Karnali|Kosi|Lumbini|Mahakali|Mechi|Narayani|Rapti|Sagarmatha|Seti';\n    city_states['Philippines'] = '|Manila||Oriental|North Cotabato|Northern Samar|Nueva Ecija|Nueva Vizcaya|Olongapo|Ormoc|Oroquieta|Ozamis|Pagadian|Palawan|Palayan|Pampanga|Pangasinan|Pasay|Puerto Princesa|Quezon|Quezon City|Quirino|Rizal|Romblon|Roxas|Samar|San Carlos (Negros Occidental)|San Carlos (Pangasinan)|San Jose|San Pablo|Silay|Siquijor|Sorsogon|South Cotabato|Southern Leyte|Sultan Kudarat|Sulu|Surigao|Surigao del Norte|Surigao del Sur|Tacloban|Tagaytay|Tagbilaran|Tangub|Tarlac|Tawi-Tawi|Toledo|Trece Martires|Zambales|Zamboanga|Zamboanga del Norte|Zamboanga del Sur';\n    city_states['Russian Federation'] = '|Moskva (Moscow)||Adygeya (Maykop)|Aginskiy Buryatskiy (Aginskoye)|Altay (Gorno-Altaysk)|Altayskiy (Barnaul)|Amurskaya (Blagoveshchensk)|Arkhangel\\'skaya|Astrakhanskaya|Bashkortostan (Ufa)|Belgorodskaya|Bryanskaya|Buryatiya (Ulan-Ude)|Chechnya (Groznyy)|Chelyabinskaya|Chitinskaya|Chukotskiy (Anadyr\\')|Chuvashiya (Cheboksary)|Dagestan (Makhachkala)|Evenkiyskiy (Tura)|Ingushetiya (Nazran\\')|Irkutskaya|Ivanovskaya|Kabardino-Balkariya (Nal\\'chik)|Kaliningradskaya|Kalmykiya (Elista)|Kaluzhskaya|Kamchatskaya (Petropavlovsk-Kamchatskiy)|Karachayevo-Cherkesiya (Cherkessk)|Kareliya (Petrozavodsk)|Kemerovskaya|Khabarovskiy|Khakasiya (Abakan)|Khanty-Mansiyskiy (Khanty-Mansiysk)|Kirovskaya|Komi (Syktyvkar)|Koryakskiy (Palana)|Kostromskaya|Krasnodarskiy|Krasnoyarskiy|Kurganskaya|Kurskaya|Leningradskaya|Lipetskaya|Magadanskaya|Mariy-El (Yoshkar-Ola)|Mordoviya (Saransk)|Moskovskaya|Murmanskaya|Nenetskiy (Nar\\'yan-Mar)|Nizhegorodskaya|Novgorodskaya|Novosibirskaya|Omskaya|Orenburgskaya|Orlovskaya (Orel)|Penzenskaya|Permskaya|Komi-Permyatskiy (Kudymkar)|Primorskiy (Vladivostok)|Pskovskaya|Rostovskaya|Ryazanskaya|Sakha (Yakutiya)|Sakhalinskaya (Yuzhno-Sakhalinsk)|Samarskaya|Sankt-Peterburg (Saint Petersburg)|Saratovskaya|Severnaya Osetiya-Alaniya [North Ossetia] (Vladikavkaz)|Smolenskaya|Stavropol\\'skiy|Sverdlovskaya (Yekaterinburg)|Tambovskaya|Tatarstan (Kazan\\')|Taymyrskiy (Dudinka)|Tomskaya|Tul\\'skaya|Tverskaya|Tyumenskaya|Tyva (Kyzyl)|Udmurtiya (Izhevsk)|Ul\\'yanovskaya|Ust\\'-Ordynskiy Buryatskiy (Ust\\'-Ordynskiy)|Vladimirskaya|Volgogradskaya|Vologodskaya|Voronezhskaya|Yamalo-Nenetskiy (Salekhard)|Yaroslavskaya|Yevreyskaya';\n    city_states['Singapore'] = '';\n    city_states['Sri Lanka'] = '|Colombo||Central|North Central|Northern|Eastern|North Western|Sabaragamuwa|Southern|Uva|Western';\n    city_states['Taiwan'] = '|Taipei||Chang-hua|Chia-i|Chi-lung|Chung-hsing-hsin-ts\\'un|Hsin-chu|Hua-lien|I-lan|Kao-hsiung|Miao-li|Nan-t\\'ou|P\\'eng-hu|P\\'ing-tung|T\\'ai-chung|T\\'ai-nan|T\\'ai-pei|T\\'ai-tung|T\\'ao-yuan/Yun-lin';\n    city_states['Thailand'] = '|Bangkok||Amnat Charoen|Ang Thong|Buriram|Chachoengsao|Chai Nat|Chaiyaphum|Chanthaburi|Chiang Mai|Chiang Rai|Chon Buri|Chumphon|Kalasin|Kamphaeng Phet|Kanchanaburi|Khon Kaen|Krabi|Lampang|Lamphun|Loei|Lop Buri|Mae Hong Son|Maha Sarakham|Mukdahan|Nakhon Nayok|Nakhon Pathom|Nakhon Phanom|Nakhon Ratchasima|Nakhon Sawan|Nakhon Si Thammarat|Nan|Narathiwat|Nong Bua Lamphu|Nong Khai|Nonthaburi|Pathum Thani|Pattani|Phangnga|Phatthalung|Phayao|Phetchabun|Phetchaburi|Phichit|Phitsanulok|Phra Nakhon Si Ayutthaya|Phrae|Phuket|Prachin Buri|Prachuap Khiri Khan|Ranong|Ratchaburi|Rayong|Roi Et|Sa Kaeo|Sakon Nakhon|Samut Prakan|Samut Sakhon|Samut Songkhram|Sara Buri|Satun|Sing';\n    city_states['Vietnam'] = '|Hanoi||An Giang|Bac Giang|Bac Kan|Bac Lieu|Bac Ninh|Ba Ria-Vung Tau|Ben Tre|Binh Dinh|Binh Duong|Binh Phuoc|Binh Thuan|Ca Mau|Can Tho|Cao Bang|Dac Lak|Da Nang|Dong Nai|Dong Thap|Gia Lai|Ha Giang|Hai Duong|Hai Phong|Ha Nam|Ha Noi|Ha Tay|Ha Tinh|Hoa Binh|Ho Chi Minh|Hung Yen|Khanh Hoa|Kien Giang|Kon Tum|Lai Chau|Lam Dong|Lang Son|Lao Cai|Long An|Nam Dinh|Nghe An|Ninh Binh|Ninh Thuan|Phu Tho|Phu Yen|Quang Binh|Quang Nam|Quang Ngai|Quang Ninh|Quang Tri|Soc Trang|Son La|Tay Ninh|Thai Binh|Thai Nguyen|Thanh Hoa|Thua Thien-Hue|Tien Giang|Tra Vinh|Tuyen Quang|Vinh Long|Vinh Phuc|Yen Bai'; //Australia-Oceania\n\n    city_states['Australia'] = '|Canberra||Australian Capital Territory|New South Wales|Northern Territory|Queensland|South Australia|Tasmania|Victoria|Western Australia';\n    city_states['Fiji'] = '|Suva||Central|Eastern|Northern|Rotuma|Western';\n    city_states['Kiribati'] = '|Tarawa||Abaiang|Abemama|Aranuka|Arorae|Banaba|Beru|Butaritari|Gilberts (Central)|Gilberts (Northern)|Gilberts (Southern)|Kanton|Kiritimati|Kuria|Line Islands|Maiana|Makin|Marakei|Nikunau|Nonouti|Onotoa|Phoenix Islands|Tabiteuea|Tabuaeran|Tamana|Teraina';\n    city_states['Micronesia'] = '|Palikir||Chuuk (Truk)|Kosrae|Pohnpei|Yap';\n    city_states['Nauru'] = '|Yaren||Aiwo|Anabar|Anetan|Anibare|Baiti|Boe|Buada|Denigomodu|Ewa|Ijuw|Meneng|Nibok|Uaboe';\n    city_states['New Zealand'] = '|Wellington||Akaroa|Amuri|Ashburton|Auckland|Banks Peninsula|Bay of Islands|Bay of Plenty|Bruce|Buller|Canterbury|Carterton|Chatham Islands|Cheviot|Christchurch|Clifton|Clutha|Cook|Dannevirke|Dunedin|Egmont|Eketahuna|Ellesmere|Eltham|Eyre|Far North|Featherston|Franklin|Gisborne|Golden Bay|Gore|Great Barrier Island|Grey|Hamilton|Hastings|Hauraki Plains|Hawera|Hawke\\'s Bay|Heathcote|Hikurangi|Hobson|Hokianga|Horowhenua|Hurunui|Hutt|Inangahua|Inglewood|Invercargill|Kaikoura|Kaipara|Kairanga|Kapiti Coast|Kawerau|Kiwitea|Lake|Mackenzie|Malvern|Manaia|Manawatu|Mangonui|Maniototo|Manukau|Marlborough|Masterton|Matamata|Matamata Piako|Mount Herbert|Napier|Nelson|Nelson|New Plymouth|Northland|North Shore|Ohinemuri|Opotiki|Oroua|Otago|Otamatea|Otorohanga|Oxford|Palmerston North|Pahiatua|Papakura|Paparua|Patea|Piako|Pohangina|Porirua|Queenstown Lakes|Raglan|Rangiora|Rangitikei|Rodney|Rotorua|Ruapehu|Runanga|Saint Kilda|Selwyn|Silverpeaks|Southland|South Taranaki|South Waikato|South Wairarapa|Stewart Island|Stratford|Strathallan|Taranaki|Tararua|Tasman|Taumarunui|Taupo|Tauranga|Thames Coromandel|Timaru|Tuapeka|Upper Hutt|Vincent|Waiapu|Waiheke|Waihemo|Waikato|Waikohu|Waimairi|Waimarino|Waimate|Waimate West|Waimea|Waipa|Waipawa|Waipukurau|Wairarapa South|Wairewa|Wairoa|Waitakere|Waitaki|Waitomo|Waitotara|Wallace|Wanganui|Wanganui-Manawatu|Waverley|West Coast|Western Bay of Plenty|Westland|Whakatane|Whangarei|Whangaroa|Woodville';\n    city_states['Palau'] = '|Koror||Aimeliik|Airai|Angaur|Hatobohei|Kayangel|Melekeok|Ngaraard|Ngarchelong|Ngardmau|Ngatpang|Ngchesar|Ngeremlengui|Ngiwal|Peleliu|Sonsoral';\n    city_states['Papua New Guinea'] = '|Port Moresby||Bougainville|Central|Chimbu|Eastern Highlands|East New Britain|East Sepik|Enga|Gulf|Madang|Manus|Milne Bay|Morobe|National Capital|New Ireland|Northern|Sandaun|Southern Highlands|Western|Western Highlands|West New Britain';\n    city_states['Samoa'] = '|Apia||A\\'ana|Aiga-i-le-Tai|Atua|Fa\\'asaleleaga|Gaga\\'emauga|Gagaifomauga|Palauli|Satupa\\'itea|Tuamasaga|Va\\'a-o-Fonoti|Vaisigano';\n    city_states['Tonga'] = '|Nuku\\'alofa||Ha\\'apai|Tongatapu|Vava\\'u';\n    city_states['Tuvalu'] = '|Fongafale';\n    city_states['Vanuatu'] = '|Port-Vila||Malampa|Penama|Sanma|Shefa|Tafea|Torba'; //Caribbean\n\n    city_states['Anguilla'] = '|The Valley';\n    city_states['Antigua/Barbuda'] = '|Saint John||Barbuda|Redonda|Saint George|Saint Mary|Saint Paul|Saint Peter|Saint Philip';\n    city_states['Aruba'] = '|Oranjestad';\n    city_states['Bahamas'] = '|Nassau||Acklins/Crooked Islands|Bimini|Cat Island|Exuma|Freeport|Fresh Creek|Governor\\'s Harbour|Green Turtle Cay|Harbour Island|High Rock|Inagua|Kemps Bay|Long Island|Marsh Harbour|Mayaguana|New Providence|Nichollstown/Berry Islands|Ragged Island|Rock Sound|Sandy Point|San Salvador/Rum Cay';\n    city_states['Barbados'] = '|Bridgetown||Christ Church|Saint Andrew|Saint George|Saint James|Saint John|Saint Joseph|Saint Lucy|Saint Michael|Saint Peter|Saint Philip|Saint Thomas';\n    city_states['Cuba'] = '|Havana||Camaguey|Ciego de Avila|Cienfuegos|Ciudad de La Habana|Granma|Guantanamo|Holguin|Isla de la Juventud|La Habana|Las Tunas|Matanzas|Pinar del Rio|Sancti Spiritus|Santiago de Cuba|Villa Clara';\n    city_states['Dominica'] = '|Roseau||Saint Andrew|Saint David|Saint George|Saint John|Saint Joseph|Saint Luke|Saint Mark|Saint Patrick|Saint Paul|Saint Peter';\n    city_states['Dominican Republic'] = '|Santo Domingo||Azua|Baoruco|Barahona|Dajabon|Distrito Nacional|Duarte|Elias Pina|El Seibo|Espaillat|Hato Mayor|Independencia|La Altagracia|La Romana|La Vega|Maria Trinidad Sanchez|Monsenor Nouel|Monte Cristi|Monte Plata|Pedernales|Peravia|Puerto Plata|Salcedo|Samana|Sanchez Ramirez|San Cristobal|San Juan|San Pedro de Macoris|Santiago|Santiago Rodriguez|Valverde';\n    city_states['Grenada'] = '|Saint George\\'s||Carriacou/Petit Martinique|Saint Andrew|Saint David|Saint John|Saint Mark|Saint Patrick';\n    city_states['Guadeloupe'] = '|Basse-Terre';\n    city_states['Haiti'] = '|Port-au-Prince||Artibonite|Centre|Grand \\'Anse|Nord|Nord-Est|Nord-Ouest|Ouest|Sud|Sud-Est';\n    city_states['Jamaica'] = '|Kingston||Clarendon|Hanover|Manchester|Portland|Saint Andrew|Saint Ann|Saint Catherine|Saint Elizabeth|Saint James|Saint Mary|Saint Thomas|Trelawny|Westmoreland';\n    city_states['Martinique'] = '|Fort-de-France';\n    city_states['Montserrat'] = '|Brades Estate|Plymouth||Saint Anthony|Saint Georges|Saint Peter';\n    city_states['Netherlands Antilles'] = '|Willemstad';\n    city_states['Puerto Rico'] = '|San Juan||Adjuntas|Aguada|Aguadilla|Aguas Buenas|Aibonito|Anasco|Arecibo|Arroyo|Barceloneta|Barranquitas|Bayamon|Cabo Rojo|Caguas|Camuy|Canovanas|Carolina|Catano|Cayey|Ceiba|Ciales|Cidra|Coamo|Comerio|Corozal|Culebra|Dorado|Fajardo|Florida|Guanica|Guayama|Guayanilla|Guaynabo|Gurabo|Hatillo|Hormigueros|Humacao|Isabela|Jayuya|Juana Diaz|Juncos|Lajas|Lares|Las Marias|Las Piedras|Loiza|Luquillo|Manati|Maricao|Maunabo|Mayaguez|Moca|Morovis|Naguabo|Naranjito|Orocovis|Patillas|Penuelas|Ponce|Quebradillas|Rincon|Rio Grande|Sabana Grande|Salinas|San German|San Lorenzo|San Sebastian|Santa Isabel|Toa Alta|Toa Baja|Trujillo Alto|Utuado|Vega Alta|Vega Baja|Vieques|Villalba|Yabucoa|Yauco';\n    city_states['St. Barts'] = '';\n    city_states['St. Kitts/Nevis'] = '|Basseterre||Christ Church Nichola Town|St. Anne Sandy Point|St. George Basseterre|St. George Gingerland|St. James Windward|St. John Capesterre|St. John Figtree|St. Mary Cayon|St. Paul Capesterre|St. Paul Charlestown|St. Peter Basseterre|St. Thomas Lowland|St. Thomas Middle Island|Trinity Palmetto Point';\n    city_states['St. Lucia'] = '|Castries||Anse-la-Raye|Castries|Choiseul|Dauphin|Dennery|Gros-Islet|Laborie|Micoud|Praslin|Soufriere|Vieux-Fort';\n    city_states['St. Martin/Sint Maarten'] = '';\n    city_states['St Vincent/Grenadines'] = '|Kingstown||Charlotte|Grenadines|Saint Andrew|Saint David|Saint George|Saint Patrick';\n    city_states['San Andres'] = '';\n    city_states['Trinidad/Tobago'] = '|Port-of-Spain||Arima|Caroni|Mayaro|Nariva|Saint Andrew|Saint David|Saint George|Saint Patrick|San Fernando|Tobago|Victoria';\n    city_states['Turks/Caicos'] = '|Grand Turk (Cockburn Town)'; //Central America\n\n    city_states['Belize'] = '|Belmopan||Belize|Cayo|Corozal|Orange Walk|Stann Creek|Toledo';\n    city_states['Costa Rica'] = '|San Jose||Alajuela|Cartago|Guanacaste|Heredia|Limon|Puntarenas';\n    city_states['El Salvador'] = '|San Salvador||Ahuachapan|Cabanas|Chalatenango|Cuscatlan|La Libertad|La Paz|La Union|Morazan|San Miguel|Santa Ana|San Vicente|Sonsonate|Usulutan';\n    city_states['Guatemala'] = '|Guatemala||Alta Verapaz|Baja Verapaz|Chimaltenango|Chiquimula|El Progreso|Escuintla|Guatemala|Huehuetenango|Izabal|Jalapa|Jutiapa|Peten|Quetzaltenango|Quiche|Retalhuleu|Sacatepequez|San Marcos|Santa Rosa|Solola|Suchitepequez|Totonicapan|Zacapa';\n    city_states['Honduras'] = '|Tegucigalpa||Atlantida|Choluteca|Colon|Comayagua|Copan|Cortes|El Paraiso|Francisco Morazan|Gracias a Dios|Intibuca|Islas de la Bahia|La Paz|Lempira|Ocotepeque|Olancho|Santa Barbara|Valle|Yoro';\n    city_states['Nicaragua'] = '|Managua||Boaco|Carazo|Chinandega|Chontales|Esteli|Granada|Jinotega|Leon|Madriz|Managua|Masaya|Matagalpa|Nueva Segovia|Rio San Juan|Rivas|Atlantico Norte|Atlantico Sur';\n    city_states['Panama'] = '|Panama||Bocas del Toro|Chiriqui|Cocle|Colon|Darien|Herrera|Los Santos|San Blas|Veraguas'; //Europe\n\n    city_states['Albania'] = '|Tirana||Berat|Bulqize|Delvine|Devoll|Diber|Durres|Elbasan|Fier|Gjirokaster|Gramsh|Has|Kavaje|Kolonje|Korce|Kruje|Kucove|Kukes|Kurbin|Lezhe|Librazhd|Lushnje|Malesi e Madhe|Mallakaster|Mat|Mirdite|Peqin|Permet|Pogradec|Puke|Sarande|Shkoder|Skrapar|Tepelene|Tirane|Tropoje|Vlore';\n    city_states['Andorra'] = '|Andorra la Vella||Canillo|Encamp|La Massana|Escaldes-Engordany|Ordino|Sant Julia de Loria';\n    city_states['Austria'] = '|Vienna||Burgenland|Kaernten|Niederoesterreich|Oberoesterreich|Salzburg|Steiermark|Tirol|Vorarlberg|Wien';\n    city_states['Belarus'] = '|Minsk||Brest|Homyel\\'|Horad Minsk||Hrodna|Mahilyow|Vitsyebsk';\n    city_states['Belgium'] = '|Brussels||Antwerpen|Brabant Wallon|Brussels (Bruxelles)|Hainaut|Liege|Limburg|Luxembourg|Namur|Oost-Vlaanderen|Vlaams-Brabant|West-Vlaanderen';\n    city_states['Bosnia/Herzegovina'] = '|Sarajevo';\n    city_states['Bulgaria'] = '|Sofiya||Blagoevgrad|Burgas|Dobrich|Gabrovo|Khaskovo|Kurdzhali|Kyustendil|Lovech|Montana|Pazardzhik|Pernik|Pleven|Plovdiv|Razgrad|Ruse|Shumen|Silistra|Sliven|Smolyan|Sofiya-Grad|Stara Zagora|Turgovishte|Varna|Veliko Turnovo|Vidin|Vratsa|Yambol';\n    city_states['Croatia'] = '|Zagreb||Bjelovarsko-Bilogorska|Brodsko-Posavska|Dubrovacko-Neretvanska|Istarska|Karlovacka|Koprivnicko-Krizevacka|Krapinsko-Zagorska|Licko-Senjska|Medimurska|Osjecko-Baranjska|Pozesko-Slavonska|Primorsko-Goranska|Sibensko-Kninska|Sisacko-Moslavacka|Splitsko-Dalmatinska|Varazdinska|Viroviticko-Podravska|Vukovarsko-Srijemska|Zadarska|Zagrebacka';\n    city_states['Czech Republic'] = '|Prague (Praha)||Jihocesky|Jihomoravsky|Karlovarsky|Kralovehradecky|Liberecky|Moravskoslezsky|Olomoucky|Pardubicky|Plzensky|Stredocesky|Ustecky|Vysocina|Zlinsky';\n    city_states['Denmark'] = '|Copenhagen (Kobenhavn)||Arhus|Bornholm|Fredericksberg|Frederiksborg|Fyn|Kobenhavns|Nordjylland|Ribe|Ringkobing|Roskilde|Sonderjylland|Storstrom|Vejle|Vestsjalland|Viborg';\n    city_states['Estonia'] = '|Harjumaa (Tallinn)||Hiiumaa (Kardla)|Ida-Virumaa (Johvi)|Jarvamaa (Paide)|Jogevamaa (Jogeva)|Laanemaa (Haapsalu)|Laane-Virumaa (Rakvere)|Parnumaa (Parnu)|Polvamaa (Polva)|Raplamaa (Rapla)|Saaremaa (Kuressaare)|Tartumaa (Tartu)|Valgamaa (Valga)|Viljandimaa (Viljandi)|Vorumaa (Voru)';\n    city_states['Finland'] = '|Helsinki||Aland|Etela-Suomen Laani|Ita-Suomen Laani|Lansi-Suomen Laani|Lappi|Oulun Laani';\n    city_states['France'] = '|Paris||Alsace|Aquitaine|Auvergne|Basse-Normandie|Bourgogne|Bretagne|Centre|Champagne-Ardenne|Corse|Franche-Comte|Haute-Normandie|Ile-de-France|Languedoc-Roussillon|Limousin|Lorraine|Midi-Pyrenees|Nord-Pas-de-Calais|Pays de la Loire|Picardie|Poitou-Charentes|Provence-Alpes-Cote d\\'Azur|Rhone-Alpes';\n    city_states['Georgia'] = '|T\\'bilisi||Bat\\'umi|Chiat\\'ura|Gori|Guria|Imereti|Kakheti|K\\'ut\\'aisi|Kvemo Kartli|Mtskheta-Mtianeti|P\\'ot\\'i|Racha-Lechkhumi/Kvemo Svaneti|Rust\\'avi|Samegrelo/Zemo Svaneti|Samtskhe-Javakheti|Shida Kartli|Sokhumi|Tqibuli|Tsqaltubo|Zugdidi';\n    city_states['Germany'] = '|Berlin||Baden-Wuerttemberg|Bayern|Berlin|Brandenburg|Bremen|Hamburg|Hessen|Mecklenburg-Vorpommern|Niedersachsen|Nordrhein-Westfalen|Rheinland-Pfalz|Saarland|Sachsen|Sachsen-Anhalt|Schleswig-Holstein|Thueringen';\n    city_states['Greece'] = '|Athens||Agion Oros (Mt. Athos)|Achaia|Aitolia kai Akarmania|Argolis|Arkadia|Arta|Attiki|Chalkidiki|Chanion|Chios|Dodekanisos|Drama|Evros|Evrytania|Evvoia|Florina|Fokidos|Fthiotis|Grevena|Ileia|Imathia|Ioannina|Irakleion|Karditsa|Kastoria|Kavala|Kefallinia|Kerkyra|Kilkis|Korinthia|Kozani|Kyklades|Lakonia|Larisa|Lasithi|Lefkas|Lesvos|Magnisia|Messinia|Pella|Pieria|Preveza|Rethynnis|Rodopi|Samos|Serrai|Thesprotia|Thessaloniki|Trikala|Voiotia|Xanthi|Zakynthos';\n    city_states['Hungary'] = '|Budapest||Bacs-Kiskun|Baranya|Bekes|Bekescsaba|Borsod-Abauj-Zemplen|Csongrad|Debrecen|Dunaujvaros|Eger|Fejer|Gyor|Gyor-Moson-Sopron|Hajdu-Bihar|Heves|Hodmezovasarhely|Jasz-Nagykun-Szolnok|Kaposvar|Kecskemet|Komarom-Esztergom|Miskolc|Nagykanizsa|Nograd|Nyiregyhaza|Pecs|Pest|Somogy|Sopron|Szabolcs-Szatmar-Bereg|Szeged|Szekesfehervar|Szolnok|Szombathely|Tatabanya|Tolna|Vas|Veszprem|Veszprem|Zala|Zalaegerszeg';\n    city_states['Iceland'] = '|Reykjavik||Akranes|Akureyri|Arnessysla|Austur-Bardhastrandarsysla|Austur-Hunavatnssysla|Austur-Skaftafellssysla|Borgarfjardharsysla|Dalasysla|Eyjafjardharsysla|Gullbringusysla|Hafnarfjordhur|Husavik|Isafjordhur|Keflavik|Kjosarsysla|Kopavogur|Myrasysla|Neskaupstadhur|Nordhur-Isafjardharsysla|Nordhur-Mulasys-la|Nordhur-Thingeyjarsysla|Olafsfjordhur|Rangarvallasysla|Saudharkrokur|Seydhisfjordhur|Siglufjordhur|Skagafjardharsysla|Snaefellsnes-og Hnappadalssysla|Strandasysla|Sudhur-Mulasysla|Sudhur-Thingeyjarsysla|Vesttmannaeyjar|Vestur-Bardhastrandarsysla|Vestur-Hunavatnssysla|Vestur-Isafjardharsysla|Vestur-Skaftafellssysla';\n    city_states['Ireland'] = '|Dublin||Carlow|Cavan|Clare|Cork|Donegal|Galway|Kerry|Kildare|Kilkenny|Laois|Leitrim|Limerick|Longford|Louth|Mayo|Meath|Monaghan|Offaly|Roscommon|Sligo|Tipperary|Waterford|Westmeath|Wexford|Wicklow';\n    city_states['Italy'] = '|Rome||Abruzzi|Basilicata|Calabria|Campania|Emilia-Romagna|Friuli-Venezia Giulia|Lazio|Liguria|Lombardia|Marche|Molise|Piemonte|Puglia|Sardegna|Sicilia|Toscana|Trentino-Alto Adige|Umbria|Valle d\\'Aosta|Veneto';\n    city_states['Latvia'] = '|Riga||Aizkraukles|Aluksnes|Balvu|Bauskas|Cesu|Daugavpils|Daugavpils|Dobeles|Gulbenes|Jekabpils|Jelgava|Jelgavas|Jurmala|Kraslavas|Kuldigas|Liepaja|Liepajas|Limbazu|Ludzas|Madonas|Ogres|Preilu|Rezekne|Rezeknes|Riga|Rigas|Saldus|Talsu|Tukuma|Valkas|Valmieras|Ventspils|Ventspils';\n    city_states['Liechtenstein'] = '|Vaduz||Balzers|Eschen|Gamprin|Mauren|Planken|Ruggell|Schaan|Schellenberg|Triesen|Triesenberg';\n    city_states['Lithuania'] = '|Vilnius||Alytaus|Kauno|Klaipedos|Marijampoles|Panevezio|Siauliu|Taurages|Telsiu|Utenos';\n    city_states['Luxembourg'] = '|Luxembourg||Diekirch|Grevenmacher';\n    city_states['Macedonia'] = '|Skopje||Aracinovo|Bac|Belcista|Berovo|Bistrica|Bitola|Blatec|Bogdanci|Bogomila|Bogovinje|Bosilovo|Brvenica|Cair|Capari|Caska|Cegrane|Centar|Centar Zupa|Cesinovo|Cucer-Sandevo|Debar|Delcevo|Delogozdi|Demir Hisar|Demir Kapija|Dobrusevo|Dolna Banjica|Dolneni|Dorce Petrov|Drugovo|Dzepciste|Gazi Baba|Gevgelija|Gostivar|Gradsko|Ilinden|Izvor|Jegunovce|Kamenjane|Karbinci|Karpos|Kavadarci|Kicevo|Kisela Voda|Klecevce|Kocani|Konce|Kondovo|Konopiste|Kosel|Kratovo|Kriva Palanka|Krivogastani|Krusevo|Kuklis|Kukurecani|Kumanovo|Labunista|Lipkovo|Lozovo|Lukovo|Makedonska Kamenica|Makedonski Brod|Mavrovi Anovi|Meseista|Miravci|Mogila|Murtino|Negotino|Negotino-Polosko|Novaci|Novo Selo|Oblesevo|Ohrid|Orasac|Orizari|Oslomej|Pehcevo|Petrovec|Plasnica|Podares|Prilep|Probistip|Radovis|Rankovce|Resen|Rosoman|Rostusa|Samokov|Saraj|Sipkovica|Sopiste|Sopotnica|Srbinovo|Star Dojran|Staravina|Staro Nagoricane|Stip|Struga|Strumica|Studenicani|Suto Orizari|Sveti Nikole|Tearce|Tetovo|Topolcani|Valandovo|Vasilevo|Velesta|Veles|Vevcani|Vinica|Vitoliste|Vranestica|Vrapciste|Vratnica|Vrutok|Zajas|Zelenikovo|Zeleno|Zitose|Zletovo|Zrnovci';\n    city_states['Malta'] = '|Valletta';\n    city_states['Moldova'] = '|Chisinau||Balti|Cahul|Chisinau|Chisinau|Edinet|Gagauzia|Lapusna|Orhei|Soroca|Stinga Nistrului|Tighina|Ungheni';\n    city_states['Monaco'] = '|Monaco||Fontvieille|La Condamine|Monaco-Ville|Monte-Carlo';\n    city_states['Netherlands'] = '|Amsterdam|The Hague||Drenthe|Flevoland|Friesland|Gelderland|Groningen|Limburg|Noord-Brabant|Noord-Holland|Overijssel|Utrecht|Zeeland|Zuid-Holland';\n    city_states['Norway'] = '|Oslo||Akershus|Aust-Agder|Buskerud|Finnmark|Hedmark|Hordaland|More og Romsdal|Nordland|Nord-Trondelag|Oppland|Ostfold|Rogaland|Sogn og Fjordane|Sor-Trondelag|Telemark|Troms|Vest-Agder|Vestfold';\n    city_states['Poland'] = '|Warsaw||Dolnoslaskie|Kujawsko-Pomorskie|Lodzkie|Lubelskie|Lubuskie|Malopolskie|Mazowieckie|Opolskie|Podkarpackie|Podlaskie|Pomorskie|Slaskie|Swietokrzyskie|Warminsko-Mazurskie|Wielkopolskie|Zachodniopomorskie';\n    city_states['Portugal'] = '|Lisbon||Aveiro|Acores (Azores)|Beja|Braga|Braganca|Castelo Branco|Coimbra|Evora|Faro|Guarda|Leiria|Lisboa|Madeira|Portalegre|Porto|Santarem|Setubal|Viana do Castelo|Vila Real|Viseu';\n    city_states['Romania'] = '|Bucharest (Bucuresti)||Alba|Arad|Arges|Bacau|Bihor|Bistrita-Nasaud|Botosani|Braila|Brasov|Buzau|Calarasi|Caras-Severin|Cluj|Constanta|Covasna|Dimbovita|Dolj|Galati|Gorj|Giurgiu|Harghita|Hunedoara|Ialomita|Iasi|Ilfov|Maramures|Mehedinti|Mures|Neamt|Olt|Prahova|Salaj|Satu Mare|Sibiu|Suceava|Teleorman|Timis|Tulcea|Vaslui|Vilcea|Vrancea';\n    city_states['San Marino'] = '|San Marino||Acquaviva|Borgo Maggiore|Chiesanuova|Domagnano|Faetano|Fiorentino|Monte Giardino|Serravalle';\n    city_states['Serbia/Montenegro (Yugoslavia)'] = '|Belgrade||Kosovo|Montenegro|Serbia|Vojvodina';\n    city_states['Slovakia'] = '|Bratislava||Banskobystricky|Kosicky|Nitriansky|Presovsky|Trenciansky|Trnavsky|Zilinsky';\n    city_states['Slovenia'] = '|Ljubljana||Ajdovscina|Beltinci|Bled|Bohinj|Borovnica|Bovec|Brda|Brezice|Brezovica|Cankova-Tisina|Celje|Cerklje na Gorenjskem|Cerknica|Cerkno|Crensovci|Crna na Koroskem|Crnomelj|Destrnik-Trnovska Vas|Divaca|Dobrepolje|Dobrova-Horjul-Polhov Gradec|Dol pri Ljubljani|Domzale|Dornava|Dravograd|Duplek|Gorenja Vas-Poljane|Gorisnica|Gornja Radgona|Gornji Grad|Gornji Petrovci|Grosuplje|Hodos Salovci|Hrastnik|Hrpelje-Kozina|Idrija|Ig|Ilirska Bistrica|Ivancna Gorica|Izola|Jesenice|Jursinci|Kamnik|Kanal|Kidricevo|Kobarid|Kobilje|Kocevje|Komen|Koper|Kozje|Kranj|Kranjska Gora|Krsko|Kungota|Kuzma|Lasko|Lenart|Lendava|Litija|Ljubno|Ljutomer|Logatec|Loska Dolina|Loski Potok|Luce|Lukovica|Majsperk|Maribor|Medvode|Menges|Metlika|Mezica|Miren-Kostanjevica|Mislinja|Moravce|Moravske Toplice|Mozirje|Murska Sobota|Muta|Naklo|Nazarje|Nova Gorica|Novo Mesto|Odranci|Ormoz|Osilnica|Pesnica|Piran|Pivka|Podcetrtek|Podvelka-Ribnica|Postojna|Preddvor|Ptuj|Puconci|Race-Fram|Radece|Radenci|Radlje ob Dravi|Radovljica|Ravne-Prevalje|Ribnica|Rogasevci|Rogaska Slatina|Rogatec|Ruse|Semic|Sencur|Sentilj|Sentjernej|Sentjur pri Celju|Sevnica|Sezana|Skocjan|Skofja Loka|Skofljica|Slovenj Gradec|Slovenska Bistrica|Slovenske Konjice|Smarje pri Jelsah|Smartno ob Paki|Sostanj|Starse|Store|Sveti Jurij|Tolmin|Trbovlje|Trebnje|Trzic|Turnisce|Velenje|Velike Lasce|Videm|Vipava|Vitanje|Vodice|Vojnik|Vrhnika|Vuzenica|Zagorje ob Savi|Zalec|Zavrc|Zelezniki|Ziri|Zrece';\n    city_states['Spain'] = '|Madrid||Andalucia|Aragon|Asturias|Baleares (Balearic Islands)|Ceuta|Canarias (Canary Islands)|Cantabria|Castilla-La Mancha|Castilla y Leon|Cataluna|Communidad Valencian|Extremadura|Galicia|La Rioja|Melilla|Murcia|Navarra|Pais Vasco (Basque Country)';\n    city_states['Sweden'] = '|Stockholm||Blekinge|Dalarnas|Gavleborgs|Gotlands|Hallands|Jamtlands|Jonkopings|Kalmar|Kronobergs|Norrbottens|Orebro|Ostergotlands|Skane|Sodermanlands|Uppsala|Varmlands|Vasterbottens|Vasternorrlands|Vastmanlands|Vastra Gotalands';\n    city_states['Switzerland'] = '|Bern||Aargau|Appenzell Ausser-Rhoden|Appenzell Inner-Rhoden|Basel-Landschaft|Basel-Stadt|Fribourg|Geneve|Glarus|Graubunden|Jura|Luzern|Neuchatel|Nidwalden|Obwalden|Sankt Gallen|Schaffhausen|Schwyz|Solothurn|Thurgau|Ticino|Uri|Valais|Vaud|Zug|Zurich';\n    city_states['Ukraine'] = '|Kiev (Kyyiv)||Cherkas\\'ka (Cherkasy)|Chernihivs\\'ka (Chernihiv)|Chernivets\\'ka (Chernivtsi)|Dnipropetrovs\\'ka (Dnipropetrovs\\'k)|Donets\\'ka (Donets\\'k)|Ivano-Frankivs\\'ka (Ivano-Frankivs\\'k)|Izmail (Izmayl)|Kharkivs\\'ka (Kharkiv)|Khersons\\'ka (Kherson)|Khmel\\'nyts\\'ka (Khmel\\'nyts\\'kyy)|Kirovohrads\\'ka (Kirovohrad)|Luhans\\'ka (Luhans\\'k)|L\\'vivs\\'ka (L\\'viv)|Mykolayivs\\'ka (Mykolayiv)|Odes\\'ka (Odesa)|Poltavs\\'ka (Poltava)|Avtonomna Respublika Krym|Rivnens\\'ka (Rivne)|Sevastopol\\'|Sums\\'ka (Sumy)|Ternopil\\'s\\'ka (Ternopil\\')|Vinnyts\\'ka (Vinnytsya)|Volyns\\'ka (Luts\\'k)|Zakarpats\\'ka (Uzhhorod)|Zaporiz\\'ka (Zaporizhzhya)|Zhytomyrs\\'ka (Zhytomyr)';\n    city_states['United Kingdom'] = '|-----ENGLAND:-----|Barking/Dagenham|Barnet|Barnsley|Bath/North East Somerset|Bedfordshire|Bexley|Birmingham|Blackburn with Darwen|Blackpool|Bolton|Bournemouth|Bracknell Forest|Bradford|Brent|Brighton/Hove|City of Bristol|Bromley|Buckinghamshire|Bury|Calderdale|Cambridgeshire|Camden|Cheshire|Cornwall|Coventry|Croydon|Cumbria|Darlington|Derby|Derbyshire|Devon|Doncaster|Dorset|Dudley|Durham|Ealing|East Riding of Yorkshire|East Sussex|Enfield|Essex|Gateshead|Gloucestershire|Greenwich|Hackney|Halton|Hammersmith/Fulham|Hampshire|Haringey|Harrow|Hartlepool|Havering|Herefordshire|Hertfordshire|Hillingdon|Hounslow|Isle of Wight|Islington|Kensington/Chelsea|Kent|City of Kingston upon Hull|Kingston upon Thames|Kirklees|Knowsley|Lambeth|Lancashire|Leeds|Leicester|Leicestershire|Lewisham|Lincolnshire|Liverpool|City of London|Luton|Manchester|Medway|Merton|Middlesbrough|Milton Keynes|Newcastle upon Tyne|Newham|Norfolk|Northamptonshire|North East Lincolnshire|North Lincolnshire|North Somerset|North Tyneside|Northumberl/|North Yorkshire|Nottingham|Nottinghamshire|Oldham|Oxfordshire|Peterborough|Plymouth|Poole|Portsmouth|Reading|Redbridge|Redcar/Clevel/|Richmond upon Thames|Rochdale|Rotherham|Rutl/|Salford|Shropshire|S/well|Sefton|Sheffield|Slough|Solihull|Somerset|Southampton|Southend-on-Sea|South Gloucestershire|South Tyneside|Southwark|Staffordshire|St. Helens|Stockport|Stockton-on-Tees|Stoke-on-Trent|Suffolk|Sunderl/|Surrey|Sutton|Swindon|Tameside|Telford/Wrekin|Thurrock|Torbay|Tower Hamlets|Trafford|Wakefield|Walsall|Waltham Forest|W/sworth|Warrington|Warwickshire|West Berkshire|Westminster|West Sussex|Wigan|Wiltshire|Windsor/Maidenhead|Wirral|Wokingham|Wolverhampton|Worcestershire|York||-----NORTHERN IRELAND:-----|Antrim|County Antrim|Ards|Armagh|County Armagh|Ballymena|Ballymoney|Banbridge|Belfast|Carrickfergus|Castlereagh|Coleraine|Cookstown|Craigavon|Down|County Down|Dungannon|Fermanagh|County Fermanagh|Larne|Limavady|Lisburn|County Londonderry|Derry|Magherafelt|Moyle|Newry/Mourne|Newtownabbey|North Down|Omagh|Strabane|County Tyrone||-----SCOTLAND:-----|Aberdeen City|Aberdeenshire|Angus|Argyll/Bute|The Scottish Borders|Clackmannanshire|Dumfries/Galloway|Dundee City|East Ayrshire|East Dunbartonshire|East Lothian|East Renfrewshire|City of Edinburgh|Falkirk|Fife|Glasgow City|Highland|Inverclyde|Midlothian|Moray|North Ayrshire|North Lanarkshire|Orkney Islands|Perth/Kinross|Renfrewshire|Shetland Islands|South Ayrshire|South Lanarkshire|Stirling|West Dunbartonshire|Eilean Siar (Western Isles)|West Lothian||-----WALES-----:|Isle of Anglesey|Blaenau Gwent|Bridgend|Caerphilly|Cardiff|Ceredigion|Carmarthenshire|Conwy|Denbighshire|Flintshire|Gwynedd|Merthyr Tydfil|Monmouthshire|Neath Port Talbot|Newport|Pembrokeshire|Powys|Rhondda Cynon Taff|Swansea|Torfaen|The Vale of Glamorgan|Wrexham';\n    city_states['Vatican City'] = ''; //Islands\n\n    city_states['Arctic Ocean'] = '|Franz Josef Land|Svalbard';\n    city_states['Atlantic Ocean (North)'] = '|Alderney|Azores|Baixo|Belle-Ile|Bermuda|Bioko|Block|Boa Vista|Borduy|Bugio|Canary Islands|Cape Breton|Cape Verde Islands|Channel Islands|Corvo|Deer Isle|Eysturoy|Faeroe Islands|Fago|Faial|Flores|Fuerteventura|Fugloy|Gomera|Graciosa|Gran Canaria|Grand Manan|Grande|Greenland|Guernsey|Hebrides|Herm|Hestur|Hierro|Iceland|Iles De La Madeleine|Ile de Noirmoutier|Ile de\\' Re|Ile d\\' Ol‚ron|Ile d\\' Yeu|Ilhas Desertas|Ireland|Isle au Haut|Isle of Lewis|Isle of Mull|Isle of Skye|Jersey|Kalsoy|Koltur|Kunoy|Lanzarote|La Palma|Litla Dimun|Long Island|Jan Mayen|Madeira Islands|Maio|Martha\\'s Vineyard|Matinicus|Monhegan|Mount Desert|Mykines|Nantucket Island|Newfoundland|Nolsoy|Orkney Islands|Pico|Porto Santo|Prince Edward Island|St. Peter/St. Paul Rocks|St.-Pierre/Miquelon|Praia|Sable Island|Sal|Sandoy|Santo Antao|Santa Maria|Sao Jorge|Sao Miguel|Sao Nicolau|Sao Tiago|Sao Tome/Principe|Sao Vicente|Sark|Scilly Isles|Shetland Islands|Skuvoy|Stora Dimun|Streymoy|Sumba|Svinoy|Swans|Tenerife|Terceira|Uist Islands|Vagar|Viday|Vinalhaven';\n    city_states['Atlantic Ocean (South)'] = '|Amsterdam|Andaman Islands|Annobon|Ascension|Bouvet|Falkland Islands|Gough|Martin Vas Islands|Nightingale|St. Helena|Shag/Black Rocks|South Georgia|South Orkney Islands|South Sandwich Islands|Traversay|Trindade|Tristan da Cunha';\n    city_states['Assorted'] = '|Akimiski|Aland|Alcatraz|Apostle Islands|Baffin|Banka|Banks|Beaver|Belcher Islands|Belitung|Borneo|Bornholm|Brac|Coats|Cres|Devon|East Frisian Islands|Ellesmere|Fyn|Galveston|Gotland|Groote Eylandt|Hiiumaa|Hong Kong Island|Ile d\\' Anticosti|Ile d\\' Orleans|Isla de Ometepe|Isla Del Ray|Isle of Man|Isle of Wight|Isle Royale|Jutland|Key Largo|Key West|King William|Krek|Langeland|Lantau|Lolland|Lundy|Mackinac|Madeleine Islands|Manhattan Island|Manitoulin|Marsh|Matagorda|Melville|North Hero|Oland|Paracel Islands|Pelee|Prince Charles|Prince of Wales|Queen Elizabeth Islands|Saaremaa|Sjaelland|Somerset|Southhampton|South Hero|Spratley Islands|Sulawesi|Victoria|Washington|Wellesley Islands';\n    city_states['Caribbean Sea'] = '|Abaco (great)|Abaco (little)|Acklins|Andros|Anegada|Anguilla|Antigua|Aruba|Bahamas|Barbados|Barbuda|Bimini Islands|Bonaire|Caicos Islands|Cat|Cayman Brac|Cayman Islands|Cozumel|Crooked|Cuba|Curacao|Dominica|Exuma|Grand Bahama|Grand Cayman|Grand Turk|Greater Antilles|Great Inagua|Grenada|Guadeloupe|Hispaniola (Haiti/DOR)|Isla de Margarita|Isla Mujeres|Isla La Tortuga|Isle of Youth|Jamaica|Lesser Antilles|Little Cayman|Little Inagua|Long|Marie-Galante|Martinique|Mayaguana|Montserrat|Navassa|Nevis|New Providence|Providencia|Puerto Rico|Roatan|Rum Cay|St. Barts|St. Croix|St. Eustatius|St. John|St. Kitts|St. Lucia|St. Martin/Sint Maartan|St. Thomas|St Vincent and the Grenadines|Saba|San Blas Islands|San Salvador|San Andres|Santa Catilina (St. Catherine)|Tobago|Tortola|Trinidad|Virgin Gorda|West Indies';\n    city_states['Greek Isles'] = '|Aegina|Alonissos|Amorgos|Andros|Angistri|Astipalea|Carpathos|Cephalonia|Chios (Hios)|Corfu|Cos (Kos)|Crete (Kriti)|Cyclades Islands|Dodecanese Islands|Dokos|Eubaea (Evia)|Evia|Hydra|Ikaria|Ionian Islands|Ios|Ithaca|Kea|Kefalonia|Kefalos|Kalimnos|Kassos|Kithnos|Kos|Kythnos|Kythria|Lefkada|Lemnos|Leros|Lesvos|Leucas|Limnos|Lipsi|Los|Melos|Mykonos|Naxos|Nisyros|Paros|Patmos|Poros|Pothia|Rhodes (Rodos)|Salamina|Samos|Samothrace|Santorini|Serifos|Seriphos|Sifnos|Sikinos|Skiros|Skiathos|Skopelos|Skyros|Spetses|Sporades Islands|Syros|Tenos (Tinos)|Thassos|Tzia|Zakinthos|Zante';\n    city_states['Indian Ocean'] = '|Addu Atoll|Agalega Islands|Amsterdam|Andaman Islands|Anjouan (Nzwani)|Ari Atoll|Ashmore/Cartier Islands|Bali|Barrow|Bathurst|Bompoka|Cape Barren|Car Nicobar|Chagos Archipelago|Christmas|Comoros|Crozet Islands|Danger|Diego Garcia|Eagle Islands|Egmont Islands|Faadhippolhu Atoll|Felidhoo Atoll|Flinders|Goidhoo Atoll|Grand Comore (Njazidja)|Great Nicobar|Hadhdhunmathee|Heard|Huvadhoo Atoll|Ihavandhippolhu Atoll|Java|Kangaroo|Katchall|Keeling Islands (Cocos)|King|Kolhumadulu Atoll|Lakshadweep Islands|Little Andaman|Little Nicobar|Lower Andaman|Maalhosmadulu Atoll|Maamakunudhoo Atoll|Madagascar|Mahe|Maldives|Male\\' Atoll|Mauritius|Mayotte|McDonald Islands|Melville|Middle Andaman|Miladhunmafulu Atoll|Moheli (Mwali)|Molaku Atoll|Nancowry|Nelsons Island|Nias|Nicobar Islands|Nilandhoo Atoll|North Andaman|Peros Banhos|Phuket|Prince Edward Islands|Reunion|Rodrigues|St. Paul|Salomon Islands|Seychelles|Shag|Siberut|Simeulue|Sipura|Socotra|Sumatra|Sri Lanka|Tarasa Dwip|Tasmania|Thiladhunmathee Atoll|Three Brothers|Timor|Tromelin|Zanzibar';\n    city_states['Mediterranean Sea'] = '|Aeolian Islands|Alboran|Balearic Islands|Cabrera|Capraia|Capri|Corse (Corsica)|Cyprus|Elba|Formentera|Gozo|Ibiza (Ivisa)|Iles d\\' Hyeres|Jalitah|Lampedusa|Lipari Islands|Mallorca (Majorca)|Malta|Maltese Islands|Menorca (Minorca)|Pantelleria|Ponziane|Salina|Sant\\' Antioca|San Pietro|Sardinia (Sardegna)|Sicily (Sicilia)|Stromboli|Vulcano|Zembra';\n    city_states['Oceania'] = '|Abaiang|Admiralty Islands|Aitutaki|Alofi|Ambrym|American Samoa|Antipodes|Atafu Atoll|Atiu|Auckland Islands|Aunu\\'u|Austral Islands|Banaba|Bega|Bora Bora|Bougainville|Bounty Islands|Campbell|Chatham Islands|Choiseul|Cook Islands|Coral Sea Islands|Efate|Elao|Erromango|Espiritu Santo|\\' Eua|Faioa|Fakaofo Atoll|Fatu Hiva|Fiji|French Polynesia|Funafuti Atoll|Futuna|Gambier Islands|Gau|Gilbert Islands|Gizo|Grand Terre|Great Barrier Reef|Guadacanal|Ha\\'apai Island Group|Hatutu|Hiva Oa|Horne Islands|Huahine|Isle of Pines|Kadavu|Karkar|Kioa|Kiribati|Kiritamati|Koro|Lakeba|Lau Group|Lifou|Line Islands|Loyalty Islands|Malaita|Malekula|Malolo|Mangaia|Manihiki|Manu\\'a Group|Manuae|Mare|Marquises Islands|Mata Utu|Matuku|Mauke|Maupiti|Melanesia|Mitiaro|Moala|Mohotani|Moorea|Nairai|Nanumea Atoll|Nassau|Nauru|Naviti|Nepean|New Britain|New Caledonia|New Georgia Islands|New Guinea|New Ireland|Niuafo\\'ou|Niuas Islands|Niuatoputapu|Niue|Niulakita Atoll|Nomuka Island Group|Norfolk Islands|Nukuaeta|Nukufetau Atoll|Nuku Hiva|Nukulaelae Atoll|Nukunono Atoll|Ofu|Olasega|Ono|Ouvea|Ovalau|Palmerston|Pangai|Penrhyn|Philip|Phoenix Islands|Pitcairn|Pitt Island|Polynesia|Pukapuka|Rabi|Raiatea|Rakahanga|Rangiroa|Rarotonga|Rotuma|Samao|San Cristobal|Santa Cruz Islands|Santa Isabel|Savai \\'i|Society Islands|Solomon Islands|Stewart|Suwarrow|Tabuaeran|Tahaa|Tahiti|Tahuata|Taiohae|Tanna|Tarawa|Tasmania|Tau|Taveuni|Tetiaroa|Tokelau|Tonga|Tongatapu|Totoya|Tuamotu Islands|Tubuai|Tupai|Tutuila|Tuvalu|Ua Huka|Ua Pou|Hiva Oa|Upolu|\\' Uta Vava\\'u|Uvea|Vaiaku|Vanua Balavu|Vanua Levu|Vanuatu|Vatulele|Vava\\'u Island Group|Vita Levu|Wallis Islands|Wallis and Futuna|Waya|Yasawa|Yasawa Group';\n    city_states['Pacific Ocean (North)'] = '|Aleutian Islands|Alexander Islands|Andreanof Islands|Babelthuap|Baker|Bikini|Bohol|Bonin Islands|Cabras|Caroline Islands|Cebu|Channel Islands (US)|Cheju Do|Chuuk|Diomede Islands|Guam|Hainan|Hawaii (big island)|Hawaiian Islands|Hokkaido|Honshu|Howland|Jaluit Atoll|Japan|Johnston Atoll|Kahoolawe|Kauai|Kodiak|Kosrae|Kwajalein Atoll|Kyushu|Lanai|Lifou|Loyalty Islands|Luzon|Maloelap Atoll|Majuro Atoll|Mare|Marshall Islands|Maui|Micronesia|Midway Islands|Mili Atoll|Mindanao|Mindoro|Molakai|Niihau|Near Islands|Negros|Northern Marianas|Nunivak|Oahu|Okinawa|Ostrov Sakhalin|Pagan|Palau|Palawan|Palmyra Atoll|Panay|Philippines|Pohnpei|Queen Charlotte Islands|Rat|Rongelap Atoll|St. Lawrence|St. Matthew|St. Paul|Saipan|Samar|San Clemente|San Miguel|San Nicolas|Santa Catalina|Santa Cruz|Santa Rosa|Shikoku|Taiwan|Tinian|Vancouver|Volcano Islands|Wake Island|Yap';\n    city_states['Pacific Ocean (South)'] = '|Easter|Galapogos Islands|Juan Fernandez Islands|Isla Espanola|Isla Fernandina|Isla Genovesa|Isla Isabella|Isla Marchena|Isla Pinta|Isla Puna|Isla San Cristobal|Isla San Salvador|Isla Santa Cruz|Isla Santa Maria|Robinson Crusoe|San Felix|Santa Clara'; //Middle East\n\n    city_states['Afghanistan'] = '|Kabul||Badakhshan|Badghis|Baghlan|Balkh|Bamian|Farah|Faryab|Ghazni|Ghowr|Helmand|Herat|Jowzjan|Kabol|Kandahar|Kapisa|Khowst|Konar|Kondoz|Laghman|Lowgar|Nangarhar|Nimruz|Nurestan|Oruzgan|Paktia|Paktika|Parvan|Samangan|Sar-e Pol|Takhar|Vardak|Zabol';\n    city_states['Armenia'] = '|Yerevan||Aragatsotn|Ararat|Armavir|Geghark\\'unik\\'|Kotayk\\'|Lorri|Shirak|Syunik\\'|Tavush|Vayots\\' Dzor';\n    city_states['Azerbaijan'] = '|Baku (Baki)||Abseron|Agcabadi|Agdam|Agdas|Agstafa|Agsu|Ali Bayramli|Astara|Balakan|Barda|Beylaqan|Bilasuvar|Cabrayil|Calilabad|Daskasan|Davaci|Fuzuli|Gadabay|Ganca|Goranboy|Goycay|Haciqabul|Imisli|Ismayilli|Kalbacar|Kurdamir|Lacin|Lankaran|Lankaran|Lerik|Masalli|Mingacevir|Naftalan|Naxcivan|Neftcala|Oguz|Qabala|Qax|Qazax|Qobustan|Quba|Qubadli|Qusar|Saatli|Sabirabad|Saki|Saki|Salyan|Samaxi|Samkir|Samux|Siyazan|Sumqayit|Susa|Susa|Tartar|Tovuz|Ucar|Xacmaz|Xankandi|Xanlar|Xizi|Xocali|Xocavand|Yardimli|Yevlax|Yevlax|Zangilan|Zaqatala|Zardab';\n    city_states['Bahrain'] = '|Manama||Al Hadd|Al Manamah|Al Mintaqah al Gharbiyah|Al Mintaqah al Wusta|Al Mintaqah ash Shamaliyah|Al Muharraq|Ar Rifa\\' wa al Mintaqah al Janubiyah|Jidd Hafs|Madinat Hamad|Madinat \\'Isa|Juzur Hawar|Sitrah';\n    city_states['Cyprus'] = '|Nicosia||Famagusta|Kyrenia|Larnaca|Limassol|Paphos';\n    city_states['Iran'] = '|Tehran||Ardabil|Azarbayjan-e Gharbi|Azarbayjan-e Sharqi|Bushehr|Chahar Mahall va Bakhtiari|Esfahan|Fars|Gilan|Golestan|Hamadan|Hormozgan|Ilam|Kerman|Kermanshah|Khorasan|Khuzestan|Kohkiluyeh va Buyer Ahmad|Kordestan|Lorestan|Markazi|Mazandaran|Qazvin|Qom|Semnan|Sistan va Baluchestan|Yazd|Zanjan';\n    city_states['Iraq'] = '|Baghdad||Al Anbar|Al Basrah|Al Muthanna|Al Qadisiyah|An Najaf|Arbil|As Sulaymaniyah|At Ta\\'mim|Babil|Dahuk|Dhi Qar|Diyala|Karbala\\'|Maysan|Ninawa|Salah ad Din|Wasit';\n    city_states['Israel'] = '|Jerusalem||Central|Haifa|Northern|Southern|Tel Aviv';\n    city_states['Jordan'] = '|Amman||Ajlun|Al \\'Aqabah|Al Balqa\\'|Al Karak|Al Mafraq|At Tafilah|Az Zarqa\\'|Irbid|Jarash|Ma\\'an|Madaba';\n    city_states['Kuwait'] = '|Kuwait||Al Ahmadi|Al Farwaniyah|Al \\'Asimah|Al Jahra\\'|Hawalli';\n    city_states['Kyrgyzstan'] = '|Bishkek Shaary||Batken Oblasty|Chuy Oblasty (Bishkek)|Jalal-Abad Oblasty|Naryn Oblasty|Osh Oblasty|Talas Oblasty|Ysyk-Kol Oblasty (Karakol)';\n    city_states['Lebanon'] = '|Beirut||Beyrouth|Beqaa|Liban-Nord|Liban-Sud|Mont-Liban|Nabatiye';\n    city_states['Oman'] = '|Muscat||Ad Dakhiliyah|Al Batinah|Al Wusta|Ash Sharqiyah|Az Zahirah|Musandam|Zufar';\n    city_states['Pakistan'] = '|Islamabad||Balochistan|Federally Administered Tribal Areas|North-West Frontier Province|Punjab|Sindh';\n    city_states['Qatar'] = '|Doha||Ad Dawhah|Al Ghuwayriyah|Al Jumayliyah|Al Khawr|Al Wakrah|Ar Rayyan|Jarayan al Batinah|Madinat ash Shamal|Umm Salal';\n    city_states['Saudi Arabia'] = '|Riyadh||Al Bahah|Al Hudud ash Shamaliyah|Al Jawf|Al Madinah|Al Qasim|Ar Riyad|Ash Sharqiyah (Eastern Province)|\\'Asir|Ha\\'il|Jizan|Makkah|Najran|Tabuk';\n    city_states['Syria'] = '|Damascus||Al Hasakah|Al Ladhiqiyah|Al Qunaytirah|Ar Raqqah|As Suwayda\\'|Dar\\'a|Dayr az Zawr|Dimashq|Halab|Hamah|Hims|Idlib|Rif Dimashq|Tartus';\n    city_states['Tajikistan'] = '|Dushanbe||Viloyati Mukhtori Kuhistoni Badakhshon|Viloyati Khatlon|Viloyati Sughd';\n    city_states['Turkey'] = '|Ankara||Adana|Adiyaman|Afyon|Agri|Aksaray|Amasya|Antalya|Ardahan|Artvin|Aydin|Balikesir|Bartin|Batman|Bayburt|Bilecik|Bingol|Bitlis|Bolu|Burdur|Bursa|Canakkale|Cankiri|Corum|Denizli|Diyarbakir|Duzce|Edirne|Elazig|Erzincan|Erzurum|Eskisehir|Gaziantep|Giresun|Gumushane|Hakkari|Hatay|Icel|Igdir|Isparta|Istanbul|Izmir|Kahramanmaras|Karabuk|Karaman|Kars|Kastamonu|Kayseri|Kilis|Kirikkale|Kirklareli|Kirsehir|Kocaeli|Konya|Kutahya|Malatya|Manisa|Mardin|Mugla|Mus|Nevsehir|Nigde|Ordu|Osmaniye|Rize|Sakarya|Samsun|Sanliurfa|Siirt|Sinop|Sirnak|Sivas|Tekirdag|Tokat|Trabzon|Tunceli|Usak|Van|Yalova|Yozgat|Zonguldak  Buri|Sisaket|Songkhla|Sukhothai|Suphan Buri|Surat Thani|Surin|Tak|Trang|Trat|Ubon Ratchathani|Udon Thani|Uthai Thani|Uttaradit|Yala|Yasothon';\n    city_states['Turkmenistan'] = '|Ashgabat||Ahal Welayaty|Balkan Welayaty|Dasoguz Welayaty|Labap Welayaty|Mary Welayaty';\n    city_states['United Arab Emirates'] = '|Abu Dhabi||Abu Zaby (Abu Dhabi)|\\'Ajman|Al Fujayrah|Ash Shariqah (Sharjah)|Dubayy (Dubai)|Ra\\'s al Khaymah|Umm al Qaywayn';\n    city_states['Uzbekistan'] = '|Tashkent (Toshkent)||Andijon Viloyati|Buxoro Viloyati|Farg\\'ona Viloyati|Jizzax Viloyati|Namangan Viloyati|Navoiy Viloyati|Qashqadaryo Viloyati (Qarshi)|Qaraqalpog\\'iston Respublikasi|Samarqand Viloyati|Sirdaryo Viloyati (Guliston)|Surxondaryo Viloyati (Termiz)|Toshkent Shahri|Toshkent Viloyati|Xorazm Viloyati (Urganch)';\n    city_states['Yemen'] = '|Sanaa||Abyan|\\'Adan|Al Bayda\\'|Al Hudaydah|Al Jawf|Al Mahrah|Al Mahwit|Dhamar|Hadramawt|Hajjah|Ibb|Lahij|Ma\\'rib|Sa\\'dah|San\\'a\\'|Shabwah|Ta\\'izz'; //North America\n\n    city_states['Bermuda'] = '|Hamilton||Devonshire|Hamilton|Hamilton|Paget|Pembroke|Saint George|Saint George\\'s|Sandys|Smith\\'s|Southampton|Warwick';\n    city_states['Canada'] = '|Ottawa||Alberta|British Columbia|Manitoba|New Brunswick|Newfoundland and Labrador|Northwest Territories|Nova Scotia|Nunavut|Ontario|Prince Edward Island|Quebec|Saskatchewan|Yukon Territory';\n    city_states['Caribbean'] = '';\n    city_states['Greenland'] = '|Nuuk (Godthab)||Avannaa (Nordgronland)|Tunu (Ostgronland)|Kitaa (Vestgronland)';\n    city_states['Mexico'] = '|Mexico (Distrito Federal)||Aguascalientes|Baja California|Baja California Sur|Campeche|Chiapas|Chihuahua|Coahuila de Zaragoza|Colima|Durango|Guanajuato|Guerrero|Hidalgo|Jalisco|Michoacan de Ocampo|Morelos|Nayarit|Nuevo Leon|Oaxaca|Puebla|Queretaro de Arteaga|Quintana Roo|San Luis Potosi|Sinaloa|Sonora|Tabasco|Tamaulipas|Tlaxcala|Veracruz-Llave|Yucatan|Zacatecas';\n    city_states['United States'] = '|Washington DC||Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Georgia|Kentucky|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusets|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming'; //South America\n\n    city_states['Argentina'] = '|Buenos Aires||Catamarca|Chaco|Chubut|Cordoba|Corrientes|Entre Rios|Formosa|Jujuy|La Pampa|La Rioja|Mendoza|Misiones|Neuquen|Rio Negro|Salta|San Juan|San Luis|Santa Cruz|Santa Fe|Santiago del Estero|Tucuman';\n    city_states['Bolivia'] = '|La Paz|Sucre||Chuquisaca|Cochabamba|Beni|Oruro|Pando|Potosi|Santa Cruz|Tarija';\n    city_states['Brazil'] = '|Brasilia||Acre|Alagoas|Amapa|Amazonas|Bahia|Ceara|Distrito Federal|Espirito Santo|Goias|Maranhao|Mato Grosso|Mato Grosso do Sul|Minas Gerais|Para|Paraiba|Parana|Pernambuco|Piaui|Rio de Janeiro|Rio Grande do Norte|Rio Grande do Sul|Rondonia|Roraima|Santa Catarina|Sao Paulo|Sergipe|Tocantins';\n    city_states['Chile'] = '|Santiago||Antofagasta|Araucania|Atacama|Bio-Bio|Coquimbo|Los Lagos|Maule|Tarapaca|Valparaiso';\n    city_states['Colombia'] = '|Bogota||Amazonas|Antioquia|Arauca|Atlantico|Bolivar|Boyaca|Caldas|Caqueta|Casanare|Cauca|Cesar|Choco|Cordoba|Cundinamarca|Guainia|Guaviare|Huila|La Guajira|Magdalena|Meta|Narino|Norte de Santander|Putumayo|Quindio|Risaralda|San Andres/Providencia|Santander|Sucre|Tolima|Valle del Cauca|Vaupes|Vichada';\n    city_states['Ecuador'] = '|Quito||Azuay|Bolivar|Canar|Carchi|Chimborazo|Cotopaxi|El Oro|Esmeraldas|Galapagos|Guayas|Imbabura|Loja|Los Rios|Manabi|Morona-Santiago|Napo|Orellana|Pastaza|Pichincha|Sucumbios|Tungurahua|Zamora-Chinchipe';\n    city_states['Guyana'] = '|Georgetown||Barima-Waini|Cuyuni-Mazaruni|Demerara-Mahaica|East Berbice-Corentyne|Essequibo Islands-West Demerara|Mahaica-Berbice|Pomeroon-Supenaam|Potaro-Siparuni|Upper Demerara-Berbice|Upper Takutu-Upper Essequibo';\n    city_states['Paraguay'] = '|Asuncion||Alto Paraguay|Alto Parana|Amambay|Boqueron|Caaguazu|Caazapa|Canindeyu|Central|Concepcion|Cordillera|Guaira|Itapua|Misiones|Neembucu|Paraguari|Presidente Hayes|San Pedro';\n    city_states['Peru'] = '|Lima||Amazonas|Ancash|Apurimac|Arequipa|Ayacucho|Cajamarca|Callao|Cusco|Huancavelica|Huanuco|Ica|Junin|La Libertad|Lambayeque|Loreto|Madre de Dios|Moquegua|Pasco|Piura|Puno|San Martin|Tacna|Tumbes|Ucayali';\n    city_states['Suriname'] = '|Paramaribo||Brokopondo|Commewijne|Coronie|Marowijne|Nickerie|Para|Saramacca|Sipaliwini|Wanica';\n    city_states['Uruguay'] = '|Montevideo||Artigas|Canelones|Cerro Largo|Colonia|Durazno|Flores|Florida|Lavalleja|Maldonado|Paysandu|Rio Negro|Rivera|Rocha|Salto|San Jose|Soriano|Tacuarembo|Treinta y Tres';\n    city_states['Venezuela'] = '|Caracas||Amazonas|Anzoategui|Apure|Aragua|Barinas|Bolivar|Carabobo|Cojedes|Delta Amacuro|Dependencias Federales|Distrito Federal|Falcon|Guarico|Lara|Merida|Miranda|Monagas|Nueva Esparta|Portuguesa|Sucre|Tachira|Trujillo|Vargas|Yaracuy|Zulia';\n  } // whenever a change is made to an input field, update the corresponding state property\n\n\n  handleNameChange(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  handleOrgIDChange(event) {\n    this.setState({\n      id: event.target.value\n    });\n  }\n\n  handleAChange() {\n    let typea = document.getElementById(\"addresstype\");\n    let streeta = document.getElementById(\"street\");\n    let citya = document.getElementById(\"city\");\n    let statea = document.getElementById(\"state\");\n    let zipa = document.getElementById(\"zip\");\n    let countrya = document.getElementById(\"country\");\n    let typea2 = document.getElementById(\"addresstype2\");\n    let streeta2 = document.getElementById(\"street2\");\n    let citya2 = document.getElementById(\"city2\");\n    let statea2 = document.getElementById(\"state2\");\n    let zipa2 = document.getElementById(\"zip2\");\n    let countrya2 = document.getElementById(\"country2\");\n    this.setState({\n      address: [{\n        zip: zipa.value,\n        country: countrya.value,\n        state: statea.value,\n        type: typea.value,\n        city: citya.value,\n        street: streeta.value\n      }, {\n        zip: zipa2.value,\n        country: countrya2.value,\n        state: statea2.value,\n        type: typea2.value,\n        city: citya2.value,\n        street: streeta2.value\n      }]\n    });\n  }\n\n  handleCChange() {\n    let fnamec = document.getElementById(\"fname\");\n    let lnamec = document.getElementById(\"lname\");\n    let typec = document.getElementById(\"contacttype\");\n    let phonec = document.getElementById(\"phone\");\n    let emailc = document.getElementById(\"email\");\n    let fnamec2 = document.getElementById(\"fname2\");\n    let lnamec2 = document.getElementById(\"lname2\");\n    let typec2 = document.getElementById(\"contacttype2\");\n    let phonec2 = document.getElementById(\"phone2\");\n    let emailc2 = document.getElementById(\"email2\");\n    this.setState({\n      contact: [{\n        firstName: fnamec.value,\n        lastName: lnamec.value,\n        type: typec.value,\n        phone: phonec.value,\n        email: emailc.value\n      }, {\n        firstName: fnamec2.value,\n        lastName: lnamec2.value,\n        type: typec2.value,\n        phone: phonec2.value,\n        email: emailc2.value\n      }]\n    });\n  }\n\n  handleimgCapture() {\n    let RadioimgNo = document.getElementById(\"imgCaptureNo\");\n    let RadioimgYes = document.getElementById(\"imgCaptureYes\");\n\n    if (RadioimgNo.checked) {\n      this.RadioVal1 = \"false\";\n    }\n\n    if (RadioimgYes.checked) {\n      this.RadioVal1 = \"true\";\n    }\n  }\n\n  handleidCapture() {\n    let RadioidNo = document.getElementById(\"idCaptureNo\");\n    let RadioidYes = document.getElementById(\"idCaptureYes\");\n\n    if (RadioidNo.checked) {\n      this.RadioVal2 = \"false\";\n    }\n\n    if (RadioidYes.checked) {\n      this.RadioVal2 = \"true\";\n    }\n  }\n\n  handleConfigChange() {\n    let smoothingf = document.getElementById(\"smoothingframe\");\n    let anomalyd = document.getElementById(\"anomalyduration\");\n    let framei = document.getElementById(\"frameinterval\");\n    this.setState({\n      configuration: {\n        Registration: {\n          imageCapture: this.RadioVal1,\n          idCapture: this.RadioVal2\n        },\n        postProcess: {\n          anomalyDuration: anomalyd.value,\n          smoothingFrame: smoothingf.value,\n          frameInterval: framei.value\n        }\n      }\n    });\n  }\n\n  stateUpdate() {\n    this.handleCChange();\n    this.handleAChange();\n    this.handleConfigChange();\n    this.idcaptureVal();\n    this.imgcaptureVal();\n  }\n\n  orgnameVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"orgnameErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"orgnameErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  orgidVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"orgidErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"orgidErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  addresstypeVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"addresstypeErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"addresstypeErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  streetVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"streetErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"streetErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  zipVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"zipErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"zipErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  cityVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"cityErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"cityErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  stateVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"stateErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"stateErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  countryVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"countryErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"countryErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  contacttypeVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"contacttypeErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"contacttypeErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  fnameVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"fnameErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"fnameErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  lnameVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"lnameErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"lnameErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  phoneVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"phoneErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"phoneErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  emailVal(event) {\n    let emailv = document.getElementById(\"email\");\n    let rg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let isValid = rg.test(emailv.value);\n\n    if (event.target.value === \"\") {\n      document.getElementById(\"emailErrMsg\").innerHTML = \"Required\";\n    } else if (!isValid) {\n      document.getElementById(\"emailErrMsg\").innerHTML = \"The email has an incorrect format\";\n    } else {\n      document.getElementById(\"emailErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  idcaptureVal() {\n    let RadioidNo = document.getElementById(\"idCaptureNo\");\n    let RadioidYes = document.getElementById(\"idCaptureYes\");\n\n    if (!RadioidNo.checked && !RadioidYes.checked) {\n      //document.getElementById(\"imgcaptureErrMsg\").innerHTML=\"Required\"\n      this.idCapVal = false;\n    } else {\n      //document.getElementById(\"imgcaptureErrMsg\").innerHTML=\"\"\n      this.idCapVal = true;\n    }\n  }\n\n  imgcaptureVal() {\n    let RadioimgNo = document.getElementById(\"imgCaptureNo\");\n    let RadioimgYes = document.getElementById(\"imgCaptureYes\");\n\n    if (!RadioimgNo.checked && !RadioimgYes.checked) {\n      //document.getElementById(\"imgcaptureErrMsg\").innerHTML=\"Required\"\n      this.imgCapVal = false;\n    } else {\n      //document.getElementById(\"imgcaptureErrMsg\").innerHTML=\"\"\n      this.imgCapVal = true;\n    }\n  }\n\n  frameintervalVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"frameintervalErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"frameintervalErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  anomalydurationVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"anomalydurationErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"anomalydurationErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  smoothingframeVal(event) {\n    if (event.target.value === \"\") {\n      document.getElementById(\"smoothingframeErrMsg\").innerHTML = \"Required\";\n    } else {\n      document.getElementById(\"smoothingframeErrMsg\").innerHTML = \"\";\n    }\n  }\n\n  setRegions() {\n    for (region in countries) document.write('<option value=\"' + region + '\">' + region + '</option>');\n  }\n\n  set_country(oRegionSel, oCountrySel, oCity_StateSel) {\n    var countryArr;\n    oCountrySel.length = 0;\n    oCity_StateSel.length = 0;\n    var region = oRegionSel.options[oRegionSel.selectedIndex].text;\n\n    if (countries[region]) {\n      oCountrySel.disabled = false;\n      oCity_StateSel.disabled = true;\n      oCountrySel.options[0] = new Option('SELECT COUNTRY', '');\n      countryArr = countries[region].split('|');\n\n      for (var i = 0; i < countryArr.length; i++) oCountrySel.options[i + 1] = new Option(countryArr[i], countryArr[i]);\n\n      document.getElementById('txtregion').innerHTML = region;\n      document.getElementById('txtplacename').innerHTML = '';\n    } else oCountrySel.disabled = true;\n  }\n\n  set_city_state(oCountrySel, oCity_StateSel) {\n    var city_stateArr;\n    oCity_StateSel.length = 0;\n    var country = oCountrySel.options[oCountrySel.selectedIndex].text;\n\n    if (city_states[country]) {\n      oCity_StateSel.disabled = false;\n      oCity_StateSel.options[0] = new Option('SELECT NEAREST DIVISION', '');\n      city_stateArr = city_states[country].split('|');\n\n      for (var i = 0; i < city_stateArr.length; i++) oCity_StateSel.options[i + 1] = new Option(city_stateArr[i], city_stateArr[i]);\n\n      document.getElementById('txtplacename').innerHTML = country;\n    } else oCity_StateSel.disabled = true;\n  }\n\n  print_city_state(oCountrySel, oCity_StateSel) {\n    var country = oCountrySel.options[oCountrySel.selectedIndex].text;\n    var city_state = oCity_StateSel.options[oCity_StateSel.selectedIndex].text;\n    if (city_state && city_states[country].indexOf(city_state) != -1) document.getElementById('txtplacename').innerHTML = city_state + ', ' + country;else document.getElementById('txtplacename').innerHTML = country;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let orgNamev = document.getElementById(\"orgname\");\n    let orgIdv = document.getElementById(\"orgID\");\n    let typeav = document.getElementById(\"addresstype\");\n    let streetav = document.getElementById(\"street\");\n    let cityav = document.getElementById(\"city\");\n    let stateav = document.getElementById(\"state\");\n    let zipav = document.getElementById(\"zip\");\n    let countryav = document.getElementById(\"country\");\n    let fnamecv = document.getElementById(\"fname\");\n    let lnamecv = document.getElementById(\"lname\");\n    let typecv = document.getElementById(\"contacttype\");\n    let phonecv = document.getElementById(\"phone\");\n    let emailcv = document.getElementById(\"email\");\n    let smoothingfv = document.getElementById(\"smoothingframe\");\n    let anomalydv = document.getElementById(\"anomalyduration\");\n    let frameiv = document.getElementById(\"frameinterval\"); // let imageNov = document.getElementById(\"imgCaptureNo\")\n    // let imageYesv = document.getElementById(\"imgCaptureYes\")\n    // let idNov = document.getElementById(\"idCaptureNo\")\n    // let idYesv = document.getElementById(\"idCaptureYes\")\n\n    let emailv = document.getElementById(\"email\");\n    let rg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let emailValid = rg.test(emailv.value);\n\n    if (!emailValid) {\n      alert(\"The email entered is not valid\");\n    } else if (orgNamev.value === \"\" || orgIdv.value === \"\" || typeav.value === \"\" || streetav.value === \"\" || cityav.value === \"\" || stateav.value === \"\" || zipav.value === \"\" || countryav.value === \"\" || fnamecv.value === \"\" || lnamecv.value === \"\" || typecv.value === \"\" || phonecv.value === \"\" || emailcv.value === \"\" || !this.idCapVal || !this.imgCapVal || smoothingfv.value === \"\" || anomalydv.value === \"\" || frameiv.value === \"\") {\n      alert(\"One or more required fields are missing\");\n    } else {\n      // prevent default submit action\n      // distribute data stored in state into new object\n      const formData = {\n        description: this.state.description,\n        id: this.state.id,\n        contact: this.state.contact,\n        address: this.state.address,\n        configuration: this.state.configuration\n      };\n      console.log(formData); //make api call to post data\n\n      axios.post(`/orgs`, formData).then(res => {\n        if (res.status === 200) {\n          this.props.history.push('/add-org-confirmation');\n        }\n      }) // else, display error\n      .catch(error => alert(error));\n    }\n  }\n\n  render() {\n    const labelstyle = {\n      color: \"#3cB650\",\n      fontFamily: \"sans-serif\",\n      fontWeight: \"400\",\n      padding: \"20px\",\n      position: \"relative\",\n      textRendering: \"optimizeLegibility\",\n      display: \"inline-block\",\n      width: \"70%\"\n    };\n    const textbxstyle = {\n      width: \"70%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      boxSizing: \"border-box\",\n      display: \"inline-block\"\n    };\n    const textbxstyle2 = {\n      width: \"70%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      boxSizing: \"border-box\",\n      display: \"inline-block\"\n    };\n    const buttonstyle = {\n      backgroundColor: \"#4CAF50\",\n      border: \"none\",\n      color: \"white\",\n      padding: \"10px 22px\",\n      textAlign: \"center\",\n      textDecoration: \"none\",\n      display: \"inline-block\",\n      fontSize: \"16px\",\n      margin: \"4px 2px\",\n      cursor: \"pointer\",\n      borderRadius: \"30px\"\n    }; // const textbxstyle3 = {\n    //   width: \"90%\",\n    //   padding: \"12px 20px\",\n    //   margin: \"8px 0\",\n    //   border: \"1px solid #ccc\",\n    //   borderRadius: \"4px\",\n    //   boxSizing: \"border-box\",\n    //   display: \"inline-block\"\n    // }; \n    // const textbxstyle4 = {\n    //   width: \"40%\",\n    //   padding: \"12px 20px\",\n    //   margin: \"8px 0\",\n    //   border: \"1px solid #ccc\",\n    //   borderRadius: \"4px\",\n    //   boxSizing: \"border-box\",\n    //   display: \"inline-block\"\n    // }; \n\n    const {\n      isOpen\n    } = this.state;\n    const {\n      isOpen2\n    } = this.state;\n    const {\n      isOpen3\n    } = this.state;\n    const {\n      isOpen4\n    } = this.state;\n    const {\n      isOpen5\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsxDEV(Heading2, {\n          children: \"Add Organizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.wrapper,\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexChild,\n              children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell3,\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"orgname\",\n                      style: labelstyle,\n                      children: \"Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 860,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 858,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell4,\n                    style: {\n                      textAlign: \"left\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      style: textbxstyle2,\n                      type: \"text\",\n                      id: \"orgname\",\n                      name: \"orgname\",\n                      value: this.state.description,\n                      onChange: this.handleNameChange,\n                      onBlur: this.orgnameVal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 868,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 877,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"orgnameErrMsg\",\n                      style: {\n                        color: \"red\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 878,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 865,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell3,\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"orgID\",\n                      style: labelstyle,\n                      children: \"ID:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 888,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell4,\n                    style: {\n                      textAlign: \"left\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      // onChangeText={(text) => {this.setState({ ID: text })}} \n                      style: textbxstyle2,\n                      type: \"text\",\n                      id: \"orgID\",\n                      name: \"orgID\",\n                      value: this.state.id,\n                      onBlur: this.orgidVal,\n                      onChange: this.handleOrgIDChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 897,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 906,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"orgidErrMsg\",\n                      style: {\n                        color: \"red\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 907,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 894,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Accordion, {\n                isOpen: isOpen,\n                onChange: this.onChange,\n                label: \"Address\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 941,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"addresstype\",\n                        style: labelstyle,\n                        children: \"Type of Address (Primary/Billing/Technical):\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 947,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 944,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"addresstype\",\n                        name: \"addresstype\",\n                        onBlur: this.addresstypeVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 956,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 963,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"addresstypeErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 964,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 953,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 943,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"street\",\n                        style: labelstyle,\n                        children: \"Street:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 974,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"street\",\n                        name: \"street\",\n                        onBlur: this.streetVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 983,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 990,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"streetErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 980,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"city\",\n                        style: labelstyle,\n                        children: \"City:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1001,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 998,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"city\",\n                        name: \"city\",\n                        onBlur: this.cityVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1010,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1017,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"cityErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1018,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1007,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 997,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"state\",\n                        style: labelstyle,\n                        children: \"State/Province:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1028,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1025,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"state\",\n                        name: \"state\",\n                        onBlur: this.stateVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1037,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1044,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"stateErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1045,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1034,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1024,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"zip\",\n                        style: labelstyle,\n                        children: \"Zip Code:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1055,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1052,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"zip\",\n                        name: \"zip\",\n                        onBlur: this.zipVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1064,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1071,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"zipErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1072,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1061,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"country\",\n                        style: labelstyle,\n                        children: \"Country:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1082,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1079,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"country\",\n                        name: \"country\",\n                        onBlur: this.countryVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1091,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1098,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"countryErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1099,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1088,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1078,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 942,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 940,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Accordion4, {\n                isOpen4: isOpen4,\n                onChange: this.onChange4,\n                label: \"Add Additional Address\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"addresstype2\",\n                        style: labelstyle,\n                        children: \"Type of Address (Primary/Billing/Technical):\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1115,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1112,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onChangeText={(text) => {this.setState({ typeofaddress2: text })}} \n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"addresstype2\",\n                        name: \"addresstype2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1124,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1121,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1111,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"street2\",\n                        style: labelstyle,\n                        children: \"Street:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1137,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1134,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2 // onChangeText={(text) => {this.setState({ street2: text })}}\n                        ,\n                        type: \"text\",\n                        id: \"street2\",\n                        name: \"street2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1146,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1143,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1133,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"city2\",\n                        style: labelstyle,\n                        children: \"City:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1159,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1156,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2 // onChangeText={(text) => {this.setState({ city2: text })}} \n                        ,\n                        type: \"text\",\n                        id: \"city2\",\n                        name: \"city2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1168,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1165,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1155,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"state2\",\n                        style: labelstyle,\n                        children: \"State/Province:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1180,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1178,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2 //onChangeText={(text) => {this.setState({ statea2: text })}} \n                        ,\n                        type: \"text\",\n                        id: \"state2\",\n                        name: \"state2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1189,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1186,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1177,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"zip2\",\n                        style: labelstyle,\n                        children: \"Zip Code:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1202,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1199,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle2,\n                        type: \"text\",\n                        id: \"zip2\",\n                        name: \"zip2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1211,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1208,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1198,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell3,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"country2\",\n                        style: labelstyle,\n                        children: \"Country:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1223,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1220,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell4,\n                      style: {\n                        textAlign: \"left\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1229,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1219,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1110,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Accordion2, {\n                isOpen2: isOpen2,\n                onChange: this.onChange2,\n                label: \"Contact\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1246,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"contacttype\",\n                        style: labelstyle,\n                        children: \"Type of Contact (Primary/Billing/Technical):\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1252,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1249,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.ValidatorTofC()} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"contacttype\",\n                        name: \"contacttype\",\n                        onBlur: this.contacttypeVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1261,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1269,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"contacttypeErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1270,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1258,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1248,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"fname\",\n                        style: labelstyle,\n                        children: \"First Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1280,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1277,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"fname\",\n                        name: \"fname\",\n                        onBlur: this.fnameVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1289,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1296,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"fnameErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1297,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1286,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1276,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"lname\",\n                        style: labelstyle,\n                        children: \"Last Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1307,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1304,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"lname\",\n                        name: \"lname\",\n                        onBlur: this.lnameVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1316,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1323,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"lnameErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1324,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1313,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1303,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"email\",\n                        style: labelstyle,\n                        children: \"Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1334,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1331,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"email\",\n                        name: \"email\",\n                        onBlur: this.emailVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1343,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1350,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"emailErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1351,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1340,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1330,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"phone\",\n                        style: labelstyle,\n                        children: \"Phone:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1361,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1358,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        // onBlur = {()=> this.Validatorphone()} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"phone\",\n                        name: \"phone\",\n                        onBlur: this.phoneVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1370,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1378,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"phoneErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1379,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1367,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1357,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1247,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Accordion5, {\n                isOpen5: isOpen5,\n                onChange: this.onChange5,\n                label: \"Add Additional Contact\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"contacttype2\",\n                        style: labelstyle,\n                        children: \"Type of Contact (Primary/Billing/Technical):\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1395,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1392,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onChangeText={(text) => {this.setState({ typeofcontact2: text })}} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"contacttype2\",\n                        name: \"contacttype2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1404,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1401,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1391,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        for: \"fname2\",\n                        style: labelstyle,\n                        children: \"First Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1417,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1414,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle // onChangeText={(text) => {this.setState({ fname2: text })}} \n                        ,\n                        type: \"text\",\n                        id: \"fname2\",\n                        name: \"fname2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1426,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1423,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1413,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        for: \"lname2\",\n                        style: labelstyle,\n                        children: \"Last Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1439,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1436,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle // onChangeText={(text) => {this.setState({ lname2: text })}} \n                        ,\n                        type: \"text\",\n                        id: \"lname2\",\n                        name: \"lname2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1448,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1445,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1435,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"email2\",\n                        style: labelstyle,\n                        children: \"Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1461,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1458,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        // onChangeText={(text) => {this.setState({ email2: text })}} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"email2\",\n                        name: \"email2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1469,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1466,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1457,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"phone2\",\n                        style: labelstyle,\n                        children: \"Phone:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1482,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1479,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"phone2\",\n                        name: \"phone2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1491,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1488,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1478,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1389,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1388,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Accordion3, {\n              isOpen3: isOpen3,\n              onChange: this.onChange3,\n              label: \"Configuration Settings\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell14,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"ImgCapture\",\n                        style: labelstyle,\n                        children: \"Image Capture Setting:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1509,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1506,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell15,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        style: labelstyle,\n                        style: {\n                          paddingBottom: \"0\",\n                          color: \"#3cB650\"\n                        },\n                        children: \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1518,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1523,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        style: labelstyle,\n                        style: {\n                          paddingBottom: \"0\",\n                          color: \"#3cB650\"\n                        },\n                        children: \"Yes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1524,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1529,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"imgCaptureErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1530,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1515,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell16,\n                      style: {\n                        textAlign: \"center\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          id: \"labelr\",\n                          className: classes.RadioButton,\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            name: \"imgCaptureNo\",\n                            id: \"imgCaptureNo\",\n                            value: \"false\",\n                            onChange: this.handleimgCapture\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1542,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.checkmark\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1548,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1539,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          id: \"labelr\",\n                          className: classes.RadioButton,\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            name: \"imgCaptureYes\",\n                            id: \"imgCaptureYes\",\n                            value: \"true\",\n                            onChange: this.handleimgCapture\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1555,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.checkmark\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1562,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1552,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1538,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1535,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1505,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1504,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell14,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"idCapture\",\n                        style: labelstyle,\n                        children: \"ID Capture Setting:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1575,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1572,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell15,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        style: labelstyle,\n                        style: {\n                          paddingBottom: \"0\",\n                          color: \"#3cB650\"\n                        },\n                        children: \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1584,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1589,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        style: labelstyle,\n                        style: {\n                          paddingBottom: \"0\",\n                          color: \"#3cB650\"\n                        },\n                        children: \"Yes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1590,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1595,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"idCaptureErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1596,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1581,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell16,\n                      style: {\n                        textAlign: \"center\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          id: \"labelr\",\n                          className: classes.RadioButton,\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            name: \"idCaptureNo\",\n                            id: \"idCaptureNo\",\n                            value: \"false\",\n                            onChange: this.handleidCapture\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1608,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.checkmark\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1614,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1605,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          id: \"labelr\",\n                          className: classes.RadioButton,\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            name: \"idCaptureYes\",\n                            id: \"idCaptureYes\",\n                            value: \"true\",\n                            onChange: this.handleidCapture\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1621,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.checkmark\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1628,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1618,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1604,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1601,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1571,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1570,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"frameInterval\",\n                        style: labelstyle,\n                        children: \"Frame Interval:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1641,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1638,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"frameinterval\",\n                        name: \"frameinterval\",\n                        onBlur: this.frameintervalVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1650,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1657,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"frameintervalErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1658,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1647,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1637,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"anomalyDuration\",\n                        style: labelstyle,\n                        children: \"Anomaly Duration:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1668,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1665,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        // onChangeText={(text) => {this.setState({ anomalyduration: text })}} \n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"anomalyduration\",\n                        name: \"anomalyduration\",\n                        onBlur: this.anomalydurationVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1677,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1685,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"anomalydurationErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1686,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1674,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1664,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"smoothingFrame\",\n                        style: labelstyle,\n                        children: \"Smoothing Frame:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1696,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1693,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"smoothingframe\",\n                        name: \"smoothingframe\",\n                        onBlur: this.smoothingframeVal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1705,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1712,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"smoothingframeErrMsg\",\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1713,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1702,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1692,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1636,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1503,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1502,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexChild,\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classes.cell7,\n                    style: {\n                      textAlign: \"right\",\n                      paddingRight: \"2%\",\n                      paddingTop: \"2%\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      onClick: this.stateUpdate,\n                      type: \"submit\",\n                      value: \"Submit\",\n                      style: buttonstyle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1728,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1725,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1724,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1723,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1722,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(OrgForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/containers/OrgForms/OrgForm.js"],"names":["React","Component","withRouter","axios","classes","RadioButton","Heading2","Accordion","Accordion2","Accordion3","Accordion4","Accordion5","OrgForm","constructor","state","isOpen","isOpen2","isOpen3","isOpen4","isOpen5","onChange","setState","onChange2","onChange3","onChange4","onChange5","description","id","itemType","contact","address","configuration","RadioVal1","RadioVal2","imgCapVal","idCapVal","handleNameChange","bind","handleOrgIDChange","handleSubmit","handleCChange","handleAChange","handleimgCapture","handleConfigChange","handleidCapture","orgnameVal","orgidVal","addresstypeVal","streetVal","cityVal","zipVal","stateVal","countryVal","contacttypeVal","fnameVal","lnameVal","phoneVal","emailVal","imgcaptureVal","idcaptureVal","smoothingframeVal","anomalydurationVal","frameintervalVal","stateUpdate","countries","Object","city_states","event","target","value","typea","document","getElementById","streeta","citya","statea","zipa","countrya","typea2","streeta2","citya2","statea2","zipa2","countrya2","zip","country","type","city","street","fnamec","lnamec","typec","phonec","emailc","fnamec2","lnamec2","typec2","phonec2","emailc2","firstName","lastName","phone","email","RadioimgNo","RadioimgYes","checked","RadioidNo","RadioidYes","smoothingf","anomalyd","framei","Registration","imageCapture","idCapture","postProcess","anomalyDuration","smoothingFrame","frameInterval","innerHTML","emailv","rg","isValid","test","setRegions","region","write","set_country","oRegionSel","oCountrySel","oCity_StateSel","countryArr","length","options","selectedIndex","text","disabled","Option","split","i","set_city_state","city_stateArr","print_city_state","city_state","indexOf","preventDefault","orgNamev","orgIdv","typeav","streetav","cityav","stateav","zipav","countryav","fnamecv","lnamecv","typecv","phonecv","emailcv","smoothingfv","anomalydv","frameiv","emailValid","alert","formData","console","log","post","then","res","status","props","history","push","catch","error","render","labelstyle","color","fontFamily","fontWeight","padding","position","textRendering","display","width","textbxstyle","margin","border","borderRadius","boxSizing","textbxstyle2","buttonstyle","backgroundColor","textAlign","textDecoration","fontSize","cursor","main","wrapper","flexChild","cell3","cell4","cell1","cell2","cell14","cell15","paddingBottom","cell16","checkmark","cell7","paddingRight","paddingTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from '../../axios';\r\n\r\nimport classes from './OrgForm.module.css';\r\nimport RadioButton from '../../components/Form Inputs/RadioButton/RadioButton';\r\nimport Heading2 from '../../components/Form Inputs/Heading2/Heading2';\r\nimport Accordion from '../../components/Accordion/Accordion';\r\nimport Accordion2 from '../../components/Accordion/Accordion2';\r\nimport Accordion3 from '../../components/Accordion/Accordion3';\r\nimport Accordion4 from '../../components/Accordion/Accordion4';\r\nimport Accordion5 from '../../components/Accordion/Accodion5';\r\n\r\nclass OrgForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n          description: '',\r\n          id: '',\r\n          //itemId: '',\r\n          itemType: '',\r\n          contact: null,\r\n          address: null,\r\n          configuration: null,\r\n          }\r\n    \r\n    let RadioVal1 = null\r\n    let RadioVal2 = null\r\n    let imgCapVal = null\r\n    let idCapVal = null\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleOrgIDChange = this.handleOrgIDChange.bind(this);\r\n    // this.handleitemTypeChange = this.handleitemTypeChange.bind(this);\r\n    // this.handleitemIDChange = this.handleitemIDChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCChange = this.handleCChange.bind(this);\r\n    this.handleAChange = this.handleAChange.bind(this);\r\n    this.handleimgCapture = this.handleimgCapture.bind(this);\r\n    this.handleConfigChange = this.handleConfigChange.bind(this);\r\n    this.handleidCapture = this.handleidCapture.bind(this);\r\n    this.orgnameVal = this.orgnameVal.bind(this);\r\n    this.orgidVal = this.orgidVal.bind(this);\r\n    this.addresstypeVal = this.addresstypeVal.bind(this);\r\n    this.streetVal = this.streetVal.bind(this);\r\n    this.cityVal = this.cityVal.bind(this);\r\n    this.zipVal = this.zipVal.bind(this);\r\n    this.stateVal = this.stateVal.bind(this);\r\n    this.countryVal = this.countryVal.bind(this);\r\n    this.contacttypeVal = this.contacttypeVal.bind(this);\r\n    this.fnameVal = this.fnameVal.bind(this);\r\n    this.lnameVal = this.lnameVal.bind(this);\r\n    this.phoneVal = this.phoneVal.bind(this);\r\n    this.emailVal = this.emailVal.bind(this);\r\n    this.imgcaptureVal = this.imgcaptureVal.bind(this);\r\n    this.idcaptureVal = this.idcaptureVal.bind(this);\r\n    this.smoothingframeVal = this.smoothingframeVal.bind(this);\r\n    this.anomalydurationVal = this.anomalydurationVal.bind(this);\r\n    this.frameintervalVal = this.frameintervalVal.bind(this);\r\n    this.stateUpdate = this.stateUpdate.bind(this);\r\n\r\n\r\n    var countries = Object();\r\n\r\n      countries['Africa'] = '|Algeria|Angola|Benin|Botswana|Burkina Faso|Burundi|Cameroon|Cape Verde|Central African Republic|Chad|Comoros|Congo, Dem.|Congo, Rep.|Djibouti|Egypt|Equatorial Guinea|Eritrea|Ethiopia|Gabon|Gambia|Ghana|Guinea|Guinea-Bissau|Kenya|Lesotho|Liberia|Libya|Madagascar|Malawi|Mali|Mauritania|Mauritius|Morocco|Mozambique|Namibia|Niger|Nigeria|Rwanda|Sao Tome/Principe|Senegal|Seychelles|Sierra Leone|Somalia|South Africa|Sudan|Swaziland|Tanzania|Togo|Tunisia|Uganda|Zambia|Zimbabwe';\r\n      countries['Antarctica'] = '|Amundsen-Scott';\r\n      countries['Asia'] = '|Bangladesh|Bhutan|Brunei|Burma (Myanmar)|Cambodia|China|East Timor|India|Indonesia|Japan|Kazakhstan|Korea (north)|Korea (south)|Laos|Malaysia|Maldives|Mongolia|Nepal|Philippines|Russian Federation|Singapore|Sri Lanka|Taiwan|Thailand|Vietnam';\r\n      countries['Australia/Oceania'] = '|Australia|Fiji|Kiribati|Micronesia|Nauru|New Zealand|Palau|Papua New Guinea|Samoa|Tonga|Tuvalu|Vanuatu';\r\n      countries['Caribbean'] = '|Anguilla|Antigua/Barbuda|Aruba|Bahamas|Barbados|Cozumel|Cuba|Dominica|Dominican Republic|Grenada|Guadeloupe|Haiti|Jamaica|Martinique|Montserrat|Netherlands Antilles|Puerto Rico|St. Barts|St. Kitts/Nevis|St. Lucia|St. Martin/Sint Maarten|St Vincent/Grenadines|San Andres|Trinidad/Tobago|Turks/Caicos';\r\n      countries['Central America'] = '|Belize|Costa Rica|El Salvador|Guatemala|Honduras|Nicaragua|Panama';\r\n      countries['Europe'] = '|Albania|Andorra|Austria|Belarus|Belgium|Bosnia-Herzegovina|Bulgaria|Croatia|Czech Republic|Denmark|Estonia|Finland|France|Georgia|Germany|Greece|Hungary|Iceland|Ireland|Italy|Latvia|Liechtenstein|Lithuania|Luxembourg|Macedonia|Malta|Moldova|Monaco|Netherlands|Norway|Poland|Portugal|Romania|San Marino|Serbia/Montenegro (Yugoslavia)|Slovakia|Slovenia|Spain|Sweden|Switzerland|Ukraine|United Kingdom|Vatican City';\r\n      countries['Islands'] = '|Arctic Ocean|Atlantic Ocean (North)|Atlantic Ocean (South)|Assorted|Caribbean Sea|Greek Isles|Indian Ocean|Mediterranean Sea|Oceania|Pacific Ocean (North)|Pacific Ocean (South)';\r\n      countries['Middle East'] = '|Afghanistan|Armenia|Azerbaijan|Bahrain|Cyprus|Iran|Iraq|Israel|Jordan|Kuwait|Kyrgyzstan|Lebanon|Oman|Pakistan|Qatar|Saudi Arabia|Syria|Tajikistan|Turkey|Turkmenistan|United Arab Emirates|Uzbekistan|Yemen';\r\n      countries['North America'] = '|Bermuda|Canada|Greenland|Mexico|United States';\r\n      countries['South America'] = '|Argentina|Bolivia|Brazil|Chile|Colombia|Ecuador|Guyana|Paraguay|Peru|Suriname|Uruguay|Venezuela';\r\n\r\n      ////////////////////////////////////////////////////////////////////////////\r\n\r\n      var city_states = Object();\r\n\r\n      //Africa\r\n      city_states['Algeria'] = '|Algiers||Adrar|Ain Defla|Ain Temouchent|Alger|Annaba|Batna|Bechar|Bejaia|Biskra|Blida|Bordj Bou Arreridj|Bouira|Boumerdes|Chlef|Constantine|Djelfa|El Bayadh|El Oued|El Tarf|Ghardaia|Guelma|Illizi|Jijel|Khenchela|Laghouat|Mascara|Medea|Mila|Mostaganem|M\\'Sila|Naama|Oran|Ouargla|Oum el Bouaghi|Relizane|Saida|Setif|Sidi Bel Abbes|Skikda|Souk Ahras|Tamanghasset|Tebessa|Tiaret|Tindouf|Tipaza|Tissemsilt|Tizi Ouzou|Tlemcen';\r\n      city_states['Angola'] = '|Luanda||Bengo|Benguela|Bie|Cabinda|Cuando Cubango|Cuanza Norte|Cuanza Sul|Cunene|Huambo|Huila|Lunda Norte|Lunda Sul|Malanje|Moxico|Namibe|Uige|Zaire';\r\n      city_states['Benin'] = '|Porto-Novo||Alibori|Atakora|Atlantique|Borgou|Collines|Couffo|Donga|Littoral|Mono|Oueme|Plateau|Zou';\r\n      city_states['Botswana'] = '|Gaborone||Central|Chobe|Francistown|Ghanzi|Kgalagadi|Kgatleng|Kweneng|Lobatse|Ngamiland|North-East|Selebi-Pikwe|South-East|Southern';\r\n      city_states['Burkina Faso'] = '|Ouagadougou||Bale|Bam|Banwa|Bazega|Bougouriba|Boulgou|Boulkiemde|Comoe|Ganzourgou|Gnagna|Gourma|Houet|Ioba|Kadiogo|Kenedougou|Komandjari|Kompienga|Kossi|Koupelogo|Kouritenga|Kourweogo|Leraba|Loroum|Mouhoun|Nahouri|Namentenga|Nayala|Naumbiel|Oubritenga|Oudalan|Passore|Poni|Samentenga|Sanguie|Seno|Sissili|Soum|Sourou|Tapoa|Tuy|Yagha|Yatenga|Ziro|Zondomo|Zoundweogo';\r\n      city_states['Burundi'] = '|Bujumbura||Bubanza|Bujumbura|Bururi|Cankuzo|Cibitoke|Gitega|Karuzi|Kayanza|Kirundo|Makamba|Muramvya|Muyinga|Mwaro|Ngozi|Rutana|Ruyigi';\r\n      city_states['Cameroon'] = '|Yaounde||Adamaoua|Centre|Est|Extreme-Nord|Littoral|Nord|Nord-Ouest|Ouest|Sud|Sud-Ouest';\r\n      city_states['Cape Verde'] = '|Praia||Boa Vista|Brava|Calheta|Maio|Mosteiros|Paul|Porto Novo|Ribeira Grande|Sal|Santa Catarina|Santa Cruz|Sao Domingos|Sao Nicolau|Sao Filipe|Sao Vicente|Tarrafal';\r\n      city_states['Central African Republic'] = '|Bangui||Bamingui-Bangoran|Basse-Kotto|Gribingui|Haute-Kotto|Haute-Sangha|Haut-Mbomou|Kemo-Gribingui|Lobaye|Mbomou|Nana-Mambere|Ombella-Mpoko|Ouaka|Ouham|Ouham-Pende|Sangha|Vakaga';\r\n      city_states['Chad'] = '|N\\'Djamena||Assongha|Baguirmi|Bahr El Gazal|Bahr Koh|Batha Oriental|Batha Occidental|Biltine|Borkou|Dababa|Ennedi|Guera|Hadjer Lamis|Kabia|Kanem|Lac|Lac Iro|Logone Occidental|Logone Oriental|Mandoul|Mayo-Boneye|Mayo-Dallah|Monts de Lam|Ouaddai|Salamat|Sila|Tandjile Oriental|Tandjile Occidental|Tibesti';\r\n      city_states['Congo, Dem.'] = '|Kinshasa||Bandundu|Bas-Congo|Equateur|Kasai-Occidental|Kasai-Oriental|Katanga|Maniema|Nord-Kivu|Orientale|Sud-Kivu';\r\n      city_states['Congo, Rep.'] = '|Brazzaville||Bouenza|Cuvette|Kouilou|Lekoumou|Likouala|Niari|Plateaux|Pool|Sangha';\r\n      city_states['Djibouti'] = '|Djibouti||\\'Ali Sabih|Dikhil|Obock|Tadjoura';\r\n      city_states['Egypt'] = '|Cairo||Ad Daqahliyah|Al Bahr al Ahmar|Al Buhayrah|Al Fayyum|Al Gharbiyah|Al Iskandariyah|Al Isma\\'iliyah|Al Jizah|Al Minufiyah|Al Minya|Al Qahirah|Al Qalyubiyah|Al Wadi al Jadid|Ash Sharqiyah|As Suways|Aswan|Asyut|Bani Suwayf|Bur Sa\\'id|Dumyat|Janub Sina\\'|Kafr ash Shaykh|Matruh|Qina|Shamal Sina\\'|Suhaj';\r\n      city_states['Equatorial Guinea'] = '|Malabo||Annobon|Bioko Norte|Bioko Sur|Centro Sur|Kie-Ntem|Litoral|Wele-Nzas';\r\n      city_states['Eritrea'] = '|Asmara||Central|Anelba|Southern Red Sea|Northern Red Sea|Southern|Gash-Barka';\r\n      city_states['Ethiopia'] = '|Addis Ababa||Adis Abeba (Addis Ababa)|Afar|Amara|Binshangul Gumuz|Dire Dawa|Gambela Hizboch|Hareri Hizb|Oromiya|Sumale (Somali)|Tigray|YeDebub Biheroch Bihereseboch...';\r\n      city_states['Gabon'] = '|Libreville';\r\n      city_states['Gambia'] = '|Estuaire|Haut-Ogooue|Moyen-Ogooue|Ngounie|Nyanga|Ogooue-Ivindo|Ogooue-Lolo|Ogooue-Maritime|Woleu-Ntem';\r\n      city_states['Ghana'] = '|Accra||Ashanti|Brong-Ahafo|Central|Eastern|Northern|Upper East|Upper West|Volta|Western';\r\n      city_states['Guinea'] = '|Conakry||Beyla|Boffa|Boke|Coyah|Dabola|Dalaba|Dinguiraye|Dubreka|Faranah|Forecariah|Fria|Gaoual|Gueckedou|Kankan|Kerouane|Kindia|Kissidougou|Koubia|Koundara|Kouroussa|Labe|Lelouma|Lola|Macenta|Mali|Mamou|Mandiana|Nzerekore|Pita|Siguiri|Telimele|Tougue|Yomou';\r\n      city_states['Guinea-Bissau'] = '|Bissau||Bafata|Biombo|Bolama/Bijagos|Cacheu|Gabu|Oio|Quinara|Tombali';\r\n      city_states['Kenya'] = '|Nairobi||Central|Coast|Eastern|Nairobi Area|North Eastern|Nyanza|Rift Valley|Western';\r\n      city_states['Lesotho'] = '|Maseru||Berea|Butha-Buthe|Leribe|Mafeteng|Mohales Hoek|Mokhotlong|Qacha\\'s Nek|Quthing|Thaba-Tseka';\r\n      city_states['Liberia'] = '|Monrovia||Bomi|Bong|Gparbolu|Grand Bassa|Grand Cape Mount|Grand Gedeh|Grand Kru|Lofa|Margibi|Maryland|Montserrado|Nimba|River Cess|River Gee|Sinoe';\r\n      city_states['Libya'] = '|Tripoli||Ajdabiya|Al \\'Aziziyah|Al Fatih|Al Jabal al Akhdar|Al Jufrah|Al Khums|Al Kufrah|An Nuqat al Khams|Ash Shati\\'|Awbari|Az Zawiyah|Banghazi|Darnah|Ghadamis|Gharyan|Misratah|Murzuq|Sabha|Sawfajjin|Surt|Tarabulus|Tarhunah|Tubruq|Yafran|Zlitan';\r\n      city_states['Madagascar'] = '|Antananarivo||Antsiranana|Fianarantsoa|Mahajanga|Toamasina|Toliara';\r\n      city_states['Malawi'] = '|Lilongwe||Balaka|Blantyre|Chikwawa|Chiradzulu|Chitipa|Dedza|Dowa|Karonga|Kasungu|Likoma|Machinga (Kasupe)|Mangochi|Mchinji|Mulanje|Mwanza|Mzimba|Ntcheu|Nkhata Bay|Nkhotakota|Nsanje|Ntchisi|Phalombe|Rumphi|Salima|Thyolo|Zomba';\r\n      city_states['Mali'] = '|Bamako||Gao|Kayes|Kidal|Koulikoro|Mopti|Segou|Sikasso|Tombouctou';\r\n      city_states['Mauritania'] = '|Nouakchott||Adrar|Assaba|Brakna|Dakhlet Nouadhibou|Gorgol|Guidimaka|Hodh Ech Chargui|Hodh El Gharbi|Inchiri|Tagant|Tiris Zemmour|Trarza';\r\n      city_states['Mauritius'] = '|Port Louis||Agalega Islands|Black River|Cargados Carajos Shoals|Flacq|Grand Port|Moka|Pamplemousses|Plaines Wilhems|Riviere du Rempart|Rodrigues|Savanne';\r\n      city_states['Morocco'] = '|Rabat||Ad Dakhla (Oued Eddahab)|Agadir|Al Hoceima|Azilal|Beni Mellal|Ben Slimane|Boujdour|Boulemane|Casablanca|Chaouen|El Jadida|El Kelaa des Sraghna|Er Rachidia|Essaouira|Es Smara|Fes|Figuig|Guelmim|Ifrane|Kenitra|Khemisset|Khenifra|Khouribga|Laayoune|Larache|Marrakech|Meknes|Nador|Ouarzazate|Oujda|Safi|Settat|Sidi Kacem|Tanger|Tan-Tan|Taounate|Taroudannt|Tata|Taza|Tetouan|Tiznit';\r\n      city_states['Mozambique'] = '|Maputo||Cabo Delgado|Gaza|Inhambane|Manica|Maputo|Nampula|Niassa|Sofala|Tete|Zambezia';\r\n      city_states['Namibia'] = '|Windhoek||Caprivi|Erongo|Hardap|Karas|Khomas|Kunene|Ohangwena|Okavango|Omaheke|Omusati|Oshana|Oshikoto|Otjozondjupa';\r\n      city_states['Niger'] = '|Niamey||Agadez|Diffa|Dosso|Maradi|Tahoua|Tillaberi|Zinder';\r\n      city_states['Nigeria'] = '|Abuja||Abia|Adamawa|Akwa Ibom|Anambra|Bauchi|Bayelsa|Benue|Borno|Cross River|Delta|Ebonyi|Edo|Ekiti|Enugu|Gombe|Imo|Jigawa|Kaduna|Kano|Katsina|Kebbi|Kogi|Kwara|Lagos|Nassarawa|Niger|Ogun|Ondo|Osun|Oyo|Plateau|Rivers|Sokoto|Taraba|Yobe|Zamfara';\r\n      city_states['Rwanda'] = '|Kigali||Butare|Byumba|Cyangugu|Gikongoro|Gisenyi|Gitarama|Kibungo|Kibuye|Ruhengeri|Umutara';\r\n      city_states['Sao Tome/Principe'] = '|Sao Tome||Principe';\r\n      city_states['Senegal'] = '|Dakar||Diourbel|Fatick|Kaolack|Kolda|Louga|Matam|Saint-Louis|Tambacounda|Thies|Ziguinchor';\r\n      city_states['Seychelles'] = '|Victoria||Anse aux Pins|Anse Boileau|Anse Etoile|Anse Louis|Anse Royale|Baie Lazare|Baie Sainte Anne|Beau Vallon|Bel Air|Bel Ombre|Cascade|Glacis|Grand\\' Anse (on Mahe)|Grand\\' Anse (on Praslin)|La Digue|La Riviere Anglaise|Mont Buxton|Mont Fleuri|Plaisance|Pointe La Rue|Port Glaud|Saint Louis|Takamaka';\r\n      city_states['Sierra Leone'] = '|Freetown||Eastern|Northern|Southern|Western';\r\n      city_states['Somalia'] = '|Mogadishu||Awdal|Bakool|Banaadir|Bari|Bay|Galguduud|Gedo|Hiiraan|Jubbada Dhexe|Jubbada Hoose|Mudug|Nugaal|Sanaag|Shabeellaha Dhexe|Shabeellaha Hoose|Sool|Togdheer|Woqooyi Galbeed';\r\n      city_states['South Africa'] = '|Pretoria||Eastern Cape|Free State|Gauteng|KwaZulu-Natal|Mpumalanga|North-West|Northern Cape|Northern Province/Limpopo|Western Cape';\r\n      city_states['Sudan'] = '|Khartoum||A\\'ali an Nil|Al Bahr al Ahmar|Al Buhayrat|Al Jazirah|Al Khartum|Al Qadarif|Al Wahdah|An Nil al Abyad|An Nil al Azraq|Ash Shamaliyah|Bahr al Jabal|Gharb al Istiwa\\'iyah|Gharb Bahr al Ghazal|Gharb Darfur|Gharb Kurdufan|Janub Darfur|Janub Kurdufan|Junqali|Kassala|Nahr an Nil|Shamal Bahr al Ghazal|Shamal Darfur|Shamal Kurdufan|Sharq al Istiwa\\'iyah|Sinnar|Warab';\r\n      city_states['Swaziland'] = '|Lobamba/Mbabane||Hhohho|Lubombo|Manzini|Shiselweni';\r\n      city_states['Tanzania'] = '|Dodoma||Arusha|Dar es Salaam|Iringa|Kagera|Kigoma|Kilimanjaro|Lindi|Mara|Mbeya|Morogoro|Mtwara|Mwanza|Pemba North|Pemba South|Pwani|Rukwa|Ruvuma|Shinyanga|Singida|Tabora|Tanga|Zanzibar Central/South|Zanzibar North|Zanzibar Urban/West';\r\n      city_states['Togo'] = '|Lome||De La Kara|Des Plateaux|Des Savanes|Centrale|Maritime';\r\n      city_states['Tunisia'] = '|Tunis||Ariana|Beja|Ben Arous|Bizerte|El Kef|Gabes|Gafsa|Jendouba|Kairouan|Kasserine|Kebili|Mahdia|Medenine|Monastir|Nabeul|Sfax|Sidi Bou Zid|Siliana|Sousse|Tataouine|Tozeur|Zaghouan';\r\n      city_states['Uganda'] = '|Kampala||Adjumani|Apac|Arua|Bugiri|Bundibugyo|Bushenyi|Busia|Gulu|Hoima|Iganga|Jinja|Kabale|Kabarole|Kaberamaido|Kalangala|Kamuli|Kamwenge|Kanungu|Kapchorwa|Kasese|Katakwi|Kayunga|Kibale|Kiboga|Kisoro|Kitgum|Kotido|Kumi|Kyenjojo|Lira|Luwero|Masaka|Masindi|Mayngc|Mbale|Mbarara|Moroto|Moyo|Mpigi|Mubende|Mukono|Nakapiripiti|Nakasongola|Nebbi|Ntungamo|Pader|Pallisa|Rakai|Rukungiri|Sembabule|Sironko|Soroti|Tororo|Wakiso|Yumbe';\r\n      city_states['Zambia'] = '|Lusaka||Central|Copperbelt|Eastern|Luapula|Lusaka|Northern|North-Western|Southern|Western';\r\n      city_states['Zimbabwe'] = '|Harare||Bulawayo|Manicaland|Mashonaland Central|Mashonaland East|Mashonaland West|Masvingo|Matabeleland North|Matabeleland South|Midlands';\r\n\r\n\r\n      //Asia\r\n      city_states['Bangladesh'] = '|Dhaka||Barisal|Chittagong|Khulna|Rajshahi|Sylhet';\r\n      city_states['Bhutan'] = '|Thimphu||Bumthang|Chhukha|Chirang|Dagana|Gasa|Geylegphug|Ha|Lhuntshi|Mongar|Paro|Pemagatsel|Punakha|Samchi|Samdrup Jongkhar|Shemgang|Tashigang|Tongsa|Wangdi Phodrang|Yangtse';\r\n      city_states['Brunei'] = '|Bandar Seri Begawan||Belait|Brunei/Muara|Temburong|Tutong';\r\n      city_states['Burma (Myanmar)'] = '|Rangoon||Ayeyarwady|Bago|Chin|Kachin|Kayin|Kayah|Magway|Mandalay|Mon|Rakhine|Sagaing|Shan|Tanintharyi|Yangon';\r\n      city_states['Cambodia'] = '|Phnom Penh||Banteay Mean Cheay|Batdambang|Kampong Cham|Kampong Chhnang|Kampong Spoe|Kampong Thum|Kampot|Kandal|Kaoh Kong|Keb|Kracheh|Mondol Kiri|Otdar Mean Cheay|Pailin|Pouthisat|Preah Seihanu (Sihanoukville)|Preah Vihear|Prey Veng|Rotanah Kiri|Siem Reab|Stoeng Treng|Svay Rieng|Takev';\r\n      city_states['China'] = '|Beijing||Anhui|Chongqing|Fujian|Gansu|Guangdong|Guangxi|Guizhou|Hainan|Hebei|Heilongjiang|Henan|Hubei|Hunan|Jiangsu|Jiangxi|Jilin|Liaoning|Nei Mongol|Ningxia|Qinghai|Shaanxi|Shandong|Shanghai|Shanxi|Sichuan|Tianjin|Xinjiang|Xizang (Tibet)|Yunnan|Zhejiang';\r\n      city_states['East Timor'] = '|Dili||Aileu|Ainaro|Baucau|Bobonaro (Maliana)|Cova-Lima (Suai)|Ermera|Lautem (Los Palos)|Liquica|Manatuto|Manufahi (Same)|Oecussi (Ambeno)|Viqueque';\r\n      city_states['India'] = '|New Delhi||Andaman/Nicobar Islands|Andhra Pradesh|Arunachal Pradesh|Assam|Bihar|Chandigarh|Chhattisgarh|Dadra/Nagar Haveli|Daman/Diu|Goa|Gujarat|Haryana|Himachal Pradesh|Jammu/Kashmir|Jharkhand|Karnataka|Kerala|Lakshadweep|Madhya Pradesh|Maharashtra|Manipur|Meghalaya|Mizoram|Nagaland|Orissa|Pondicherry|Punjab|Rajasthan|Sikkim|Tamil Nadu|Tripura|Uttaranchal|Uttar Pradesh|West Bengal';\r\n      city_states['Indonesia'] = '|Jakarta||Aceh|Bali|Banten|Bengkulu|Gorontalo|Jakarta Raya|Jambi|Jawa Barat|Jawa Tengah|Jawa Timur|Kalimantan Barat|Kalimantan Selatan|Kalimantan Tengah|Kalimantan Timur|Kepulauan Bangka Belitung|Lampung|Maluku|Maluku Utara|Nusa Tenggara Barat|Nusa Tenggara Timur|Papua|Riau|Sulawesi Selatan|Sulawesi Tengah|Sulawesi Tenggara|Sulawesi Utara|Sumatera Barat|Sumatera Selatan|Sumatera Utara|Yogyakarta';\r\n      city_states['Japan'] = '|Tokyo||Aichi|Akita|Aomori|Chiba|Ehime|Fukui|Fukuoka|Fukushima|Gifu|Gumma|Hiroshima|Hokkaido|Hyogo|Ibaraki|Ishikawa|Iwate|Kagawa|Kagoshima|Kanagawa|Kochi|Kumamoto|Kyoto|Mie|Miyagi|Miyazaki|Nagano|Nagasaki|Nara|Niigata|Oita|Okayama|Okinawa|Osaka|Saga|Saitama|Shiga|Shimane|Shizuoka|Tochigi|Tokushima|Tokyo|Tottori|Toyama|Wakayama|Yamagata|Yamaguchi|Yamanashi';\r\n      city_states['Kazakhstan'] = '|Astana||Almaty|Almaty|Aqmola|Aqtobe|Astana|Atyrau|Batys Qazaqstan|Bayqongyr|Mangghystau|Ongtustik Qazaqstan|Pavlodar|Qaraghandy|Qostanay|Qyzylorda|Shyghys Qazaqstan|Soltustik Qazaqstan|Zhambyl';\r\n      city_states['Korea (north)'] = '|P\\'yongyang||Chagang-do|Hamgyong-bukto|Hamgyong-namdo|Hwanghae-bukto|Hwanghae-namdo|Kaesong-si|Kangwon-do|Najin Sonbong-si|Namp\\'o-si|P\\'yongan-bukto|P\\'yongan-namdo|P\\'yongyang-si|Yanggang-do';\r\n      city_states['Korea (south)'] = '|Seoul||Cheju-do|Cholla-bukto|Cholla-namdo|Ch\\'ungch\\'ong-bukto|Ch\\'ungch\\'ong-namdo|Inch\\'on-gwangyoksi|Kangwon-do|Kwangju-gwangyoksi|Kyonggi-do|Kyongsang-bukto|Kyongsang-namdo|Pusan-gwangyoksi|Soul-t\\'ukpyolsi|Taegu-gwangyoksi|Taejon-gwangyoksi|Ulsan-gwangyoksi';\r\n      city_states['Laos'] = '|Vientiane||Attapu|Bokeo|Bolikhamxai|Champasak|Houaphan|Khammouan|Louangnamtha|Louangphabang|Oudomxai|Phongsali|Salavan|Savannakhet|Viangchan|Viangchan|Xaignabouli|Xaisomboun|Xekong|Xiangkhoang';\r\n      city_states['Malaysia'] = '|Kuala Lumpur||Johor|Kedah|Kelantan|Labuan|Melaka|Negeri Sembilan|Pahang|Perak|Perlis|Pulau Pinang|Putrajaya|Sabah|Sarawak|Selangor|Terengganu|Wilayah Persekutuan';\r\n      city_states['Maldives'] = '|Maale||Alifu|Baa|Dhaalu|Faafu|Gaafu Alifu|Gaafu Dhaalu|Gnaviyani|Haa Alifu|Haa Dhaalu|Kaafu|Laamu|Lhaviyani|Meemu|Noonu|Raa|Seenu|Shaviyani|Thaa|Vaavu';\r\n      city_states['Mongolia'] = '|Ulaanbaatar||Arhangay|Bayanhongor|Bayan-Olgiy|Bulgan|Darhan Uul|Dornod|Dornogovi|Dundgovi|Dzavhan|Govi-Altay|Govi-Sumber|Hentiy|Hovd|Hovsgol|Omnogovi|Orhon|Ovorhangay|Selenge|Suhbaatar|Tov|Uvs';\r\n      city_states['Nepal'] = '|Kathmandu||Bagmati|Bheri|Dhawalagiri|Gandaki|Janakpur|Karnali|Kosi|Lumbini|Mahakali|Mechi|Narayani|Rapti|Sagarmatha|Seti';\r\n      city_states['Philippines'] = '|Manila||Oriental|North Cotabato|Northern Samar|Nueva Ecija|Nueva Vizcaya|Olongapo|Ormoc|Oroquieta|Ozamis|Pagadian|Palawan|Palayan|Pampanga|Pangasinan|Pasay|Puerto Princesa|Quezon|Quezon City|Quirino|Rizal|Romblon|Roxas|Samar|San Carlos (Negros Occidental)|San Carlos (Pangasinan)|San Jose|San Pablo|Silay|Siquijor|Sorsogon|South Cotabato|Southern Leyte|Sultan Kudarat|Sulu|Surigao|Surigao del Norte|Surigao del Sur|Tacloban|Tagaytay|Tagbilaran|Tangub|Tarlac|Tawi-Tawi|Toledo|Trece Martires|Zambales|Zamboanga|Zamboanga del Norte|Zamboanga del Sur';\r\n      city_states['Russian Federation'] = '|Moskva (Moscow)||Adygeya (Maykop)|Aginskiy Buryatskiy (Aginskoye)|Altay (Gorno-Altaysk)|Altayskiy (Barnaul)|Amurskaya (Blagoveshchensk)|Arkhangel\\'skaya|Astrakhanskaya|Bashkortostan (Ufa)|Belgorodskaya|Bryanskaya|Buryatiya (Ulan-Ude)|Chechnya (Groznyy)|Chelyabinskaya|Chitinskaya|Chukotskiy (Anadyr\\')|Chuvashiya (Cheboksary)|Dagestan (Makhachkala)|Evenkiyskiy (Tura)|Ingushetiya (Nazran\\')|Irkutskaya|Ivanovskaya|Kabardino-Balkariya (Nal\\'chik)|Kaliningradskaya|Kalmykiya (Elista)|Kaluzhskaya|Kamchatskaya (Petropavlovsk-Kamchatskiy)|Karachayevo-Cherkesiya (Cherkessk)|Kareliya (Petrozavodsk)|Kemerovskaya|Khabarovskiy|Khakasiya (Abakan)|Khanty-Mansiyskiy (Khanty-Mansiysk)|Kirovskaya|Komi (Syktyvkar)|Koryakskiy (Palana)|Kostromskaya|Krasnodarskiy|Krasnoyarskiy|Kurganskaya|Kurskaya|Leningradskaya|Lipetskaya|Magadanskaya|Mariy-El (Yoshkar-Ola)|Mordoviya (Saransk)|Moskovskaya|Murmanskaya|Nenetskiy (Nar\\'yan-Mar)|Nizhegorodskaya|Novgorodskaya|Novosibirskaya|Omskaya|Orenburgskaya|Orlovskaya (Orel)|Penzenskaya|Permskaya|Komi-Permyatskiy (Kudymkar)|Primorskiy (Vladivostok)|Pskovskaya|Rostovskaya|Ryazanskaya|Sakha (Yakutiya)|Sakhalinskaya (Yuzhno-Sakhalinsk)|Samarskaya|Sankt-Peterburg (Saint Petersburg)|Saratovskaya|Severnaya Osetiya-Alaniya [North Ossetia] (Vladikavkaz)|Smolenskaya|Stavropol\\'skiy|Sverdlovskaya (Yekaterinburg)|Tambovskaya|Tatarstan (Kazan\\')|Taymyrskiy (Dudinka)|Tomskaya|Tul\\'skaya|Tverskaya|Tyumenskaya|Tyva (Kyzyl)|Udmurtiya (Izhevsk)|Ul\\'yanovskaya|Ust\\'-Ordynskiy Buryatskiy (Ust\\'-Ordynskiy)|Vladimirskaya|Volgogradskaya|Vologodskaya|Voronezhskaya|Yamalo-Nenetskiy (Salekhard)|Yaroslavskaya|Yevreyskaya';\r\n      city_states['Singapore'] = '';\r\n      city_states['Sri Lanka'] = '|Colombo||Central|North Central|Northern|Eastern|North Western|Sabaragamuwa|Southern|Uva|Western';\r\n      city_states['Taiwan'] = '|Taipei||Chang-hua|Chia-i|Chi-lung|Chung-hsing-hsin-ts\\'un|Hsin-chu|Hua-lien|I-lan|Kao-hsiung|Miao-li|Nan-t\\'ou|P\\'eng-hu|P\\'ing-tung|T\\'ai-chung|T\\'ai-nan|T\\'ai-pei|T\\'ai-tung|T\\'ao-yuan/Yun-lin';\r\n      city_states['Thailand'] = '|Bangkok||Amnat Charoen|Ang Thong|Buriram|Chachoengsao|Chai Nat|Chaiyaphum|Chanthaburi|Chiang Mai|Chiang Rai|Chon Buri|Chumphon|Kalasin|Kamphaeng Phet|Kanchanaburi|Khon Kaen|Krabi|Lampang|Lamphun|Loei|Lop Buri|Mae Hong Son|Maha Sarakham|Mukdahan|Nakhon Nayok|Nakhon Pathom|Nakhon Phanom|Nakhon Ratchasima|Nakhon Sawan|Nakhon Si Thammarat|Nan|Narathiwat|Nong Bua Lamphu|Nong Khai|Nonthaburi|Pathum Thani|Pattani|Phangnga|Phatthalung|Phayao|Phetchabun|Phetchaburi|Phichit|Phitsanulok|Phra Nakhon Si Ayutthaya|Phrae|Phuket|Prachin Buri|Prachuap Khiri Khan|Ranong|Ratchaburi|Rayong|Roi Et|Sa Kaeo|Sakon Nakhon|Samut Prakan|Samut Sakhon|Samut Songkhram|Sara Buri|Satun|Sing';\r\n      city_states['Vietnam'] = '|Hanoi||An Giang|Bac Giang|Bac Kan|Bac Lieu|Bac Ninh|Ba Ria-Vung Tau|Ben Tre|Binh Dinh|Binh Duong|Binh Phuoc|Binh Thuan|Ca Mau|Can Tho|Cao Bang|Dac Lak|Da Nang|Dong Nai|Dong Thap|Gia Lai|Ha Giang|Hai Duong|Hai Phong|Ha Nam|Ha Noi|Ha Tay|Ha Tinh|Hoa Binh|Ho Chi Minh|Hung Yen|Khanh Hoa|Kien Giang|Kon Tum|Lai Chau|Lam Dong|Lang Son|Lao Cai|Long An|Nam Dinh|Nghe An|Ninh Binh|Ninh Thuan|Phu Tho|Phu Yen|Quang Binh|Quang Nam|Quang Ngai|Quang Ninh|Quang Tri|Soc Trang|Son La|Tay Ninh|Thai Binh|Thai Nguyen|Thanh Hoa|Thua Thien-Hue|Tien Giang|Tra Vinh|Tuyen Quang|Vinh Long|Vinh Phuc|Yen Bai';\r\n\r\n\r\n      //Australia-Oceania\r\n      city_states['Australia'] = '|Canberra||Australian Capital Territory|New South Wales|Northern Territory|Queensland|South Australia|Tasmania|Victoria|Western Australia';\r\n      city_states['Fiji'] = '|Suva||Central|Eastern|Northern|Rotuma|Western';\r\n      city_states['Kiribati'] = '|Tarawa||Abaiang|Abemama|Aranuka|Arorae|Banaba|Beru|Butaritari|Gilberts (Central)|Gilberts (Northern)|Gilberts (Southern)|Kanton|Kiritimati|Kuria|Line Islands|Maiana|Makin|Marakei|Nikunau|Nonouti|Onotoa|Phoenix Islands|Tabiteuea|Tabuaeran|Tamana|Teraina';\r\n      city_states['Micronesia'] = '|Palikir||Chuuk (Truk)|Kosrae|Pohnpei|Yap';\r\n      city_states['Nauru'] = '|Yaren||Aiwo|Anabar|Anetan|Anibare|Baiti|Boe|Buada|Denigomodu|Ewa|Ijuw|Meneng|Nibok|Uaboe';\r\n      city_states['New Zealand'] = '|Wellington||Akaroa|Amuri|Ashburton|Auckland|Banks Peninsula|Bay of Islands|Bay of Plenty|Bruce|Buller|Canterbury|Carterton|Chatham Islands|Cheviot|Christchurch|Clifton|Clutha|Cook|Dannevirke|Dunedin|Egmont|Eketahuna|Ellesmere|Eltham|Eyre|Far North|Featherston|Franklin|Gisborne|Golden Bay|Gore|Great Barrier Island|Grey|Hamilton|Hastings|Hauraki Plains|Hawera|Hawke\\'s Bay|Heathcote|Hikurangi|Hobson|Hokianga|Horowhenua|Hurunui|Hutt|Inangahua|Inglewood|Invercargill|Kaikoura|Kaipara|Kairanga|Kapiti Coast|Kawerau|Kiwitea|Lake|Mackenzie|Malvern|Manaia|Manawatu|Mangonui|Maniototo|Manukau|Marlborough|Masterton|Matamata|Matamata Piako|Mount Herbert|Napier|Nelson|Nelson|New Plymouth|Northland|North Shore|Ohinemuri|Opotiki|Oroua|Otago|Otamatea|Otorohanga|Oxford|Palmerston North|Pahiatua|Papakura|Paparua|Patea|Piako|Pohangina|Porirua|Queenstown Lakes|Raglan|Rangiora|Rangitikei|Rodney|Rotorua|Ruapehu|Runanga|Saint Kilda|Selwyn|Silverpeaks|Southland|South Taranaki|South Waikato|South Wairarapa|Stewart Island|Stratford|Strathallan|Taranaki|Tararua|Tasman|Taumarunui|Taupo|Tauranga|Thames Coromandel|Timaru|Tuapeka|Upper Hutt|Vincent|Waiapu|Waiheke|Waihemo|Waikato|Waikohu|Waimairi|Waimarino|Waimate|Waimate West|Waimea|Waipa|Waipawa|Waipukurau|Wairarapa South|Wairewa|Wairoa|Waitakere|Waitaki|Waitomo|Waitotara|Wallace|Wanganui|Wanganui-Manawatu|Waverley|West Coast|Western Bay of Plenty|Westland|Whakatane|Whangarei|Whangaroa|Woodville';\r\n      city_states['Palau'] = '|Koror||Aimeliik|Airai|Angaur|Hatobohei|Kayangel|Melekeok|Ngaraard|Ngarchelong|Ngardmau|Ngatpang|Ngchesar|Ngeremlengui|Ngiwal|Peleliu|Sonsoral';\r\n      city_states['Papua New Guinea'] = '|Port Moresby||Bougainville|Central|Chimbu|Eastern Highlands|East New Britain|East Sepik|Enga|Gulf|Madang|Manus|Milne Bay|Morobe|National Capital|New Ireland|Northern|Sandaun|Southern Highlands|Western|Western Highlands|West New Britain';\r\n      city_states['Samoa'] = '|Apia||A\\'ana|Aiga-i-le-Tai|Atua|Fa\\'asaleleaga|Gaga\\'emauga|Gagaifomauga|Palauli|Satupa\\'itea|Tuamasaga|Va\\'a-o-Fonoti|Vaisigano';\r\n      city_states['Tonga'] = '|Nuku\\'alofa||Ha\\'apai|Tongatapu|Vava\\'u';\r\n      city_states['Tuvalu'] = '|Fongafale';\r\n      city_states['Vanuatu'] = '|Port-Vila||Malampa|Penama|Sanma|Shefa|Tafea|Torba';\r\n\r\n\r\n      //Caribbean\r\n      city_states['Anguilla'] = '|The Valley';\r\n      city_states['Antigua/Barbuda'] = '|Saint John||Barbuda|Redonda|Saint George|Saint Mary|Saint Paul|Saint Peter|Saint Philip';\r\n      city_states['Aruba'] = '|Oranjestad';\r\n      city_states['Bahamas'] = '|Nassau||Acklins/Crooked Islands|Bimini|Cat Island|Exuma|Freeport|Fresh Creek|Governor\\'s Harbour|Green Turtle Cay|Harbour Island|High Rock|Inagua|Kemps Bay|Long Island|Marsh Harbour|Mayaguana|New Providence|Nichollstown/Berry Islands|Ragged Island|Rock Sound|Sandy Point|San Salvador/Rum Cay';\r\n      city_states['Barbados'] = '|Bridgetown||Christ Church|Saint Andrew|Saint George|Saint James|Saint John|Saint Joseph|Saint Lucy|Saint Michael|Saint Peter|Saint Philip|Saint Thomas';\r\n      city_states['Cuba'] = '|Havana||Camaguey|Ciego de Avila|Cienfuegos|Ciudad de La Habana|Granma|Guantanamo|Holguin|Isla de la Juventud|La Habana|Las Tunas|Matanzas|Pinar del Rio|Sancti Spiritus|Santiago de Cuba|Villa Clara';\r\n      city_states['Dominica'] = '|Roseau||Saint Andrew|Saint David|Saint George|Saint John|Saint Joseph|Saint Luke|Saint Mark|Saint Patrick|Saint Paul|Saint Peter';\r\n      city_states['Dominican Republic'] = '|Santo Domingo||Azua|Baoruco|Barahona|Dajabon|Distrito Nacional|Duarte|Elias Pina|El Seibo|Espaillat|Hato Mayor|Independencia|La Altagracia|La Romana|La Vega|Maria Trinidad Sanchez|Monsenor Nouel|Monte Cristi|Monte Plata|Pedernales|Peravia|Puerto Plata|Salcedo|Samana|Sanchez Ramirez|San Cristobal|San Juan|San Pedro de Macoris|Santiago|Santiago Rodriguez|Valverde';\r\n      city_states['Grenada'] = '|Saint George\\'s||Carriacou/Petit Martinique|Saint Andrew|Saint David|Saint John|Saint Mark|Saint Patrick';\r\n      city_states['Guadeloupe'] = '|Basse-Terre';\r\n      city_states['Haiti'] = '|Port-au-Prince||Artibonite|Centre|Grand \\'Anse|Nord|Nord-Est|Nord-Ouest|Ouest|Sud|Sud-Est';\r\n      city_states['Jamaica'] = '|Kingston||Clarendon|Hanover|Manchester|Portland|Saint Andrew|Saint Ann|Saint Catherine|Saint Elizabeth|Saint James|Saint Mary|Saint Thomas|Trelawny|Westmoreland';\r\n      city_states['Martinique'] = '|Fort-de-France';\r\n      city_states['Montserrat'] = '|Brades Estate|Plymouth||Saint Anthony|Saint Georges|Saint Peter';\r\n      city_states['Netherlands Antilles'] = '|Willemstad';\r\n      city_states['Puerto Rico'] = '|San Juan||Adjuntas|Aguada|Aguadilla|Aguas Buenas|Aibonito|Anasco|Arecibo|Arroyo|Barceloneta|Barranquitas|Bayamon|Cabo Rojo|Caguas|Camuy|Canovanas|Carolina|Catano|Cayey|Ceiba|Ciales|Cidra|Coamo|Comerio|Corozal|Culebra|Dorado|Fajardo|Florida|Guanica|Guayama|Guayanilla|Guaynabo|Gurabo|Hatillo|Hormigueros|Humacao|Isabela|Jayuya|Juana Diaz|Juncos|Lajas|Lares|Las Marias|Las Piedras|Loiza|Luquillo|Manati|Maricao|Maunabo|Mayaguez|Moca|Morovis|Naguabo|Naranjito|Orocovis|Patillas|Penuelas|Ponce|Quebradillas|Rincon|Rio Grande|Sabana Grande|Salinas|San German|San Lorenzo|San Sebastian|Santa Isabel|Toa Alta|Toa Baja|Trujillo Alto|Utuado|Vega Alta|Vega Baja|Vieques|Villalba|Yabucoa|Yauco';\r\n      city_states['St. Barts'] = '';\r\n      city_states['St. Kitts/Nevis'] = '|Basseterre||Christ Church Nichola Town|St. Anne Sandy Point|St. George Basseterre|St. George Gingerland|St. James Windward|St. John Capesterre|St. John Figtree|St. Mary Cayon|St. Paul Capesterre|St. Paul Charlestown|St. Peter Basseterre|St. Thomas Lowland|St. Thomas Middle Island|Trinity Palmetto Point';\r\n      city_states['St. Lucia'] = '|Castries||Anse-la-Raye|Castries|Choiseul|Dauphin|Dennery|Gros-Islet|Laborie|Micoud|Praslin|Soufriere|Vieux-Fort';\r\n      city_states['St. Martin/Sint Maarten'] = '';\r\n      city_states['St Vincent/Grenadines'] = '|Kingstown||Charlotte|Grenadines|Saint Andrew|Saint David|Saint George|Saint Patrick';\r\n      city_states['San Andres'] = '';\r\n      city_states['Trinidad/Tobago'] = '|Port-of-Spain||Arima|Caroni|Mayaro|Nariva|Saint Andrew|Saint David|Saint George|Saint Patrick|San Fernando|Tobago|Victoria';\r\n      city_states['Turks/Caicos'] = '|Grand Turk (Cockburn Town)';\r\n\r\n\r\n      //Central America\r\n      city_states['Belize'] = '|Belmopan||Belize|Cayo|Corozal|Orange Walk|Stann Creek|Toledo';\r\n      city_states['Costa Rica'] = '|San Jose||Alajuela|Cartago|Guanacaste|Heredia|Limon|Puntarenas';\r\n      city_states['El Salvador'] = '|San Salvador||Ahuachapan|Cabanas|Chalatenango|Cuscatlan|La Libertad|La Paz|La Union|Morazan|San Miguel|Santa Ana|San Vicente|Sonsonate|Usulutan';\r\n      city_states['Guatemala'] = '|Guatemala||Alta Verapaz|Baja Verapaz|Chimaltenango|Chiquimula|El Progreso|Escuintla|Guatemala|Huehuetenango|Izabal|Jalapa|Jutiapa|Peten|Quetzaltenango|Quiche|Retalhuleu|Sacatepequez|San Marcos|Santa Rosa|Solola|Suchitepequez|Totonicapan|Zacapa';\r\n      city_states['Honduras'] = '|Tegucigalpa||Atlantida|Choluteca|Colon|Comayagua|Copan|Cortes|El Paraiso|Francisco Morazan|Gracias a Dios|Intibuca|Islas de la Bahia|La Paz|Lempira|Ocotepeque|Olancho|Santa Barbara|Valle|Yoro';\r\n      city_states['Nicaragua'] = '|Managua||Boaco|Carazo|Chinandega|Chontales|Esteli|Granada|Jinotega|Leon|Madriz|Managua|Masaya|Matagalpa|Nueva Segovia|Rio San Juan|Rivas|Atlantico Norte|Atlantico Sur';\r\n      city_states['Panama'] = '|Panama||Bocas del Toro|Chiriqui|Cocle|Colon|Darien|Herrera|Los Santos|San Blas|Veraguas';\r\n\r\n\r\n      //Europe\r\n      city_states['Albania'] = '|Tirana||Berat|Bulqize|Delvine|Devoll|Diber|Durres|Elbasan|Fier|Gjirokaster|Gramsh|Has|Kavaje|Kolonje|Korce|Kruje|Kucove|Kukes|Kurbin|Lezhe|Librazhd|Lushnje|Malesi e Madhe|Mallakaster|Mat|Mirdite|Peqin|Permet|Pogradec|Puke|Sarande|Shkoder|Skrapar|Tepelene|Tirane|Tropoje|Vlore';\r\n      city_states['Andorra'] = '|Andorra la Vella||Canillo|Encamp|La Massana|Escaldes-Engordany|Ordino|Sant Julia de Loria';\r\n      city_states['Austria'] = '|Vienna||Burgenland|Kaernten|Niederoesterreich|Oberoesterreich|Salzburg|Steiermark|Tirol|Vorarlberg|Wien';\r\n      city_states['Belarus'] = '|Minsk||Brest|Homyel\\'|Horad Minsk||Hrodna|Mahilyow|Vitsyebsk';\r\n      city_states['Belgium'] = '|Brussels||Antwerpen|Brabant Wallon|Brussels (Bruxelles)|Hainaut|Liege|Limburg|Luxembourg|Namur|Oost-Vlaanderen|Vlaams-Brabant|West-Vlaanderen';\r\n      city_states['Bosnia/Herzegovina'] = '|Sarajevo';\r\n      city_states['Bulgaria'] = '|Sofiya||Blagoevgrad|Burgas|Dobrich|Gabrovo|Khaskovo|Kurdzhali|Kyustendil|Lovech|Montana|Pazardzhik|Pernik|Pleven|Plovdiv|Razgrad|Ruse|Shumen|Silistra|Sliven|Smolyan|Sofiya-Grad|Stara Zagora|Turgovishte|Varna|Veliko Turnovo|Vidin|Vratsa|Yambol';\r\n      city_states['Croatia'] = '|Zagreb||Bjelovarsko-Bilogorska|Brodsko-Posavska|Dubrovacko-Neretvanska|Istarska|Karlovacka|Koprivnicko-Krizevacka|Krapinsko-Zagorska|Licko-Senjska|Medimurska|Osjecko-Baranjska|Pozesko-Slavonska|Primorsko-Goranska|Sibensko-Kninska|Sisacko-Moslavacka|Splitsko-Dalmatinska|Varazdinska|Viroviticko-Podravska|Vukovarsko-Srijemska|Zadarska|Zagrebacka';\r\n      city_states['Czech Republic'] = '|Prague (Praha)||Jihocesky|Jihomoravsky|Karlovarsky|Kralovehradecky|Liberecky|Moravskoslezsky|Olomoucky|Pardubicky|Plzensky|Stredocesky|Ustecky|Vysocina|Zlinsky';\r\n      city_states['Denmark'] = '|Copenhagen (Kobenhavn)||Arhus|Bornholm|Fredericksberg|Frederiksborg|Fyn|Kobenhavns|Nordjylland|Ribe|Ringkobing|Roskilde|Sonderjylland|Storstrom|Vejle|Vestsjalland|Viborg';\r\n      city_states['Estonia'] = '|Harjumaa (Tallinn)||Hiiumaa (Kardla)|Ida-Virumaa (Johvi)|Jarvamaa (Paide)|Jogevamaa (Jogeva)|Laanemaa (Haapsalu)|Laane-Virumaa (Rakvere)|Parnumaa (Parnu)|Polvamaa (Polva)|Raplamaa (Rapla)|Saaremaa (Kuressaare)|Tartumaa (Tartu)|Valgamaa (Valga)|Viljandimaa (Viljandi)|Vorumaa (Voru)';\r\n      city_states['Finland'] = '|Helsinki||Aland|Etela-Suomen Laani|Ita-Suomen Laani|Lansi-Suomen Laani|Lappi|Oulun Laani';\r\n      city_states['France'] = '|Paris||Alsace|Aquitaine|Auvergne|Basse-Normandie|Bourgogne|Bretagne|Centre|Champagne-Ardenne|Corse|Franche-Comte|Haute-Normandie|Ile-de-France|Languedoc-Roussillon|Limousin|Lorraine|Midi-Pyrenees|Nord-Pas-de-Calais|Pays de la Loire|Picardie|Poitou-Charentes|Provence-Alpes-Cote d\\'Azur|Rhone-Alpes';\r\n      city_states['Georgia'] = '|T\\'bilisi||Bat\\'umi|Chiat\\'ura|Gori|Guria|Imereti|Kakheti|K\\'ut\\'aisi|Kvemo Kartli|Mtskheta-Mtianeti|P\\'ot\\'i|Racha-Lechkhumi/Kvemo Svaneti|Rust\\'avi|Samegrelo/Zemo Svaneti|Samtskhe-Javakheti|Shida Kartli|Sokhumi|Tqibuli|Tsqaltubo|Zugdidi';\r\n      city_states['Germany'] = '|Berlin||Baden-Wuerttemberg|Bayern|Berlin|Brandenburg|Bremen|Hamburg|Hessen|Mecklenburg-Vorpommern|Niedersachsen|Nordrhein-Westfalen|Rheinland-Pfalz|Saarland|Sachsen|Sachsen-Anhalt|Schleswig-Holstein|Thueringen';\r\n      city_states['Greece'] = '|Athens||Agion Oros (Mt. Athos)|Achaia|Aitolia kai Akarmania|Argolis|Arkadia|Arta|Attiki|Chalkidiki|Chanion|Chios|Dodekanisos|Drama|Evros|Evrytania|Evvoia|Florina|Fokidos|Fthiotis|Grevena|Ileia|Imathia|Ioannina|Irakleion|Karditsa|Kastoria|Kavala|Kefallinia|Kerkyra|Kilkis|Korinthia|Kozani|Kyklades|Lakonia|Larisa|Lasithi|Lefkas|Lesvos|Magnisia|Messinia|Pella|Pieria|Preveza|Rethynnis|Rodopi|Samos|Serrai|Thesprotia|Thessaloniki|Trikala|Voiotia|Xanthi|Zakynthos';\r\n      city_states['Hungary'] = '|Budapest||Bacs-Kiskun|Baranya|Bekes|Bekescsaba|Borsod-Abauj-Zemplen|Csongrad|Debrecen|Dunaujvaros|Eger|Fejer|Gyor|Gyor-Moson-Sopron|Hajdu-Bihar|Heves|Hodmezovasarhely|Jasz-Nagykun-Szolnok|Kaposvar|Kecskemet|Komarom-Esztergom|Miskolc|Nagykanizsa|Nograd|Nyiregyhaza|Pecs|Pest|Somogy|Sopron|Szabolcs-Szatmar-Bereg|Szeged|Szekesfehervar|Szolnok|Szombathely|Tatabanya|Tolna|Vas|Veszprem|Veszprem|Zala|Zalaegerszeg';\r\n      city_states['Iceland'] = '|Reykjavik||Akranes|Akureyri|Arnessysla|Austur-Bardhastrandarsysla|Austur-Hunavatnssysla|Austur-Skaftafellssysla|Borgarfjardharsysla|Dalasysla|Eyjafjardharsysla|Gullbringusysla|Hafnarfjordhur|Husavik|Isafjordhur|Keflavik|Kjosarsysla|Kopavogur|Myrasysla|Neskaupstadhur|Nordhur-Isafjardharsysla|Nordhur-Mulasys-la|Nordhur-Thingeyjarsysla|Olafsfjordhur|Rangarvallasysla|Saudharkrokur|Seydhisfjordhur|Siglufjordhur|Skagafjardharsysla|Snaefellsnes-og Hnappadalssysla|Strandasysla|Sudhur-Mulasysla|Sudhur-Thingeyjarsysla|Vesttmannaeyjar|Vestur-Bardhastrandarsysla|Vestur-Hunavatnssysla|Vestur-Isafjardharsysla|Vestur-Skaftafellssysla';\r\n      city_states['Ireland'] = '|Dublin||Carlow|Cavan|Clare|Cork|Donegal|Galway|Kerry|Kildare|Kilkenny|Laois|Leitrim|Limerick|Longford|Louth|Mayo|Meath|Monaghan|Offaly|Roscommon|Sligo|Tipperary|Waterford|Westmeath|Wexford|Wicklow';\r\n      city_states['Italy'] = '|Rome||Abruzzi|Basilicata|Calabria|Campania|Emilia-Romagna|Friuli-Venezia Giulia|Lazio|Liguria|Lombardia|Marche|Molise|Piemonte|Puglia|Sardegna|Sicilia|Toscana|Trentino-Alto Adige|Umbria|Valle d\\'Aosta|Veneto';\r\n      city_states['Latvia'] = '|Riga||Aizkraukles|Aluksnes|Balvu|Bauskas|Cesu|Daugavpils|Daugavpils|Dobeles|Gulbenes|Jekabpils|Jelgava|Jelgavas|Jurmala|Kraslavas|Kuldigas|Liepaja|Liepajas|Limbazu|Ludzas|Madonas|Ogres|Preilu|Rezekne|Rezeknes|Riga|Rigas|Saldus|Talsu|Tukuma|Valkas|Valmieras|Ventspils|Ventspils';\r\n      city_states['Liechtenstein'] = '|Vaduz||Balzers|Eschen|Gamprin|Mauren|Planken|Ruggell|Schaan|Schellenberg|Triesen|Triesenberg';\r\n      city_states['Lithuania'] = '|Vilnius||Alytaus|Kauno|Klaipedos|Marijampoles|Panevezio|Siauliu|Taurages|Telsiu|Utenos';\r\n      city_states['Luxembourg'] = '|Luxembourg||Diekirch|Grevenmacher';\r\n      city_states['Macedonia'] = '|Skopje||Aracinovo|Bac|Belcista|Berovo|Bistrica|Bitola|Blatec|Bogdanci|Bogomila|Bogovinje|Bosilovo|Brvenica|Cair|Capari|Caska|Cegrane|Centar|Centar Zupa|Cesinovo|Cucer-Sandevo|Debar|Delcevo|Delogozdi|Demir Hisar|Demir Kapija|Dobrusevo|Dolna Banjica|Dolneni|Dorce Petrov|Drugovo|Dzepciste|Gazi Baba|Gevgelija|Gostivar|Gradsko|Ilinden|Izvor|Jegunovce|Kamenjane|Karbinci|Karpos|Kavadarci|Kicevo|Kisela Voda|Klecevce|Kocani|Konce|Kondovo|Konopiste|Kosel|Kratovo|Kriva Palanka|Krivogastani|Krusevo|Kuklis|Kukurecani|Kumanovo|Labunista|Lipkovo|Lozovo|Lukovo|Makedonska Kamenica|Makedonski Brod|Mavrovi Anovi|Meseista|Miravci|Mogila|Murtino|Negotino|Negotino-Polosko|Novaci|Novo Selo|Oblesevo|Ohrid|Orasac|Orizari|Oslomej|Pehcevo|Petrovec|Plasnica|Podares|Prilep|Probistip|Radovis|Rankovce|Resen|Rosoman|Rostusa|Samokov|Saraj|Sipkovica|Sopiste|Sopotnica|Srbinovo|Star Dojran|Staravina|Staro Nagoricane|Stip|Struga|Strumica|Studenicani|Suto Orizari|Sveti Nikole|Tearce|Tetovo|Topolcani|Valandovo|Vasilevo|Velesta|Veles|Vevcani|Vinica|Vitoliste|Vranestica|Vrapciste|Vratnica|Vrutok|Zajas|Zelenikovo|Zeleno|Zitose|Zletovo|Zrnovci';\r\n      city_states['Malta'] = '|Valletta';\r\n      city_states['Moldova'] = '|Chisinau||Balti|Cahul|Chisinau|Chisinau|Edinet|Gagauzia|Lapusna|Orhei|Soroca|Stinga Nistrului|Tighina|Ungheni';\r\n      city_states['Monaco'] = '|Monaco||Fontvieille|La Condamine|Monaco-Ville|Monte-Carlo';\r\n      city_states['Netherlands'] = '|Amsterdam|The Hague||Drenthe|Flevoland|Friesland|Gelderland|Groningen|Limburg|Noord-Brabant|Noord-Holland|Overijssel|Utrecht|Zeeland|Zuid-Holland';\r\n      city_states['Norway'] = '|Oslo||Akershus|Aust-Agder|Buskerud|Finnmark|Hedmark|Hordaland|More og Romsdal|Nordland|Nord-Trondelag|Oppland|Ostfold|Rogaland|Sogn og Fjordane|Sor-Trondelag|Telemark|Troms|Vest-Agder|Vestfold';\r\n      city_states['Poland'] = '|Warsaw||Dolnoslaskie|Kujawsko-Pomorskie|Lodzkie|Lubelskie|Lubuskie|Malopolskie|Mazowieckie|Opolskie|Podkarpackie|Podlaskie|Pomorskie|Slaskie|Swietokrzyskie|Warminsko-Mazurskie|Wielkopolskie|Zachodniopomorskie';\r\n      city_states['Portugal'] = '|Lisbon||Aveiro|Acores (Azores)|Beja|Braga|Braganca|Castelo Branco|Coimbra|Evora|Faro|Guarda|Leiria|Lisboa|Madeira|Portalegre|Porto|Santarem|Setubal|Viana do Castelo|Vila Real|Viseu';\r\n      city_states['Romania'] = '|Bucharest (Bucuresti)||Alba|Arad|Arges|Bacau|Bihor|Bistrita-Nasaud|Botosani|Braila|Brasov|Buzau|Calarasi|Caras-Severin|Cluj|Constanta|Covasna|Dimbovita|Dolj|Galati|Gorj|Giurgiu|Harghita|Hunedoara|Ialomita|Iasi|Ilfov|Maramures|Mehedinti|Mures|Neamt|Olt|Prahova|Salaj|Satu Mare|Sibiu|Suceava|Teleorman|Timis|Tulcea|Vaslui|Vilcea|Vrancea';\r\n      city_states['San Marino'] = '|San Marino||Acquaviva|Borgo Maggiore|Chiesanuova|Domagnano|Faetano|Fiorentino|Monte Giardino|Serravalle';\r\n      city_states['Serbia/Montenegro (Yugoslavia)'] = '|Belgrade||Kosovo|Montenegro|Serbia|Vojvodina';\r\n      city_states['Slovakia'] = '|Bratislava||Banskobystricky|Kosicky|Nitriansky|Presovsky|Trenciansky|Trnavsky|Zilinsky';\r\n      city_states['Slovenia'] = '|Ljubljana||Ajdovscina|Beltinci|Bled|Bohinj|Borovnica|Bovec|Brda|Brezice|Brezovica|Cankova-Tisina|Celje|Cerklje na Gorenjskem|Cerknica|Cerkno|Crensovci|Crna na Koroskem|Crnomelj|Destrnik-Trnovska Vas|Divaca|Dobrepolje|Dobrova-Horjul-Polhov Gradec|Dol pri Ljubljani|Domzale|Dornava|Dravograd|Duplek|Gorenja Vas-Poljane|Gorisnica|Gornja Radgona|Gornji Grad|Gornji Petrovci|Grosuplje|Hodos Salovci|Hrastnik|Hrpelje-Kozina|Idrija|Ig|Ilirska Bistrica|Ivancna Gorica|Izola|Jesenice|Jursinci|Kamnik|Kanal|Kidricevo|Kobarid|Kobilje|Kocevje|Komen|Koper|Kozje|Kranj|Kranjska Gora|Krsko|Kungota|Kuzma|Lasko|Lenart|Lendava|Litija|Ljubno|Ljutomer|Logatec|Loska Dolina|Loski Potok|Luce|Lukovica|Majsperk|Maribor|Medvode|Menges|Metlika|Mezica|Miren-Kostanjevica|Mislinja|Moravce|Moravske Toplice|Mozirje|Murska Sobota|Muta|Naklo|Nazarje|Nova Gorica|Novo Mesto|Odranci|Ormoz|Osilnica|Pesnica|Piran|Pivka|Podcetrtek|Podvelka-Ribnica|Postojna|Preddvor|Ptuj|Puconci|Race-Fram|Radece|Radenci|Radlje ob Dravi|Radovljica|Ravne-Prevalje|Ribnica|Rogasevci|Rogaska Slatina|Rogatec|Ruse|Semic|Sencur|Sentilj|Sentjernej|Sentjur pri Celju|Sevnica|Sezana|Skocjan|Skofja Loka|Skofljica|Slovenj Gradec|Slovenska Bistrica|Slovenske Konjice|Smarje pri Jelsah|Smartno ob Paki|Sostanj|Starse|Store|Sveti Jurij|Tolmin|Trbovlje|Trebnje|Trzic|Turnisce|Velenje|Velike Lasce|Videm|Vipava|Vitanje|Vodice|Vojnik|Vrhnika|Vuzenica|Zagorje ob Savi|Zalec|Zavrc|Zelezniki|Ziri|Zrece';\r\n      city_states['Spain'] = '|Madrid||Andalucia|Aragon|Asturias|Baleares (Balearic Islands)|Ceuta|Canarias (Canary Islands)|Cantabria|Castilla-La Mancha|Castilla y Leon|Cataluna|Communidad Valencian|Extremadura|Galicia|La Rioja|Melilla|Murcia|Navarra|Pais Vasco (Basque Country)';\r\n      city_states['Sweden'] = '|Stockholm||Blekinge|Dalarnas|Gavleborgs|Gotlands|Hallands|Jamtlands|Jonkopings|Kalmar|Kronobergs|Norrbottens|Orebro|Ostergotlands|Skane|Sodermanlands|Uppsala|Varmlands|Vasterbottens|Vasternorrlands|Vastmanlands|Vastra Gotalands';\r\n      city_states['Switzerland'] = '|Bern||Aargau|Appenzell Ausser-Rhoden|Appenzell Inner-Rhoden|Basel-Landschaft|Basel-Stadt|Fribourg|Geneve|Glarus|Graubunden|Jura|Luzern|Neuchatel|Nidwalden|Obwalden|Sankt Gallen|Schaffhausen|Schwyz|Solothurn|Thurgau|Ticino|Uri|Valais|Vaud|Zug|Zurich';\r\n      city_states['Ukraine'] = '|Kiev (Kyyiv)||Cherkas\\'ka (Cherkasy)|Chernihivs\\'ka (Chernihiv)|Chernivets\\'ka (Chernivtsi)|Dnipropetrovs\\'ka (Dnipropetrovs\\'k)|Donets\\'ka (Donets\\'k)|Ivano-Frankivs\\'ka (Ivano-Frankivs\\'k)|Izmail (Izmayl)|Kharkivs\\'ka (Kharkiv)|Khersons\\'ka (Kherson)|Khmel\\'nyts\\'ka (Khmel\\'nyts\\'kyy)|Kirovohrads\\'ka (Kirovohrad)|Luhans\\'ka (Luhans\\'k)|L\\'vivs\\'ka (L\\'viv)|Mykolayivs\\'ka (Mykolayiv)|Odes\\'ka (Odesa)|Poltavs\\'ka (Poltava)|Avtonomna Respublika Krym|Rivnens\\'ka (Rivne)|Sevastopol\\'|Sums\\'ka (Sumy)|Ternopil\\'s\\'ka (Ternopil\\')|Vinnyts\\'ka (Vinnytsya)|Volyns\\'ka (Luts\\'k)|Zakarpats\\'ka (Uzhhorod)|Zaporiz\\'ka (Zaporizhzhya)|Zhytomyrs\\'ka (Zhytomyr)';\r\n      city_states['United Kingdom'] = '|-----ENGLAND:-----|Barking/Dagenham|Barnet|Barnsley|Bath/North East Somerset|Bedfordshire|Bexley|Birmingham|Blackburn with Darwen|Blackpool|Bolton|Bournemouth|Bracknell Forest|Bradford|Brent|Brighton/Hove|City of Bristol|Bromley|Buckinghamshire|Bury|Calderdale|Cambridgeshire|Camden|Cheshire|Cornwall|Coventry|Croydon|Cumbria|Darlington|Derby|Derbyshire|Devon|Doncaster|Dorset|Dudley|Durham|Ealing|East Riding of Yorkshire|East Sussex|Enfield|Essex|Gateshead|Gloucestershire|Greenwich|Hackney|Halton|Hammersmith/Fulham|Hampshire|Haringey|Harrow|Hartlepool|Havering|Herefordshire|Hertfordshire|Hillingdon|Hounslow|Isle of Wight|Islington|Kensington/Chelsea|Kent|City of Kingston upon Hull|Kingston upon Thames|Kirklees|Knowsley|Lambeth|Lancashire|Leeds|Leicester|Leicestershire|Lewisham|Lincolnshire|Liverpool|City of London|Luton|Manchester|Medway|Merton|Middlesbrough|Milton Keynes|Newcastle upon Tyne|Newham|Norfolk|Northamptonshire|North East Lincolnshire|North Lincolnshire|North Somerset|North Tyneside|Northumberl/|North Yorkshire|Nottingham|Nottinghamshire|Oldham|Oxfordshire|Peterborough|Plymouth|Poole|Portsmouth|Reading|Redbridge|Redcar/Clevel/|Richmond upon Thames|Rochdale|Rotherham|Rutl/|Salford|Shropshire|S/well|Sefton|Sheffield|Slough|Solihull|Somerset|Southampton|Southend-on-Sea|South Gloucestershire|South Tyneside|Southwark|Staffordshire|St. Helens|Stockport|Stockton-on-Tees|Stoke-on-Trent|Suffolk|Sunderl/|Surrey|Sutton|Swindon|Tameside|Telford/Wrekin|Thurrock|Torbay|Tower Hamlets|Trafford|Wakefield|Walsall|Waltham Forest|W/sworth|Warrington|Warwickshire|West Berkshire|Westminster|West Sussex|Wigan|Wiltshire|Windsor/Maidenhead|Wirral|Wokingham|Wolverhampton|Worcestershire|York||-----NORTHERN IRELAND:-----|Antrim|County Antrim|Ards|Armagh|County Armagh|Ballymena|Ballymoney|Banbridge|Belfast|Carrickfergus|Castlereagh|Coleraine|Cookstown|Craigavon|Down|County Down|Dungannon|Fermanagh|County Fermanagh|Larne|Limavady|Lisburn|County Londonderry|Derry|Magherafelt|Moyle|Newry/Mourne|Newtownabbey|North Down|Omagh|Strabane|County Tyrone||-----SCOTLAND:-----|Aberdeen City|Aberdeenshire|Angus|Argyll/Bute|The Scottish Borders|Clackmannanshire|Dumfries/Galloway|Dundee City|East Ayrshire|East Dunbartonshire|East Lothian|East Renfrewshire|City of Edinburgh|Falkirk|Fife|Glasgow City|Highland|Inverclyde|Midlothian|Moray|North Ayrshire|North Lanarkshire|Orkney Islands|Perth/Kinross|Renfrewshire|Shetland Islands|South Ayrshire|South Lanarkshire|Stirling|West Dunbartonshire|Eilean Siar (Western Isles)|West Lothian||-----WALES-----:|Isle of Anglesey|Blaenau Gwent|Bridgend|Caerphilly|Cardiff|Ceredigion|Carmarthenshire|Conwy|Denbighshire|Flintshire|Gwynedd|Merthyr Tydfil|Monmouthshire|Neath Port Talbot|Newport|Pembrokeshire|Powys|Rhondda Cynon Taff|Swansea|Torfaen|The Vale of Glamorgan|Wrexham';\r\n      city_states['Vatican City'] = '';\r\n\r\n\r\n      //Islands\r\n      city_states['Arctic Ocean'] = '|Franz Josef Land|Svalbard';\r\n      city_states['Atlantic Ocean (North)'] = '|Alderney|Azores|Baixo|Belle-Ile|Bermuda|Bioko|Block|Boa Vista|Borduy|Bugio|Canary Islands|Cape Breton|Cape Verde Islands|Channel Islands|Corvo|Deer Isle|Eysturoy|Faeroe Islands|Fago|Faial|Flores|Fuerteventura|Fugloy|Gomera|Graciosa|Gran Canaria|Grand Manan|Grande|Greenland|Guernsey|Hebrides|Herm|Hestur|Hierro|Iceland|Iles De La Madeleine|Ile de Noirmoutier|Ile de\\' Re|Ile d\\' Ol‚ron|Ile d\\' Yeu|Ilhas Desertas|Ireland|Isle au Haut|Isle of Lewis|Isle of Mull|Isle of Skye|Jersey|Kalsoy|Koltur|Kunoy|Lanzarote|La Palma|Litla Dimun|Long Island|Jan Mayen|Madeira Islands|Maio|Martha\\'s Vineyard|Matinicus|Monhegan|Mount Desert|Mykines|Nantucket Island|Newfoundland|Nolsoy|Orkney Islands|Pico|Porto Santo|Prince Edward Island|St. Peter/St. Paul Rocks|St.-Pierre/Miquelon|Praia|Sable Island|Sal|Sandoy|Santo Antao|Santa Maria|Sao Jorge|Sao Miguel|Sao Nicolau|Sao Tiago|Sao Tome/Principe|Sao Vicente|Sark|Scilly Isles|Shetland Islands|Skuvoy|Stora Dimun|Streymoy|Sumba|Svinoy|Swans|Tenerife|Terceira|Uist Islands|Vagar|Viday|Vinalhaven';\r\n      city_states['Atlantic Ocean (South)'] = '|Amsterdam|Andaman Islands|Annobon|Ascension|Bouvet|Falkland Islands|Gough|Martin Vas Islands|Nightingale|St. Helena|Shag/Black Rocks|South Georgia|South Orkney Islands|South Sandwich Islands|Traversay|Trindade|Tristan da Cunha';\r\n      city_states['Assorted'] = '|Akimiski|Aland|Alcatraz|Apostle Islands|Baffin|Banka|Banks|Beaver|Belcher Islands|Belitung|Borneo|Bornholm|Brac|Coats|Cres|Devon|East Frisian Islands|Ellesmere|Fyn|Galveston|Gotland|Groote Eylandt|Hiiumaa|Hong Kong Island|Ile d\\' Anticosti|Ile d\\' Orleans|Isla de Ometepe|Isla Del Ray|Isle of Man|Isle of Wight|Isle Royale|Jutland|Key Largo|Key West|King William|Krek|Langeland|Lantau|Lolland|Lundy|Mackinac|Madeleine Islands|Manhattan Island|Manitoulin|Marsh|Matagorda|Melville|North Hero|Oland|Paracel Islands|Pelee|Prince Charles|Prince of Wales|Queen Elizabeth Islands|Saaremaa|Sjaelland|Somerset|Southhampton|South Hero|Spratley Islands|Sulawesi|Victoria|Washington|Wellesley Islands';\r\n      city_states['Caribbean Sea'] = '|Abaco (great)|Abaco (little)|Acklins|Andros|Anegada|Anguilla|Antigua|Aruba|Bahamas|Barbados|Barbuda|Bimini Islands|Bonaire|Caicos Islands|Cat|Cayman Brac|Cayman Islands|Cozumel|Crooked|Cuba|Curacao|Dominica|Exuma|Grand Bahama|Grand Cayman|Grand Turk|Greater Antilles|Great Inagua|Grenada|Guadeloupe|Hispaniola (Haiti/DOR)|Isla de Margarita|Isla Mujeres|Isla La Tortuga|Isle of Youth|Jamaica|Lesser Antilles|Little Cayman|Little Inagua|Long|Marie-Galante|Martinique|Mayaguana|Montserrat|Navassa|Nevis|New Providence|Providencia|Puerto Rico|Roatan|Rum Cay|St. Barts|St. Croix|St. Eustatius|St. John|St. Kitts|St. Lucia|St. Martin/Sint Maartan|St. Thomas|St Vincent and the Grenadines|Saba|San Blas Islands|San Salvador|San Andres|Santa Catilina (St. Catherine)|Tobago|Tortola|Trinidad|Virgin Gorda|West Indies';\r\n      city_states['Greek Isles'] = '|Aegina|Alonissos|Amorgos|Andros|Angistri|Astipalea|Carpathos|Cephalonia|Chios (Hios)|Corfu|Cos (Kos)|Crete (Kriti)|Cyclades Islands|Dodecanese Islands|Dokos|Eubaea (Evia)|Evia|Hydra|Ikaria|Ionian Islands|Ios|Ithaca|Kea|Kefalonia|Kefalos|Kalimnos|Kassos|Kithnos|Kos|Kythnos|Kythria|Lefkada|Lemnos|Leros|Lesvos|Leucas|Limnos|Lipsi|Los|Melos|Mykonos|Naxos|Nisyros|Paros|Patmos|Poros|Pothia|Rhodes (Rodos)|Salamina|Samos|Samothrace|Santorini|Serifos|Seriphos|Sifnos|Sikinos|Skiros|Skiathos|Skopelos|Skyros|Spetses|Sporades Islands|Syros|Tenos (Tinos)|Thassos|Tzia|Zakinthos|Zante';\r\n      city_states['Indian Ocean'] = '|Addu Atoll|Agalega Islands|Amsterdam|Andaman Islands|Anjouan (Nzwani)|Ari Atoll|Ashmore/Cartier Islands|Bali|Barrow|Bathurst|Bompoka|Cape Barren|Car Nicobar|Chagos Archipelago|Christmas|Comoros|Crozet Islands|Danger|Diego Garcia|Eagle Islands|Egmont Islands|Faadhippolhu Atoll|Felidhoo Atoll|Flinders|Goidhoo Atoll|Grand Comore (Njazidja)|Great Nicobar|Hadhdhunmathee|Heard|Huvadhoo Atoll|Ihavandhippolhu Atoll|Java|Kangaroo|Katchall|Keeling Islands (Cocos)|King|Kolhumadulu Atoll|Lakshadweep Islands|Little Andaman|Little Nicobar|Lower Andaman|Maalhosmadulu Atoll|Maamakunudhoo Atoll|Madagascar|Mahe|Maldives|Male\\' Atoll|Mauritius|Mayotte|McDonald Islands|Melville|Middle Andaman|Miladhunmafulu Atoll|Moheli (Mwali)|Molaku Atoll|Nancowry|Nelsons Island|Nias|Nicobar Islands|Nilandhoo Atoll|North Andaman|Peros Banhos|Phuket|Prince Edward Islands|Reunion|Rodrigues|St. Paul|Salomon Islands|Seychelles|Shag|Siberut|Simeulue|Sipura|Socotra|Sumatra|Sri Lanka|Tarasa Dwip|Tasmania|Thiladhunmathee Atoll|Three Brothers|Timor|Tromelin|Zanzibar';\r\n      city_states['Mediterranean Sea'] = '|Aeolian Islands|Alboran|Balearic Islands|Cabrera|Capraia|Capri|Corse (Corsica)|Cyprus|Elba|Formentera|Gozo|Ibiza (Ivisa)|Iles d\\' Hyeres|Jalitah|Lampedusa|Lipari Islands|Mallorca (Majorca)|Malta|Maltese Islands|Menorca (Minorca)|Pantelleria|Ponziane|Salina|Sant\\' Antioca|San Pietro|Sardinia (Sardegna)|Sicily (Sicilia)|Stromboli|Vulcano|Zembra';\r\n      city_states['Oceania'] = '|Abaiang|Admiralty Islands|Aitutaki|Alofi|Ambrym|American Samoa|Antipodes|Atafu Atoll|Atiu|Auckland Islands|Aunu\\'u|Austral Islands|Banaba|Bega|Bora Bora|Bougainville|Bounty Islands|Campbell|Chatham Islands|Choiseul|Cook Islands|Coral Sea Islands|Efate|Elao|Erromango|Espiritu Santo|\\' Eua|Faioa|Fakaofo Atoll|Fatu Hiva|Fiji|French Polynesia|Funafuti Atoll|Futuna|Gambier Islands|Gau|Gilbert Islands|Gizo|Grand Terre|Great Barrier Reef|Guadacanal|Ha\\'apai Island Group|Hatutu|Hiva Oa|Horne Islands|Huahine|Isle of Pines|Kadavu|Karkar|Kioa|Kiribati|Kiritamati|Koro|Lakeba|Lau Group|Lifou|Line Islands|Loyalty Islands|Malaita|Malekula|Malolo|Mangaia|Manihiki|Manu\\'a Group|Manuae|Mare|Marquises Islands|Mata Utu|Matuku|Mauke|Maupiti|Melanesia|Mitiaro|Moala|Mohotani|Moorea|Nairai|Nanumea Atoll|Nassau|Nauru|Naviti|Nepean|New Britain|New Caledonia|New Georgia Islands|New Guinea|New Ireland|Niuafo\\'ou|Niuas Islands|Niuatoputapu|Niue|Niulakita Atoll|Nomuka Island Group|Norfolk Islands|Nukuaeta|Nukufetau Atoll|Nuku Hiva|Nukulaelae Atoll|Nukunono Atoll|Ofu|Olasega|Ono|Ouvea|Ovalau|Palmerston|Pangai|Penrhyn|Philip|Phoenix Islands|Pitcairn|Pitt Island|Polynesia|Pukapuka|Rabi|Raiatea|Rakahanga|Rangiroa|Rarotonga|Rotuma|Samao|San Cristobal|Santa Cruz Islands|Santa Isabel|Savai \\'i|Society Islands|Solomon Islands|Stewart|Suwarrow|Tabuaeran|Tahaa|Tahiti|Tahuata|Taiohae|Tanna|Tarawa|Tasmania|Tau|Taveuni|Tetiaroa|Tokelau|Tonga|Tongatapu|Totoya|Tuamotu Islands|Tubuai|Tupai|Tutuila|Tuvalu|Ua Huka|Ua Pou|Hiva Oa|Upolu|\\' Uta Vava\\'u|Uvea|Vaiaku|Vanua Balavu|Vanua Levu|Vanuatu|Vatulele|Vava\\'u Island Group|Vita Levu|Wallis Islands|Wallis and Futuna|Waya|Yasawa|Yasawa Group';\r\n      city_states['Pacific Ocean (North)'] = '|Aleutian Islands|Alexander Islands|Andreanof Islands|Babelthuap|Baker|Bikini|Bohol|Bonin Islands|Cabras|Caroline Islands|Cebu|Channel Islands (US)|Cheju Do|Chuuk|Diomede Islands|Guam|Hainan|Hawaii (big island)|Hawaiian Islands|Hokkaido|Honshu|Howland|Jaluit Atoll|Japan|Johnston Atoll|Kahoolawe|Kauai|Kodiak|Kosrae|Kwajalein Atoll|Kyushu|Lanai|Lifou|Loyalty Islands|Luzon|Maloelap Atoll|Majuro Atoll|Mare|Marshall Islands|Maui|Micronesia|Midway Islands|Mili Atoll|Mindanao|Mindoro|Molakai|Niihau|Near Islands|Negros|Northern Marianas|Nunivak|Oahu|Okinawa|Ostrov Sakhalin|Pagan|Palau|Palawan|Palmyra Atoll|Panay|Philippines|Pohnpei|Queen Charlotte Islands|Rat|Rongelap Atoll|St. Lawrence|St. Matthew|St. Paul|Saipan|Samar|San Clemente|San Miguel|San Nicolas|Santa Catalina|Santa Cruz|Santa Rosa|Shikoku|Taiwan|Tinian|Vancouver|Volcano Islands|Wake Island|Yap';\r\n      city_states['Pacific Ocean (South)'] = '|Easter|Galapogos Islands|Juan Fernandez Islands|Isla Espanola|Isla Fernandina|Isla Genovesa|Isla Isabella|Isla Marchena|Isla Pinta|Isla Puna|Isla San Cristobal|Isla San Salvador|Isla Santa Cruz|Isla Santa Maria|Robinson Crusoe|San Felix|Santa Clara';\r\n\r\n\r\n      //Middle East\r\n      city_states['Afghanistan'] = '|Kabul||Badakhshan|Badghis|Baghlan|Balkh|Bamian|Farah|Faryab|Ghazni|Ghowr|Helmand|Herat|Jowzjan|Kabol|Kandahar|Kapisa|Khowst|Konar|Kondoz|Laghman|Lowgar|Nangarhar|Nimruz|Nurestan|Oruzgan|Paktia|Paktika|Parvan|Samangan|Sar-e Pol|Takhar|Vardak|Zabol';\r\n      city_states['Armenia'] = '|Yerevan||Aragatsotn|Ararat|Armavir|Geghark\\'unik\\'|Kotayk\\'|Lorri|Shirak|Syunik\\'|Tavush|Vayots\\' Dzor';\r\n      city_states['Azerbaijan'] = '|Baku (Baki)||Abseron|Agcabadi|Agdam|Agdas|Agstafa|Agsu|Ali Bayramli|Astara|Balakan|Barda|Beylaqan|Bilasuvar|Cabrayil|Calilabad|Daskasan|Davaci|Fuzuli|Gadabay|Ganca|Goranboy|Goycay|Haciqabul|Imisli|Ismayilli|Kalbacar|Kurdamir|Lacin|Lankaran|Lankaran|Lerik|Masalli|Mingacevir|Naftalan|Naxcivan|Neftcala|Oguz|Qabala|Qax|Qazax|Qobustan|Quba|Qubadli|Qusar|Saatli|Sabirabad|Saki|Saki|Salyan|Samaxi|Samkir|Samux|Siyazan|Sumqayit|Susa|Susa|Tartar|Tovuz|Ucar|Xacmaz|Xankandi|Xanlar|Xizi|Xocali|Xocavand|Yardimli|Yevlax|Yevlax|Zangilan|Zaqatala|Zardab';\r\n      city_states['Bahrain'] = '|Manama||Al Hadd|Al Manamah|Al Mintaqah al Gharbiyah|Al Mintaqah al Wusta|Al Mintaqah ash Shamaliyah|Al Muharraq|Ar Rifa\\' wa al Mintaqah al Janubiyah|Jidd Hafs|Madinat Hamad|Madinat \\'Isa|Juzur Hawar|Sitrah';\r\n      city_states['Cyprus'] = '|Nicosia||Famagusta|Kyrenia|Larnaca|Limassol|Paphos';\r\n      city_states['Iran'] = '|Tehran||Ardabil|Azarbayjan-e Gharbi|Azarbayjan-e Sharqi|Bushehr|Chahar Mahall va Bakhtiari|Esfahan|Fars|Gilan|Golestan|Hamadan|Hormozgan|Ilam|Kerman|Kermanshah|Khorasan|Khuzestan|Kohkiluyeh va Buyer Ahmad|Kordestan|Lorestan|Markazi|Mazandaran|Qazvin|Qom|Semnan|Sistan va Baluchestan|Yazd|Zanjan';\r\n      city_states['Iraq'] = '|Baghdad||Al Anbar|Al Basrah|Al Muthanna|Al Qadisiyah|An Najaf|Arbil|As Sulaymaniyah|At Ta\\'mim|Babil|Dahuk|Dhi Qar|Diyala|Karbala\\'|Maysan|Ninawa|Salah ad Din|Wasit';\r\n      city_states['Israel'] = '|Jerusalem||Central|Haifa|Northern|Southern|Tel Aviv';\r\n      city_states['Jordan'] = '|Amman||Ajlun|Al \\'Aqabah|Al Balqa\\'|Al Karak|Al Mafraq|At Tafilah|Az Zarqa\\'|Irbid|Jarash|Ma\\'an|Madaba';\r\n      city_states['Kuwait'] = '|Kuwait||Al Ahmadi|Al Farwaniyah|Al \\'Asimah|Al Jahra\\'|Hawalli';\r\n      city_states['Kyrgyzstan'] = '|Bishkek Shaary||Batken Oblasty|Chuy Oblasty (Bishkek)|Jalal-Abad Oblasty|Naryn Oblasty|Osh Oblasty|Talas Oblasty|Ysyk-Kol Oblasty (Karakol)';\r\n      city_states['Lebanon'] = '|Beirut||Beyrouth|Beqaa|Liban-Nord|Liban-Sud|Mont-Liban|Nabatiye';\r\n      city_states['Oman'] = '|Muscat||Ad Dakhiliyah|Al Batinah|Al Wusta|Ash Sharqiyah|Az Zahirah|Musandam|Zufar';\r\n      city_states['Pakistan'] = '|Islamabad||Balochistan|Federally Administered Tribal Areas|North-West Frontier Province|Punjab|Sindh';\r\n      city_states['Qatar'] = '|Doha||Ad Dawhah|Al Ghuwayriyah|Al Jumayliyah|Al Khawr|Al Wakrah|Ar Rayyan|Jarayan al Batinah|Madinat ash Shamal|Umm Salal';\r\n      city_states['Saudi Arabia'] = '|Riyadh||Al Bahah|Al Hudud ash Shamaliyah|Al Jawf|Al Madinah|Al Qasim|Ar Riyad|Ash Sharqiyah (Eastern Province)|\\'Asir|Ha\\'il|Jizan|Makkah|Najran|Tabuk';\r\n      city_states['Syria'] = '|Damascus||Al Hasakah|Al Ladhiqiyah|Al Qunaytirah|Ar Raqqah|As Suwayda\\'|Dar\\'a|Dayr az Zawr|Dimashq|Halab|Hamah|Hims|Idlib|Rif Dimashq|Tartus';\r\n      city_states['Tajikistan'] = '|Dushanbe||Viloyati Mukhtori Kuhistoni Badakhshon|Viloyati Khatlon|Viloyati Sughd';\r\n      city_states['Turkey'] = '|Ankara||Adana|Adiyaman|Afyon|Agri|Aksaray|Amasya|Antalya|Ardahan|Artvin|Aydin|Balikesir|Bartin|Batman|Bayburt|Bilecik|Bingol|Bitlis|Bolu|Burdur|Bursa|Canakkale|Cankiri|Corum|Denizli|Diyarbakir|Duzce|Edirne|Elazig|Erzincan|Erzurum|Eskisehir|Gaziantep|Giresun|Gumushane|Hakkari|Hatay|Icel|Igdir|Isparta|Istanbul|Izmir|Kahramanmaras|Karabuk|Karaman|Kars|Kastamonu|Kayseri|Kilis|Kirikkale|Kirklareli|Kirsehir|Kocaeli|Konya|Kutahya|Malatya|Manisa|Mardin|Mugla|Mus|Nevsehir|Nigde|Ordu|Osmaniye|Rize|Sakarya|Samsun|Sanliurfa|Siirt|Sinop|Sirnak|Sivas|Tekirdag|Tokat|Trabzon|Tunceli|Usak|Van|Yalova|Yozgat|Zonguldak  Buri|Sisaket|Songkhla|Sukhothai|Suphan Buri|Surat Thani|Surin|Tak|Trang|Trat|Ubon Ratchathani|Udon Thani|Uthai Thani|Uttaradit|Yala|Yasothon';\r\n      city_states['Turkmenistan'] = '|Ashgabat||Ahal Welayaty|Balkan Welayaty|Dasoguz Welayaty|Labap Welayaty|Mary Welayaty';\r\n      city_states['United Arab Emirates'] = '|Abu Dhabi||Abu Zaby (Abu Dhabi)|\\'Ajman|Al Fujayrah|Ash Shariqah (Sharjah)|Dubayy (Dubai)|Ra\\'s al Khaymah|Umm al Qaywayn';\r\n      city_states['Uzbekistan'] = '|Tashkent (Toshkent)||Andijon Viloyati|Buxoro Viloyati|Farg\\'ona Viloyati|Jizzax Viloyati|Namangan Viloyati|Navoiy Viloyati|Qashqadaryo Viloyati (Qarshi)|Qaraqalpog\\'iston Respublikasi|Samarqand Viloyati|Sirdaryo Viloyati (Guliston)|Surxondaryo Viloyati (Termiz)|Toshkent Shahri|Toshkent Viloyati|Xorazm Viloyati (Urganch)';\r\n      city_states['Yemen'] = '|Sanaa||Abyan|\\'Adan|Al Bayda\\'|Al Hudaydah|Al Jawf|Al Mahrah|Al Mahwit|Dhamar|Hadramawt|Hajjah|Ibb|Lahij|Ma\\'rib|Sa\\'dah|San\\'a\\'|Shabwah|Ta\\'izz';\r\n\r\n\r\n      //North America\r\n      city_states['Bermuda'] = '|Hamilton||Devonshire|Hamilton|Hamilton|Paget|Pembroke|Saint George|Saint George\\'s|Sandys|Smith\\'s|Southampton|Warwick';\r\n      city_states['Canada'] = '|Ottawa||Alberta|British Columbia|Manitoba|New Brunswick|Newfoundland and Labrador|Northwest Territories|Nova Scotia|Nunavut|Ontario|Prince Edward Island|Quebec|Saskatchewan|Yukon Territory';\r\n      city_states['Caribbean'] = '';\r\n      city_states['Greenland'] = '|Nuuk (Godthab)||Avannaa (Nordgronland)|Tunu (Ostgronland)|Kitaa (Vestgronland)';\r\n      city_states['Mexico'] = '|Mexico (Distrito Federal)||Aguascalientes|Baja California|Baja California Sur|Campeche|Chiapas|Chihuahua|Coahuila de Zaragoza|Colima|Durango|Guanajuato|Guerrero|Hidalgo|Jalisco|Michoacan de Ocampo|Morelos|Nayarit|Nuevo Leon|Oaxaca|Puebla|Queretaro de Arteaga|Quintana Roo|San Luis Potosi|Sinaloa|Sonora|Tabasco|Tamaulipas|Tlaxcala|Veracruz-Llave|Yucatan|Zacatecas';\r\n      city_states['United States'] = '|Washington DC||Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Georgia|Kentucky|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusets|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming';\r\n\r\n\r\n      //South America\r\n      city_states['Argentina'] = '|Buenos Aires||Catamarca|Chaco|Chubut|Cordoba|Corrientes|Entre Rios|Formosa|Jujuy|La Pampa|La Rioja|Mendoza|Misiones|Neuquen|Rio Negro|Salta|San Juan|San Luis|Santa Cruz|Santa Fe|Santiago del Estero|Tucuman';\r\n      city_states['Bolivia'] = '|La Paz|Sucre||Chuquisaca|Cochabamba|Beni|Oruro|Pando|Potosi|Santa Cruz|Tarija';\r\n      city_states['Brazil'] = '|Brasilia||Acre|Alagoas|Amapa|Amazonas|Bahia|Ceara|Distrito Federal|Espirito Santo|Goias|Maranhao|Mato Grosso|Mato Grosso do Sul|Minas Gerais|Para|Paraiba|Parana|Pernambuco|Piaui|Rio de Janeiro|Rio Grande do Norte|Rio Grande do Sul|Rondonia|Roraima|Santa Catarina|Sao Paulo|Sergipe|Tocantins';\r\n      city_states['Chile'] = '|Santiago||Antofagasta|Araucania|Atacama|Bio-Bio|Coquimbo|Los Lagos|Maule|Tarapaca|Valparaiso';\r\n      city_states['Colombia'] = '|Bogota||Amazonas|Antioquia|Arauca|Atlantico|Bolivar|Boyaca|Caldas|Caqueta|Casanare|Cauca|Cesar|Choco|Cordoba|Cundinamarca|Guainia|Guaviare|Huila|La Guajira|Magdalena|Meta|Narino|Norte de Santander|Putumayo|Quindio|Risaralda|San Andres/Providencia|Santander|Sucre|Tolima|Valle del Cauca|Vaupes|Vichada';\r\n      city_states['Ecuador'] = '|Quito||Azuay|Bolivar|Canar|Carchi|Chimborazo|Cotopaxi|El Oro|Esmeraldas|Galapagos|Guayas|Imbabura|Loja|Los Rios|Manabi|Morona-Santiago|Napo|Orellana|Pastaza|Pichincha|Sucumbios|Tungurahua|Zamora-Chinchipe';\r\n      city_states['Guyana'] = '|Georgetown||Barima-Waini|Cuyuni-Mazaruni|Demerara-Mahaica|East Berbice-Corentyne|Essequibo Islands-West Demerara|Mahaica-Berbice|Pomeroon-Supenaam|Potaro-Siparuni|Upper Demerara-Berbice|Upper Takutu-Upper Essequibo';\r\n      city_states['Paraguay'] = '|Asuncion||Alto Paraguay|Alto Parana|Amambay|Boqueron|Caaguazu|Caazapa|Canindeyu|Central|Concepcion|Cordillera|Guaira|Itapua|Misiones|Neembucu|Paraguari|Presidente Hayes|San Pedro';\r\n      city_states['Peru'] = '|Lima||Amazonas|Ancash|Apurimac|Arequipa|Ayacucho|Cajamarca|Callao|Cusco|Huancavelica|Huanuco|Ica|Junin|La Libertad|Lambayeque|Loreto|Madre de Dios|Moquegua|Pasco|Piura|Puno|San Martin|Tacna|Tumbes|Ucayali';\r\n      city_states['Suriname'] = '|Paramaribo||Brokopondo|Commewijne|Coronie|Marowijne|Nickerie|Para|Saramacca|Sipaliwini|Wanica';\r\n      city_states['Uruguay'] = '|Montevideo||Artigas|Canelones|Cerro Largo|Colonia|Durazno|Flores|Florida|Lavalleja|Maldonado|Paysandu|Rio Negro|Rivera|Rocha|Salto|San Jose|Soriano|Tacuarembo|Treinta y Tres';\r\n      city_states['Venezuela'] = '|Caracas||Amazonas|Anzoategui|Apure|Aragua|Barinas|Bolivar|Carabobo|Cojedes|Delta Amacuro|Dependencias Federales|Distrito Federal|Falcon|Guarico|Lara|Merida|Miranda|Monagas|Nueva Esparta|Portuguesa|Sucre|Tachira|Trujillo|Vargas|Yaracuy|Zulia';\r\n  }\r\n\r\n  // whenever a change is made to an input field, update the corresponding state property\r\n  handleNameChange(event) {\r\n    this.setState({description: event.target.value});\r\n  }\r\n\r\n  handleOrgIDChange(event) {\r\n    this.setState({id: event.target.value});\r\n  }\r\n\r\n  handleAChange() {\r\n    let typea = document.getElementById(\"addresstype\")\r\n    let streeta = document.getElementById(\"street\")\r\n    let citya = document.getElementById(\"city\")\r\n    let statea = document.getElementById(\"state\")\r\n    let zipa = document.getElementById(\"zip\")\r\n    let countrya = document.getElementById(\"country\")\r\n    let typea2 = document.getElementById(\"addresstype2\")\r\n    let streeta2 = document.getElementById(\"street2\")\r\n    let citya2 = document.getElementById(\"city2\")\r\n    let statea2 = document.getElementById(\"state2\")\r\n    let zipa2 = document.getElementById(\"zip2\")\r\n    let countrya2 = document.getElementById(\"country2\")\r\n    this.setState({\r\n      address: \r\n      [{zip: zipa.value,\r\n        country: countrya.value,\r\n        state: statea.value,\r\n        type: typea.value,\r\n        city: citya.value,\r\n        street: streeta.value },\r\n      {\r\n        zip: zipa2.value,\r\n        country: countrya2.value,\r\n        state: statea2.value,\r\n        type: typea2.value,\r\n        city: citya2.value,\r\n        street: streeta2.value }]\r\n      })\r\n  }\r\n\r\n  handleCChange() {\r\n    let fnamec = document.getElementById(\"fname\")\r\n    let lnamec = document.getElementById(\"lname\")\r\n    let typec = document.getElementById(\"contacttype\")\r\n    let phonec = document.getElementById(\"phone\")\r\n    let emailc = document.getElementById(\"email\")\r\n    let fnamec2 = document.getElementById(\"fname2\")\r\n    let lnamec2 = document.getElementById(\"lname2\")\r\n    let typec2 = document.getElementById(\"contacttype2\")\r\n    let phonec2 = document.getElementById(\"phone2\")\r\n    let emailc2 = document.getElementById(\"email2\")\r\n    this.setState({ \r\n      contact: \r\n      [{firstName: fnamec.value,\r\n        lastName: lnamec.value, \r\n        type: typec.value, \r\n        phone: phonec.value, \r\n        email: emailc.value},\r\n\r\n        {\r\n        firstName: fnamec2.value,\r\n        lastName: lnamec2.value, \r\n        type: typec2.value, \r\n        phone: phonec2.value, \r\n        email: emailc2.value}]\r\n      })\r\n  }\r\n\r\n  handleimgCapture() {\r\n    let RadioimgNo = document.getElementById(\"imgCaptureNo\")\r\n    let RadioimgYes = document.getElementById(\"imgCaptureYes\")\r\n\r\n    if (RadioimgNo.checked) {\r\n      this.RadioVal1 = \"false\"\r\n    }\r\n    if (RadioimgYes.checked) {\r\n      this.RadioVal1 = \"true\"\r\n    }\r\n  }\r\n\r\n  handleidCapture() {\r\n    let RadioidNo = document.getElementById(\"idCaptureNo\")\r\n    let RadioidYes = document.getElementById(\"idCaptureYes\")\r\n\r\n    if (RadioidNo.checked) {\r\n      this.RadioVal2 = \"false\"\r\n    }\r\n    if (RadioidYes.checked) {\r\n      this.RadioVal2 = \"true\"\r\n    }\r\n  }\r\n\r\n  handleConfigChange() {\r\n    let smoothingf = document.getElementById(\"smoothingframe\")\r\n    let anomalyd = document.getElementById(\"anomalyduration\")\r\n    let framei = document.getElementById(\"frameinterval\")\r\n    this.setState({ \r\n      configuration: {\r\n        Registration: {\r\n          imageCapture: this.RadioVal1,\r\n          idCapture: this.RadioVal2\r\n        },\r\n        postProcess: {\r\n          anomalyDuration: anomalyd.value,\r\n          smoothingFrame: smoothingf.value,\r\n          frameInterval: framei.value,}\r\n      }\r\n    })\r\n  }\r\n\r\n  stateUpdate() {\r\n    this.handleCChange();\r\n    this.handleAChange();\r\n    this.handleConfigChange();\r\n    this.idcaptureVal();\r\n    this.imgcaptureVal();\r\n  }\r\n\r\n  orgnameVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"orgnameErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"orgnameErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  orgidVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"orgidErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"orgidErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  addresstypeVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"addresstypeErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"addresstypeErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  streetVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"streetErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"streetErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  zipVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"zipErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"zipErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  cityVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"cityErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"cityErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  stateVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"stateErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"stateErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  countryVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"countryErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"countryErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  contacttypeVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"contacttypeErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"contacttypeErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  fnameVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"fnameErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"fnameErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  lnameVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"lnameErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"lnameErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  phoneVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"phoneErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"phoneErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  emailVal(event) {\r\n    let emailv = document.getElementById(\"email\")\r\n    let rg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    let isValid= rg.test(emailv.value)\r\n    \r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"emailErrMsg\").innerHTML=\"Required\"\r\n      }\r\n    else if (!isValid) {\r\n        document.getElementById(\"emailErrMsg\").innerHTML=\"The email has an incorrect format\"\r\n      }\r\n    else {\r\n        document.getElementById(\"emailErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  idcaptureVal() {\r\n    let RadioidNo = document.getElementById(\"idCaptureNo\")\r\n    let RadioidYes = document.getElementById(\"idCaptureYes\")\r\n    if (!RadioidNo.checked && !RadioidYes.checked){\r\n      //document.getElementById(\"imgcaptureErrMsg\").innerHTML=\"Required\"\r\n      this.idCapVal = false\r\n      }\r\n      else{\r\n      //document.getElementById(\"imgcaptureErrMsg\").innerHTML=\"\"\r\n      this.idCapVal = true\r\n      }\r\n  }\r\n\r\n  imgcaptureVal() {\r\n    let RadioimgNo = document.getElementById(\"imgCaptureNo\")\r\n    let RadioimgYes = document.getElementById(\"imgCaptureYes\")\r\n    if (!RadioimgNo.checked && !RadioimgYes.checked){\r\n      //document.getElementById(\"imgcaptureErrMsg\").innerHTML=\"Required\"\r\n      this.imgCapVal = false\r\n      }\r\n      else{\r\n      //document.getElementById(\"imgcaptureErrMsg\").innerHTML=\"\"\r\n      this.imgCapVal = true\r\n      }\r\n  }\r\n\r\n  frameintervalVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"frameintervalErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"frameintervalErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  anomalydurationVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"anomalydurationErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"anomalydurationErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  smoothingframeVal(event) {\r\n    if (event.target.value === \"\"){\r\n      document.getElementById(\"smoothingframeErrMsg\").innerHTML=\"Required\"\r\n      }\r\n      else{\r\n      document.getElementById(\"smoothingframeErrMsg\").innerHTML=\"\"\r\n      }\r\n  }\r\n\r\n  setRegions()\r\n  {\r\n    for (region in countries)\r\n      document.write('<option value=\"' + region + '\">' + region + '</option>');\r\n  }\r\n  \r\n  set_country(oRegionSel, oCountrySel, oCity_StateSel)\r\n  {\r\n    var countryArr;\r\n    oCountrySel.length = 0;\r\n    oCity_StateSel.length = 0;\r\n    var region = oRegionSel.options[oRegionSel.selectedIndex].text;\r\n    if (countries[region])\r\n    {\r\n      oCountrySel.disabled = false;\r\n      oCity_StateSel.disabled = true;\r\n      oCountrySel.options[0] = new Option('SELECT COUNTRY','');\r\n      countryArr = countries[region].split('|');\r\n      for (var i = 0; i < countryArr.length; i++)\r\n        oCountrySel.options[i + 1] = new Option(countryArr[i], countryArr[i]);\r\n      document.getElementById('txtregion').innerHTML = region;\r\n      document.getElementById('txtplacename').innerHTML = '';\r\n    }\r\n    else oCountrySel.disabled = true;\r\n  }\r\n  \r\n  set_city_state(oCountrySel, oCity_StateSel)\r\n  {\r\n    var city_stateArr;\r\n    oCity_StateSel.length = 0;\r\n    var country = oCountrySel.options[oCountrySel.selectedIndex].text;\r\n    if (city_states[country])\r\n    {\r\n      oCity_StateSel.disabled = false;\r\n      oCity_StateSel.options[0] = new Option('SELECT NEAREST DIVISION','');\r\n      city_stateArr = city_states[country].split('|');\r\n      for (var i = 0; i < city_stateArr.length; i++)\r\n        oCity_StateSel.options[i+1] = new Option(city_stateArr[i],city_stateArr[i]);\r\n      document.getElementById('txtplacename').innerHTML = country;\r\n    }\r\n    else oCity_StateSel.disabled = true;\r\n  }\r\n  \r\n  print_city_state(oCountrySel, oCity_StateSel)\r\n  {\r\n    var country = oCountrySel.options[oCountrySel.selectedIndex].text;\r\n    var city_state = oCity_StateSel.options[oCity_StateSel.selectedIndex].text;\r\n    if (city_state && city_states[country].indexOf(city_state) != -1)\r\n      document.getElementById('txtplacename').innerHTML = city_state + ', ' + country;\r\n    else document.getElementById('txtplacename').innerHTML = country;\r\n  }\r\n  \r\n\r\n\r\n\r\n  handleSubmit(event) {\r\n\r\n    event.preventDefault();\r\n    let orgNamev = document.getElementById(\"orgname\")\r\n    let orgIdv = document.getElementById(\"orgID\")\r\n    let typeav = document.getElementById(\"addresstype\")\r\n    let streetav = document.getElementById(\"street\")\r\n    let cityav = document.getElementById(\"city\")\r\n    let stateav = document.getElementById(\"state\")\r\n    let zipav = document.getElementById(\"zip\")\r\n    let countryav = document.getElementById(\"country\")\r\n    let fnamecv = document.getElementById(\"fname\")\r\n    let lnamecv = document.getElementById(\"lname\")\r\n    let typecv = document.getElementById(\"contacttype\")\r\n    let phonecv = document.getElementById(\"phone\")\r\n    let emailcv = document.getElementById(\"email\")\r\n    let smoothingfv = document.getElementById(\"smoothingframe\")\r\n    let anomalydv = document.getElementById(\"anomalyduration\")\r\n    let frameiv = document.getElementById(\"frameinterval\")\r\n    // let imageNov = document.getElementById(\"imgCaptureNo\")\r\n    // let imageYesv = document.getElementById(\"imgCaptureYes\")\r\n    // let idNov = document.getElementById(\"idCaptureNo\")\r\n    // let idYesv = document.getElementById(\"idCaptureYes\")\r\n    let emailv = document.getElementById(\"email\")\r\n    let rg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    let emailValid= rg.test(emailv.value)\r\n\r\n    if (!emailValid)\r\n    {\r\n      alert(\"The email entered is not valid\")\r\n    }\r\n    else if (orgNamev.value === \"\" || orgIdv.value === \"\" || typeav.value === \"\" || streetav.value === \"\" || cityav.value === \"\" || \r\n    stateav.value === \"\" || zipav.value === \"\" || countryav.value === \"\" || fnamecv.value === \"\" || lnamecv.value === \"\" ||\r\n    typecv.value === \"\" || phonecv.value === \"\" || emailcv.value === \"\" || !this.idCapVal   || !this.imgCapVal || smoothingfv.value === \"\" ||\r\n    anomalydv.value === \"\" || frameiv.value === \"\")\r\n    {\r\n      alert (\"One or more required fields are missing\")\r\n    }\r\n    else {\r\n    // prevent default submit action\r\n    // distribute data stored in state into new object\r\n    const formData = {\r\n      description: this.state.description,\r\n      id: this.state.id,\r\n      contact: this.state.contact,\r\n      address: this.state.address,\r\n      configuration: this.state.configuration\r\n    }\r\n    console.log(formData);\r\n    //make api call to post data\r\n    axios.post(`/orgs`, formData)\r\n         .then(res => {\r\n          if (res.status === 200) {\r\n            this.props.history.push('/add-org-confirmation')\r\n           } \r\n         })\r\n         // else, display error\r\n         .catch(error => alert(error))   \r\n    }\r\n  }\r\n      state = {\r\n      isOpen: true,\r\n      isOpen2: false,\r\n      isOpen3: false,\r\n      isOpen4: false, \r\n      isOpen5: false,\r\n      };\r\n\r\n      onChange = isOpen => {\r\n        this.setState({\r\n          isOpen\r\n        });\r\n      };\r\n\r\n      onChange2 = isOpen2 => {\r\n        this.setState({\r\n          isOpen2\r\n        });\r\n      };\r\n\r\n      onChange3 = isOpen3 => {\r\n        this.setState({\r\n          isOpen3\r\n        });\r\n      };\r\n\r\n      onChange4 = isOpen4 => {\r\n        this.setState({\r\n          isOpen4\r\n        });\r\n      };\r\n\r\n      onChange5 = isOpen5 => {\r\n        this.setState({\r\n          isOpen5\r\n        });\r\n      };\r\n\r\n     \r\n\r\n\r\n  render () {\r\n    const labelstyle = {\r\n      color: \"#3cB650\",\r\n\t    fontFamily: \"sans-serif\",\r\n      fontWeight: \"400\",\r\n      padding: \"20px\",\r\n      position: \"relative\",\r\n      textRendering: \"optimizeLegibility\",\r\n      display: \"inline-block\",\r\n      width: \"70%\"\r\n      };\r\n    \r\n      const textbxstyle = {\r\n        width: \"70%\",\r\n        padding: \"12px 20px\",\r\n        margin: \"8px 0\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"4px\",\r\n        boxSizing: \"border-box\",\r\n        display: \"inline-block\"\r\n      }; \r\n\r\n      const textbxstyle2 = {\r\n        width: \"70%\",\r\n        padding: \"12px 20px\",\r\n        margin: \"8px 0\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"4px\",\r\n        boxSizing: \"border-box\",\r\n        display: \"inline-block\"\r\n      }; \r\n\r\n      const buttonstyle = {\r\n        backgroundColor: \"#4CAF50\",\r\n        border: \"none\",\r\n        color: \"white\",\r\n        padding: \"10px 22px\",\r\n        textAlign: \"center\",\r\n        textDecoration: \"none\",\r\n        display: \"inline-block\",\r\n        fontSize: \"16px\",\r\n        margin: \"4px 2px\",\r\n        cursor: \"pointer\",\r\n        borderRadius:\"30px\",\r\n      };\r\n\r\n      // const textbxstyle3 = {\r\n      //   width: \"90%\",\r\n      //   padding: \"12px 20px\",\r\n      //   margin: \"8px 0\",\r\n      //   border: \"1px solid #ccc\",\r\n      //   borderRadius: \"4px\",\r\n      //   boxSizing: \"border-box\",\r\n      //   display: \"inline-block\"\r\n      // }; \r\n\r\n      // const textbxstyle4 = {\r\n      //   width: \"40%\",\r\n      //   padding: \"12px 20px\",\r\n      //   margin: \"8px 0\",\r\n      //   border: \"1px solid #ccc\",\r\n      //   borderRadius: \"4px\",\r\n      //   boxSizing: \"border-box\",\r\n      //   display: \"inline-block\"\r\n      // }; \r\n\r\n      const { isOpen } = this.state;\r\n      const { isOpen2 } = this.state;\r\n      const { isOpen3 } = this.state;\r\n      const { isOpen4 } = this.state;\r\n      const { isOpen5 } = this.state;\r\n      \r\n    return (\r\n      <div>\r\n        <main className={classes.main}>\r\n          <Heading2>Add Organizations</Heading2>\r\n          <form className={classes.wrapper} \r\n            onSubmit={this.handleSubmit}>\r\n            <fieldset>\r\n              <div className={classes.flexChild}>\r\n                <table>\r\n                  <tr>\r\n                    <td className={classes.cell3} \r\n                        style={{textAlign:\"right\"}}>\r\n                        <label htmlFor=\"orgname\" \r\n                          style={labelstyle}>\r\n                          Name:\r\n                       </label>\r\n                    </td>\r\n                    <td \r\n                      className={classes.cell4} \r\n                      style={{textAlign:\"left\"}}>\r\n                      <input \r\n                        style={textbxstyle2} \r\n                        type=\"text\" \r\n                        id=\"orgname\" \r\n                        name=\"orgname\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleNameChange}\r\n                        onBlur={this.orgnameVal}\r\n                        />\r\n                      <br/>\r\n                      <span \r\n                          id=\"orgnameErrMsg\"\r\n                          style={{color:\"red\"}}>\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td \r\n                      className={classes.cell3} \r\n                      style={{textAlign:\"right\"}}>\r\n                      <label \r\n                        htmlFor=\"orgID\" \r\n                        style={labelstyle}>\r\n                        ID:\r\n                      </label>\r\n                    </td>\r\n                    <td \r\n                      className={classes.cell4} \r\n                      style={{textAlign:\"left\"}}>\r\n                        <input \r\n                          // onChangeText={(text) => {this.setState({ ID: text })}} \r\n                          style={textbxstyle2} \r\n                          type=\"text\" \r\n                          id=\"orgID\" \r\n                          name=\"orgID\"\r\n                          value={this.state.id}\r\n                          onBlur={this.orgidVal}\r\n                          onChange={this.handleOrgIDChange}/>\r\n                        <br/>\r\n                        <span \r\n                          id=\"orgidErrMsg\"\r\n                          style={{color:\"red\"}}>\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  {/* <tr>\r\n                    <td \r\n                      className={classes.cell3} \r\n                      style={{textAlign:\"right\"}}>\r\n                      <label \r\n                        htmlFor=\"itemType\" \r\n                        style={labelstyle}>\r\n                        Item Type:\r\n                      </label>\r\n                    </td>\r\n                    <td \r\n                      className={classes.cell4} \r\n                      style={{textAlign:\"left\"}}>\r\n                        <input \r\n                          // onChangeText={(text) => {this.setState({ ID: text })}} \r\n                          style={textbxstyle2} \r\n                          type=\"text\" \r\n                          id=\"itemType\" \r\n                          name=\"itemType\"\r\n                          value={this.state.itemType}\r\n                          onChange={this.handleitemTypeChange}/>\r\n                    </td>\r\n                  </tr> */}\r\n                </table>\r\n                  <hr></hr>\r\n                    </div> \r\n                      <div> \r\n                      <Accordion isOpen={isOpen} onChange={this.onChange} label={\"Address\"}>\r\n                          <br/>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"addresstype\" \r\n                                  style={labelstyle}>\r\n                                  Type of Address (Primary/Billing/Technical):\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4}\r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                style={textbxstyle2} \r\n                                type=\"text\" \r\n                                id=\"addresstype\" \r\n                                name=\"addresstype\"\r\n                                onBlur={this.addresstypeVal}\r\n                                />\r\n                                <br/>\r\n                                <span \r\n                                  id=\"addresstypeErrMsg\"\r\n                                  style={{color:\"red\"}}>\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"street\" \r\n                                  style={labelstyle}>\r\n                                  Street:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"street\" \r\n                                  name=\"street\"\r\n                                  onBlur={this.streetVal}\r\n                                  />\r\n                                <br/>\r\n                                <span \r\n                                  id=\"streetErrMsg\"\r\n                                  style={{color:\"red\"}}>\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"city\" \r\n                                  style={labelstyle}>\r\n                                  City:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"city\" \r\n                                  name=\"city\"\r\n                                  onBlur={this.cityVal}\r\n                                  />\r\n                                <br/>\r\n                                <span \r\n                                  id=\"cityErrMsg\"\r\n                                  style={{color:\"red\"}}>\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr> \r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"state\" \r\n                                  style={labelstyle}>\r\n                                  State/Province:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"state\" \r\n                                  name=\"state\"\r\n                                  onBlur={this.stateVal}\r\n                                  />\r\n                                <br/>\r\n                                <span \r\n                                  id=\"stateErrMsg\"\r\n                                  style={{color:\"red\"}}>\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"zip\" \r\n                                  style={labelstyle}>\r\n                                  Zip Code:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"zip\" \r\n                                  name=\"zip\"\r\n                                  onBlur={this.zipVal}\r\n                                  />\r\n                                <br/>\r\n                                <span \r\n                                  id=\"zipErrMsg\"\r\n                                  style={{color:\"red\"}}>\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                htmlFor=\"country\" \r\n                                style={labelstyle}>\r\n                                  Country:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                style={textbxstyle2} \r\n                                type=\"text\" \r\n                                id=\"country\" \r\n                                name=\"country\"\r\n                                onBlur={this.countryVal}\r\n                                />\r\n                                <br/>\r\n                                <span \r\n                                  id=\"countryErrMsg\"\r\n                                  style={{color:\"red\"}}>\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                          </Accordion>\r\n                        </div>\r\n                        <div> \r\n                        <Accordion4 isOpen4={isOpen4} onChange={this.onChange4} label={\"Add Additional Address\"}>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"addresstype2\" \r\n                                  style={labelstyle}>\r\n                                  Type of Address (Primary/Billing/Technical):\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  // onChangeText={(text) => {this.setState({ typeofaddress2: text })}} \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"addresstype2\" \r\n                                  name=\"addresstype2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"street2\" \r\n                                  style={labelstyle}>\r\n                                  Street:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  // onChangeText={(text) => {this.setState({ street2: text })}}\r\n                                  type=\"text\" \r\n                                  id=\"street2\" \r\n                                  name=\"street2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"city2\" \r\n                                  style={labelstyle}>\r\n                                  City:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  // onChangeText={(text) => {this.setState({ city2: text })}} \r\n                                  type=\"text\" \r\n                                  id=\"city2\" \r\n                                  name=\"city2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"state2\" \r\n                                  style={labelstyle}>\r\n                                  State/Province:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                              className={classes.cell4} \r\n                              style={{textAlign:\"left\"}}>\r\n                              <input \r\n                                style={textbxstyle2} \r\n                                //onChangeText={(text) => {this.setState({ statea2: text })}} \r\n                                type=\"text\" \r\n                                id=\"state2\" \r\n                                name=\"state2\"\r\n                                />\r\n                              </td>\r\n                            </tr>                            \r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"zip2\" \r\n                                  style={labelstyle}>\r\n                                  Zip Code:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"zip2\" \r\n                                  name=\"zip2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell3} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"country2\" \r\n                                  style={labelstyle}>\r\n                                  Country:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell4} \r\n                                style={{textAlign:\"left\"}}>\r\n                                {/* <input \r\n                                  style={textbxstyle2} \r\n                                  type=\"text\" \r\n                                  id=\"country2\" \r\n                                  name=\"country2\"\r\n                                  /> */}\r\n                                  \r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                      </Accordion4>\r\n                      </div>                     \r\n                      <div>\r\n                      <Accordion2 isOpen2={isOpen2} onChange={this.onChange2} label={\"Contact\"}>\r\n                          <br/>\r\n                            <table>\r\n                              <tr>\r\n                                <td \r\n                                  id={classes.cell1}  \r\n                                  style={{textAlign:\"right\"}}>\r\n                                  <label \r\n                                    htmlFor=\"contacttype\" \r\n                                    style={labelstyle}>\r\n                                    Type of Contact (Primary/Billing/Technical):\r\n                                  </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\", width:\"30%\"}}>\r\n                                  <input \r\n                                    // onBlur = {()=> this.ValidatorTofC()} \r\n                                    style={textbxstyle} \r\n                                    type=\"text\" \r\n                                    id=\"contacttype\" \r\n                                    name=\"contacttype\"\r\n                                    onBlur={this.contacttypeVal}\r\n                                    />\r\n                                    <br/>\r\n                                    <span \r\n                                      id=\"contacttypeErrMsg\"\r\n                                      style={{color:\"red\"}}>\r\n                                    </span>\r\n                                </td>\r\n                              </tr>           \r\n                              <tr>\r\n                                <td \r\n                                  id={classes.cell1}  \r\n                                  style={{textAlign:\"right\"}}>\r\n                                  <label \r\n                                    htmlFor=\"fname\" \r\n                                    style={labelstyle}>\r\n                                    First Name:\r\n                                  </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\", width:\"30%\"}}>\r\n                                  <input \r\n                                    style={textbxstyle}\r\n                                    type=\"text\" \r\n                                    id=\"fname\" \r\n                                    name=\"fname\"\r\n                                    onBlur={this.fnameVal}\r\n                                   />\r\n                                  <br/>\r\n                                  <span \r\n                                    id=\"fnameErrMsg\"\r\n                                    style={{color:\"red\"}}>\r\n                                  </span>\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td \r\n                                  className={classes.cell1} \r\n                                  style={{textAlign:\"right\"}}>\r\n                                  <label \r\n                                    htmlFor=\"lname\" \r\n                                    style={labelstyle}>\r\n                                    Last Name:\r\n                                  </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\"}}>\r\n                                  <input \r\n                                    style={textbxstyle} \r\n                                    type=\"text\" \r\n                                    id=\"lname\" \r\n                                    name=\"lname\"\r\n                                    onBlur={this.lnameVal}\r\n                                    />\r\n                                  <br/>\r\n                                  <span \r\n                                    id=\"lnameErrMsg\"\r\n                                    style={{color:\"red\"}}>\r\n                                  </span>\r\n                                </td>\r\n                              </tr>               \r\n                              <tr>\r\n                                <td \r\n                                  className={classes.cell1} \r\n                                  style={{textAlign:\"right\"}}>\r\n                                    <label \r\n                                      htmlFor=\"email\" \r\n                                      style={labelstyle}>\r\n                                      Email:\r\n                                    </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\"}}>\r\n                                  <input \r\n                                    style={textbxstyle} \r\n                                    type=\"text\" \r\n                                    id=\"email\" \r\n                                    name=\"email\"\r\n                                    onBlur={this.emailVal}                                   \r\n                                    />\r\n                                  <br/>\r\n                                  <span \r\n                                    id=\"emailErrMsg\"\r\n                                    style={{color:\"red\"}}>\r\n                                </span>\r\n                                </td>\r\n                              </tr>                \r\n                              <tr>\r\n                                <td \r\n                                  className={classes.cell1} \r\n                                  style={{textAlign:\"right\"}}>\r\n                                  <label \r\n                                    htmlFor=\"phone\" \r\n                                    style={labelstyle}>\r\n                                    Phone:\r\n                                  </label>\r\n                                </td>\r\n                                <td \r\n                                  className={classes.cell2} \r\n                                  style={{textAlign:\"left\"}}>\r\n                                  <input \r\n                                    // onBlur = {()=> this.Validatorphone()} \r\n                                    style={textbxstyle} \r\n                                    type=\"text\" \r\n                                    id=\"phone\" \r\n                                    name=\"phone\"\r\n                                    onBlur={this.phoneVal}\r\n                                    />\r\n                                  <br/>\r\n                                  <span \r\n                                    id=\"phoneErrMsg\"\r\n                                    style={{color:\"red\"}}>\r\n                                  </span>\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n                            </Accordion2>\r\n                          </div>\r\n                          <div>\r\n                        <Accordion5 isOpen5={isOpen5} onChange={this.onChange5} label={\"Add Additional Contact\"}>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                id={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"contacttype2\" \r\n                                  style={labelstyle}>\r\n                                  Type of Contact (Primary/Billing/Technical):\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\", width:\"30%\"}}>\r\n                                <input \r\n                                  // onChangeText={(text) => {this.setState({ typeofcontact2: text })}} \r\n                                  style={textbxstyle} \r\n                                  type=\"text\" \r\n                                  id=\"contacttype2\" \r\n                                  name=\"contacttype2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                id={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  for=\"fname2\" \r\n                                  style={labelstyle}>\r\n                                  First Name:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\", width:\"30%\"}}>\r\n                                <input \r\n                                  style={textbxstyle} \r\n                                  // onChangeText={(text) => {this.setState({ fname2: text })}} \r\n                                  type=\"text\" \r\n                                  id=\"fname2\" \r\n                                  name=\"fname2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>            \r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  for=\"lname2\" \r\n                                  style={labelstyle}>\r\n                                  Last Name:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle} \r\n                                  // onChangeText={(text) => {this.setState({ lname2: text })}} \r\n                                  type=\"text\" \r\n                                  id=\"lname2\" \r\n                                  name=\"lname2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label htmlFor=\"email2\" \r\n                                  style={labelstyle}>\r\n                                  Email:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  // onChangeText={(text) => {this.setState({ email2: text })}} \r\n                                  style={textbxstyle} \r\n                                  type=\"text\" \r\n                                  id=\"email2\" \r\n                                  name=\"email2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell1} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"phone2\" \r\n                                  style={labelstyle}>\r\n                                  Phone:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell2} \r\n                                style={{textAlign:\"left\"}}>\r\n                                <input \r\n                                  style={textbxstyle} \r\n                                  type=\"text\" \r\n                                  id=\"phone2\" \r\n                                  name=\"phone2\"\r\n                                  />\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                      </Accordion5>\r\n                      </div>\r\n                      <Accordion3 isOpen3={isOpen3} onChange={this.onChange3} label={\"Configuration Settings\"}>\r\n                        <div>  \r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell14} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"ImgCapture\" \r\n                                  style={labelstyle}>\r\n                                  Image Capture Setting:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell15} \r\n                                style={{textAlign: \"right\"}}>\r\n                                <label \r\n                                  style={labelstyle} \r\n                                  style={{paddingBottom: \"0\", color: \"#3cB650\"}}>\r\n                                  No\r\n                                </label>\r\n                                  <br/>\r\n                                <label \r\n                                  style={labelstyle} \r\n                                  style={{paddingBottom:\"0\", color: \"#3cB650\"}}>\r\n                                  Yes\r\n                                </label>\r\n                                <br/>\r\n                                <span \r\n                                    id=\"imgCaptureErrMsg\"\r\n                                    style={{color:\"red\"}}>\r\n                                  </span>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell16} \r\n                                style={{textAlign:\"center\"}}>\r\n                                <div>\r\n                                  <label \r\n                                    id=\"labelr\" \r\n                                    className={classes.RadioButton}>\r\n                                    <input type=\"radio\" \r\n                                      name=\"imgCaptureNo\" \r\n                                      id=\"imgCaptureNo\"\r\n                                      value=\"false\"\r\n                                      onChange={this.handleimgCapture} \r\n                                       />\r\n                                    <span \r\n                                      className={classes.checkmark}>\r\n                                    </span>\r\n                                  </label>\r\n                                    <label \r\n                                      id=\"labelr\" \r\n                                      className={classes.RadioButton}>\r\n                                    <input \r\n                                      type=\"radio\" \r\n                                      name=\"imgCaptureYes\" \r\n                                      id=\"imgCaptureYes\" \r\n                                      value=\"true\"\r\n                                      onChange={this.handleimgCapture}\r\n                                      />                                  \r\n                                    <span \r\n                                      className={classes.checkmark}>  \r\n                                    </span>\r\n                                  </label>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell14} \r\n                                style={{textAlign:\"right\"}}>\r\n                                <label \r\n                                  htmlFor=\"idCapture\" \r\n                                  style={labelstyle}>\r\n                                  ID Capture Setting:\r\n                                </label>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell15} \r\n                                style={{textAlign: \"right\"}}>\r\n                                <label \r\n                                  style={labelstyle} \r\n                                  style={{paddingBottom: \"0\", color: \"#3cB650\"}}>\r\n                                  No\r\n                                </label>\r\n                                  <br/>\r\n                                <label \r\n                                  style={labelstyle} \r\n                                  style={{paddingBottom:\"0\", color: \"#3cB650\"}}>\r\n                                  Yes\r\n                                </label>\r\n                                <br/>\r\n                                <span \r\n                                    id=\"idCaptureErrMsg\"\r\n                                    style={{color:\"red\"}}>\r\n                                </span>\r\n                              </td>\r\n                              <td \r\n                                className={classes.cell16} \r\n                                style={{textAlign:\"center\"}}>\r\n                                <div>\r\n                                  <label \r\n                                    id=\"labelr\" \r\n                                    className={classes.RadioButton}>\r\n                                    <input type=\"radio\" \r\n                                      name=\"idCaptureNo\" \r\n                                      id=\"idCaptureNo\"\r\n                                      value=\"false\"\r\n                                      onChange={this.handleidCapture}  \r\n                                       />\r\n                                    <span \r\n                                      className={classes.checkmark}>\r\n                                    </span>\r\n                                  </label>\r\n                                    <label \r\n                                      id=\"labelr\" \r\n                                      className={classes.RadioButton}>\r\n                                    <input \r\n                                      type=\"radio\" \r\n                                      name=\"idCaptureYes\" \r\n                                      id=\"idCaptureYes\" \r\n                                      value=\"true\"\r\n                                      onChange={this.handleidCapture}\r\n                                      />                                  \r\n                                    <span \r\n                                      className={classes.checkmark}>  \r\n                                    </span>\r\n                                  </label>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                          <table>\r\n                          <tr>\r\n                            <td \r\n                              id={classes.cell1}  \r\n                              style={{textAlign:\"right\"}}>\r\n                              <label \r\n                                htmlFor=\"frameInterval\" \r\n                                style={labelstyle}>\r\n                                Frame Interval:\r\n                              </label>\r\n                            </td>\r\n                            <td \r\n                              className={classes.cell2} \r\n                              style={{textAlign:\"left\", width:\"30%\"}}>\r\n                              <input \r\n                                style={textbxstyle} \r\n                                type=\"text\" \r\n                                id=\"frameinterval\" \r\n                                name=\"frameinterval\"\r\n                                onBlur={this.frameintervalVal}                                \r\n                                />\r\n                              <br/>\r\n                              <span \r\n                                id=\"frameintervalErrMsg\"\r\n                                style={{color:\"red\"}}>\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td \r\n                              className={classes.cell1} \r\n                              style={{textAlign:\"right\"}}>\r\n                              <label \r\n                                htmlFor=\"anomalyDuration\" \r\n                                style={labelstyle}>\r\n                                Anomaly Duration:\r\n                              </label>\r\n                            </td>\r\n                            <td \r\n                              className={classes.cell2} \r\n                              style={{textAlign:\"left\"}}>\r\n                              <input \r\n                                // onChangeText={(text) => {this.setState({ anomalyduration: text })}} \r\n                                style={textbxstyle} \r\n                                type=\"text\" \r\n                                id=\"anomalyduration\" \r\n                                name=\"anomalyduration\"\r\n                                onBlur={this.anomalydurationVal}\r\n                                />\r\n                              <br/>\r\n                              <span \r\n                                id=\"anomalydurationErrMsg\"\r\n                                style={{color:\"red\"}}>\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td \r\n                              className={classes.cell1} \r\n                              style={{textAlign:\"right\"}}>\r\n                              <label \r\n                                htmlFor=\"smoothingFrame\" \r\n                                style={labelstyle}>\r\n                                Smoothing Frame:\r\n                              </label>\r\n                            </td>\r\n                            <td \r\n                              className={classes.cell2} \r\n                              style={{textAlign:\"left\"}}>\r\n                              <input \r\n                                style={textbxstyle} \r\n                                type=\"text\" \r\n                                id=\"smoothingframe\" \r\n                                name=\"smoothingframe\"\r\n                                onBlur={this.smoothingframeVal}\r\n                                />\r\n                              <br/>\r\n                              <span \r\n                                id=\"smoothingframeErrMsg\"\r\n                                style={{color:\"red\"}}>\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                          </table>\r\n                        </div>\r\n                      </Accordion3>\r\n                        <div className={classes.flexChild}>\r\n                          <table>\r\n                            <tr>\r\n                              <td \r\n                                className={classes.cell7} \r\n                                style={{textAlign:\"right\", paddingRight: \"2%\", paddingTop:\"2%\"}}>\r\n                                <input\r\n                                  onClick={this.stateUpdate}\r\n                                  type=\"submit\" value=\"Submit\" \r\n                                  style={buttonstyle}/>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </div>\r\n            </fieldset>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(OrgForm);\r\n"]},"metadata":{},"sourceType":"module"}