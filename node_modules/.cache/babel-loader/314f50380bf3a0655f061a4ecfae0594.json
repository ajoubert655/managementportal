{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\components\\\\UI\\\\Checkbox\\\\Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nconst Checkbox = /*#__PURE__*/React.forwardRef(_c = _s(({\n  indeterminate,\n  ...rest\n}, ref) => {\n  _s();\n\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      ref: resolvedRef,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n_c2 = Checkbox;\nexport default Checkbox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Checkbox$React.forwardRef\");\n$RefreshReg$(_c2, \"Checkbox\");","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/components/UI/Checkbox/Checkbox.js"],"names":["React","Checkbox","forwardRef","indeterminate","rest","ref","defaultRef","useRef","resolvedRef","useEffect","current"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,gBAAGD,KAAK,CAACE,UAAN,SAAiB,CAAC;AAAEC,EAAAA,aAAF;AAAiB,KAAGC;AAApB,CAAD,EAA6BC,GAA7B,KAAqC;AAAA;;AACrE,QAAMC,UAAU,GAAGN,KAAK,CAACO,MAAN,EAAnB;AACA,QAAMC,WAAW,GAAGH,GAAG,IAAIC,UAA3B;AAEAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBD,IAAAA,WAAW,CAACE,OAAZ,CAAoBP,aAApB,GAAoCA,aAApC;AACD,GAFD,EAEG,CAACK,WAAD,EAAcL,aAAd,CAFH;AAIA,sBACE;AAAA,2BACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,GAAG,EAAEK,WAA5B;AAAA,SAA6CJ;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAbgB,kCAAjB;MAAMH,Q;AAeN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Checkbox = React.forwardRef(({ indeterminate, ...rest }, ref) => {\r\n  const defaultRef = React.useRef()\r\n  const resolvedRef = ref || defaultRef\r\n\r\n  React.useEffect(() => {\r\n    resolvedRef.current.indeterminate = indeterminate\r\n  }, [resolvedRef, indeterminate])\r\n\r\n  return (\r\n    <>\r\n      <input type='checkbox' ref={resolvedRef} {...rest} />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}