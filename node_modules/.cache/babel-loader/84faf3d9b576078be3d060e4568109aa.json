{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\containers\\\\TestForms\\\\EditTestForm\\\\EditTestForm.js\";\nimport React, { Component } from 'react';\nimport axios from '../../../axios';\nimport { withRouter } from 'react-router-dom';\nimport classes from './EditTestForm.module.css';\nimport Heading2 from '../../../components/Form Inputs/Heading2/Heading2';\n\nclass TestForm extends Component {\n  constructor() {\n    super();\n\n    this.formValChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let isError = { ...this.state.isError\n      };\n\n      switch (name) {\n        case \"itemType\":\n          isError.itemType = value === \"\" ? \"This field is required\" : \"\";\n          break;\n\n        case \"testOrgId\":\n          isError.testOrgId = value === \"\" ? \"This field is required\" : \"\";\n          break;\n\n        case \"id\":\n          isError.id = value === \"\" ? \"This field is required\" : \"\";\n          break;\n\n        case \"description\":\n          isError.description = value === \"\" ? \"This field is required\" : \"\";\n          break;\n\n        case \"tds\":\n          isError.tds = value === \"\" ? \"This field is required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        isError,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      data: {\n        itemType: \"\",\n        testOrgId: \"\",\n        id: \"\",\n        description: \"\",\n        tds: \"\"\n      },\n      isError: {\n        itemType: \"\",\n        testOrgId: \"\",\n        id: \"\",\n        description: \"\",\n        tds: \"\"\n      }\n    };\n    this.handleTdsChange = this.handleTdsChange.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // parse query from URL string\n    const query = new URLSearchParams(this.props.location.search);\n    const data = {};\n\n    for (let param of query.entries()) {\n      // ['itemType', 'TST']\n      data[param[0]] = param[1];\n    }\n\n    this.setState({\n      data: data\n    });\n  }\n\n  handleDescriptionChange(event) {\n    let data = { ...this.state.data\n    };\n    data.description = event.target.value;\n    this.setState({\n      data\n    });\n  }\n\n  handleTdsChange(event) {\n    let data = { ...this.state.data\n    };\n    data.tds = event.target.value;\n    this.setState({\n      data\n    });\n  }\n\n  handleSubmit(event) {\n    // prevent default submit action\n    event.preventDefault(); // store editable data in new object\n\n    const newData = {\n      description: this.state.data.description,\n      tds: this.state.data.tds\n    }; // store value of id\n\n    const itemToEdit = this.state.data.id; // make api call to update data\n\n    axios.patch(`/tests/${itemToEdit}`, newData) // if request is successful, redirect to manage tests\n    .then(res => {\n      if (res.status === 200) {\n        this.props.history.push('/manage-tests');\n      }\n    }) // else, display error\n    .catch(error => alert(error));\n  }\n\n  render() {\n    const {\n      isError\n    } = this.state;\n    const labelstyle = {\n      color: \"#3cB650\",\n      fontFamily: \"sans-serif\",\n      fontWeight: \"400\",\n      padding: \"20px 75px 20px 0\",\n      position: \"relative\",\n      textRendering: \"optimizeLegibility\",\n      display: \"inline-block\",\n      width: \"100%\"\n    };\n    const textbxstyle = {\n      width: \"70%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      boxSizing: \"border-box\",\n      display: \"inline-block\"\n    };\n    const buttonstyle = {\n      backgroundColor: \"#4CAF50\",\n      border: \"none\",\n      color: \"white\",\n      padding: \"10px 22px\",\n      textAlign: \"center\",\n      textDecoration: \"none\",\n      display: \"inline-block\",\n      fontSize: \"16px\",\n      margin: \"4px 2px\",\n      cursor: \"pointer\",\n      borderRadius: \"30px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsxDEV(Heading2, {\n          children: \"Edit Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.wrapper,\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexChild,\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"itemType\",\n                        style: labelstyle,\n                        children: \"Item Type(TST):\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"itemType\",\n                        name: \"itemType\",\n                        readOnly: true,\n                        value: this.state.data.itemType,\n                        onChange: this.handleItemTypeChange,\n                        onBlur: this.formValChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: isError.itemType\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"testOrgId\",\n                        style: labelstyle,\n                        children: \"Organization ID:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"testOrgId\",\n                        name: \"testOrgId\",\n                        readOnly: true,\n                        value: this.state.data.testOrgId,\n                        onChange: this.handleTestOrgIdChange,\n                        onBlur: this.formValChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: isError.testOrgId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"id\",\n                        style: labelstyle,\n                        children: \"Test ID:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"id\",\n                        name: \"id\",\n                        readOnly: true,\n                        value: this.state.data.id,\n                        onChange: this.handleIdChange,\n                        onBlur: this.formValChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: isError.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"description\",\n                        style: labelstyle,\n                        children: \"Description:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\",\n                        width: \"30%\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"description\",\n                        name: \"description\",\n                        value: this.state.data.description,\n                        onChange: this.handleDescriptionChange,\n                        onBlur: this.formValChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: isError.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell1,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"tds\",\n                        style: labelstyle,\n                        children: \"Test Delivery System:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell2,\n                      style: {\n                        textAlign: \"left\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: textbxstyle,\n                        type: \"text\",\n                        id: \"tds\",\n                        name: \"tds\",\n                        value: this.state.data.tds,\n                        onChange: this.handleTdsChange,\n                        onBlur: this.formValChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: isError.tds\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexChild,\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: classes.cell8,\n                      style: {\n                        textAlign: \"center\",\n                        paddingLeft: \"2%\",\n                        paddingTop: \"2%\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: buttonstyle,\n                        type: \"submit\",\n                        value: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(TestForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/containers/TestForms/EditTestForm/EditTestForm.js"],"names":["React","Component","axios","withRouter","classes","Heading2","TestForm","constructor","formValChange","e","preventDefault","name","value","target","isError","state","itemType","testOrgId","id","description","tds","setState","data","handleTdsChange","bind","handleDescriptionChange","handleSubmit","componentDidMount","query","URLSearchParams","props","location","search","param","entries","event","newData","itemToEdit","patch","then","res","status","history","push","catch","error","alert","render","labelstyle","color","fontFamily","fontWeight","padding","position","textRendering","display","width","textbxstyle","margin","border","borderRadius","boxSizing","buttonstyle","backgroundColor","textAlign","textDecoration","fontSize","cursor","main","wrapper","flexChild","cell1","cell2","handleItemTypeChange","handleTestOrgIdChange","handleIdChange","cell8","paddingLeft","paddingTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from '../../../axios';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport classes from './EditTestForm.module.css';\r\nimport Heading2 from '../../../components/Form Inputs/Heading2/Heading2';\r\n\r\nclass TestForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: {\r\n        itemType: \"\",\r\n        testOrgId: \"\",\r\n        id: \"\",\r\n        description: \"\",\r\n        tds: \"\",\r\n      },\r\n      isError: {\r\n        itemType: \"\",\r\n        testOrgId: \"\",\r\n        id: \"\",\r\n        description: \"\",\r\n        tds: \"\",\r\n      }\r\n    }\r\n   \r\n    this.handleTdsChange = this.handleTdsChange.bind(this);\r\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // parse query from URL string\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    const data = {};\r\n    for (let param of query.entries()) {\r\n      // ['itemType', 'TST']\r\n      data[param[0]] = param[1];\r\n    }\r\n    this.setState({data: data});\r\n  }\r\n\r\n  handleDescriptionChange(event) {\r\n    let data = {...this.state.data};\r\n    data.description = event.target.value\r\n    this.setState({data});\r\n  }\r\n\r\n  handleTdsChange(event) {\r\n    let data = {...this.state.data};\r\n    data.tds = event.target.value\r\n    this.setState({data});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // prevent default submit action\r\n    event.preventDefault();\r\n    // store editable data in new object\r\n    const newData = {\r\n      description: this.state.data.description,\r\n      tds: this.state.data.tds\r\n    };\r\n    // store value of id\r\n    const itemToEdit = this.state.data.id;\r\n\r\n    // make api call to update data\r\n    axios.patch(`/tests/${itemToEdit}`, newData)\r\n         // if request is successful, redirect to manage tests\r\n         .then(res => {\r\n           if (res.status === 200) {\r\n            this.props.history.push('/manage-tests')\r\n           } \r\n         })\r\n         // else, display error\r\n         .catch(error => alert(error))    \r\n  }\r\n\r\n  formValChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let isError = { ...this.state.isError };\r\n\r\n    switch (name) {\r\n        case \"itemType\":\r\n            isError.itemType =\r\n                value === \"\"? \"This field is required\" : \"\" ;\r\n            break;\r\n        case \"testOrgId\":\r\n            isError.testOrgId = value === \"\"? \"This field is required\": \"\";\r\n            break;\r\n        case \"id\":\r\n            isError.id =\r\n                value === \"\"? \"This field is required\": \"\";\r\n            break;\r\n        case \"description\":\r\n            isError.description =\r\n                value === \"\"? \"This field is required\": \"\";\r\n            break;\r\n        case \"tds\":\r\n            isError.tds =\r\n                value === \"\"? \"This field is required\": \"\";\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    this.setState({\r\n        isError,\r\n        [name]: value\r\n    })\r\n  };\r\n\r\n  render () {\r\n    const { isError } = this.state\r\n\r\n    const labelstyle = {\r\n      color: \"#3cB650\",\r\n      fontFamily: \"sans-serif\",\r\n      fontWeight: \"400\",\r\n      padding: \"20px 75px 20px 0\",\r\n      position: \"relative\",\r\n      textRendering: \"optimizeLegibility\",\r\n      display: \"inline-block\",\r\n      width: \"100%\"\r\n      };\r\n  \r\n    const textbxstyle = {\r\n      width: \"70%\",\r\n      padding: \"12px 20px\",\r\n      margin: \"8px 0\",\r\n      border: \"1px solid #ccc\",\r\n      borderRadius: \"4px\",\r\n      boxSizing: \"border-box\",\r\n      display: \"inline-block\"\r\n    }; \r\n\r\n    const buttonstyle = {\r\n      backgroundColor: \"#4CAF50\",\r\n      border: \"none\",\r\n      color: \"white\",\r\n      padding: \"10px 22px\",\r\n      textAlign: \"center\",\r\n      textDecoration: \"none\",\r\n      display: \"inline-block\",\r\n      fontSize: \"16px\",\r\n      margin: \"4px 2px\",\r\n      cursor: \"pointer\",\r\n      borderRadius:\"30px\",\r\n    };\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <main className={classes.main}>\r\n          <Heading2>Edit Test</Heading2>\r\n          <form className={classes.wrapper} onSubmit={this.handleSubmit}>\r\n            <fieldset>\r\n              <div className={classes.flexChild}>\r\n                <br/>\r\n                <table>\r\n                  <tbody>\r\n                    <tr >\r\n                      <td \r\n                        className={classes.cell1}  \r\n                        style={{textAlign:\"right\"}}\r\n                      >\r\n                        <label \r\n                          htmlFor=\"itemType\" \r\n                          style={labelstyle}\r\n                        >Item Type(TST):\r\n                        </label>\r\n                      </td>\r\n                      <td \r\n                        className={classes.cell2} \r\n                        style={{textAlign:\"left\", width:\"30%\"}}\r\n                      >\r\n                        <input\r\n                          style={textbxstyle}                        \r\n                          type=\"text\" \r\n                          id=\"itemType\" \r\n                          name=\"itemType\"\r\n                          readOnly\r\n                          value={this.state.data.itemType} \r\n                          onChange={this.handleItemTypeChange}\r\n                          onBlur={this.formValChange} \r\n                        />\r\n                        <br/>\r\n                        <span \r\n                          style={{color:\"red\"}}>\r\n                          {isError.itemType}\r\n                        </span>\r\n                      </td>\r\n                    </tr>               \r\n                    <tr>\r\n                      <td \r\n                        className={classes.cell1} \r\n                        style={{textAlign:\"right\"}}\r\n                      >\r\n                        <label \r\n                          htmlFor=\"testOrgId\" \r\n                          style={labelstyle}\r\n                        >Organization ID:\r\n                        </label>\r\n                      </td>\r\n                      <td \r\n                        className={classes.cell2} \r\n                        style={{textAlign:\"left\"}}\r\n                      >\r\n                        <input \r\n                          style={textbxstyle} \r\n                          type=\"text\" \r\n                          id=\"testOrgId\" \r\n                          name=\"testOrgId\"\r\n                          readOnly\r\n                          value={this.state.data.testOrgId}\r\n                          onChange={this.handleTestOrgIdChange}\r\n                          onBlur={this.formValChange} \r\n                        />\r\n                        <br/>\r\n                        <span \r\n                          style={{color:\"red\"}}>\r\n                          {isError.testOrgId}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td \r\n                        className={classes.cell1} \r\n                        style={{textAlign:\"right\"}}\r\n                        >\r\n                        <label \r\n                          htmlFor=\"id\" \r\n                          style={labelstyle}\r\n                        >Test ID:\r\n                        </label>\r\n                      </td>\r\n                      <td \r\n                        className={classes.cell2} \r\n                        style={{textAlign:\"left\"}}\r\n                      >\r\n                        <input\r\n                          style={textbxstyle}  \r\n                          type=\"text\" \r\n                          id=\"id\" \r\n                          name=\"id\"\r\n                          readOnly\r\n                          value={this.state.data.id} \r\n                          onChange={this.handleIdChange}\r\n                          onBlur={this.formValChange} \r\n                        />\r\n                        <br/>\r\n                        <span \r\n                          style={{color:\"red\"}}>\r\n                          {isError.id}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr >\r\n                      <td \r\n                        className={classes.cell1}  \r\n                        style={{textAlign:\"right\"}}\r\n                      >\r\n                        <label \r\n                          htmlFor=\"description\" \r\n                          style={labelstyle}\r\n                        >Description:\r\n                        </label>\r\n                      </td>\r\n                      <td \r\n                        className={classes.cell2} \r\n                        style={{textAlign:\"left\", width:\"30%\"}}\r\n                      >\r\n                        <input\r\n                          style={textbxstyle} \r\n                          type=\"text\" \r\n                          id=\"description\" \r\n                          name=\"description\"\r\n                          value={this.state.data.description} \r\n                          onChange={this.handleDescriptionChange}\r\n                          onBlur={this.formValChange} \r\n                        />\r\n                        <br/>\r\n                        <span \r\n                          style={{color:\"red\"}}>\r\n                          {isError.description}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td \r\n                        className={classes.cell1} \r\n                        style={{textAlign:\"right\"}}\r\n                      >\r\n                        <label \r\n                          htmlFor=\"tds\" \r\n                          style={labelstyle}\r\n                        >Test Delivery System:\r\n                        </label>\r\n                      </td>\r\n                      <td \r\n                        className={classes.cell2} \r\n                        style={{textAlign:\"left\"}}\r\n                      >\r\n                        <input\r\n                          style={textbxstyle} \r\n                          type=\"text\" \r\n                          id=\"tds\" \r\n                          name=\"tds\"\r\n                          value={this.state.data.tds}\r\n                          onChange={this.handleTdsChange}\r\n                          onBlur={this.formValChange}\r\n                        />\r\n                        <br/>\r\n                        <span \r\n                          style={{color:\"red\"}}>\r\n                          {isError.tds}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table> \r\n              </div>\r\n              <div className={classes.flexChild}>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td \r\n                        className={classes.cell8} \r\n                        style={{textAlign:\"center\", paddingLeft: \"2%\", paddingTop:\"2%\"}}\r\n                      >\r\n                        <input\r\n                          style={buttonstyle}\r\n                          type=\"submit\"\r\n                          value=\"Submit\"\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </fieldset>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TestForm);"]},"metadata":{},"sourceType":"module"}