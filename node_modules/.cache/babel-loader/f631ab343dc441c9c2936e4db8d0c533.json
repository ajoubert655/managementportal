{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljou\\\\Documents\\\\Bitbucket\\\\management-portal\\\\src\\\\containers\\\\ResetPasswordVerification\\\\ResetPasswordVerification.js\";\nimport React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from 'react-router-dom';\nimport classes from './ResetPasswordVerification.module.css';\n\nclass ResetPasswordVerification extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let verificationCodeField = document.getElementById('verificationCode');\n      let emailField = document.getElementById('email');\n      let newPasswordField = document.getElementById('newPassword');\n      let confirmNewPasswordField = document.getElementById('confirmNewPassword');\n      let regEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      let isValid = regEx.test(emailField.value);\n\n      if (verificationCodeField.value === '' || emailField.value === '' || newPasswordField.value === '' || confirmNewPasswordField.value === '') {\n        document.getElementById('errorMessage').innerHTML = 'All fields are required';\n      } else if (!isValid) {\n        document.getElementById(\"errorMessage\").innerHTML = 'Please enter a valid email address';\n      } else if (newPasswordField.value !== confirmNewPasswordField.value) {\n        document.getElementById(\"errorMessage\").innerHTML = 'Password fields do not match';\n      } else {\n        document.getElementById(\"errorMessage\").innerHTML = ''; // cognito integration\n\n        try {\n          await Auth.forgotPasswordSubmit(this.state.email, this.state.verificationCode, this.state.newPassword);\n          this.props.history.push('/change-password-confirmation');\n        } catch (error) {\n          alert(error);\n        }\n      }\n    };\n\n    this.state = {\n      verificationCode: '',\n      email: '',\n      newPassword: '',\n      confirmNewPassword: ''\n    };\n    this.handleVerificationCodeChange = this.handleVerificationCodeChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNewPasswordChange = this.handleNewPasswordChange.bind(this);\n    this.handleConfirmNewPasswordChange = this.handleConfirmNewPasswordChange.bind(this);\n  }\n\n  handleVerificationCodeChange(event) {\n    this.setState({\n      verificationCode: event.target.value\n    });\n  }\n\n  handleEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleNewPasswordChange(event) {\n    this.setState({\n      newPassword: event.target.value\n    });\n  }\n\n  handleConfirmNewPasswordChange(event) {\n    this.setState({\n      confirmNewPassword: event.target.value\n    });\n  } // perform validation and submit request\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.header,\n          children: \"Set new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter the verification code sent to your email address below, your email address, and a new password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"verificationCode\",\n            className: classes.inputField,\n            name: \"verificationCode\",\n            placeholder: \"Enter verification code\",\n            onChange: this.handleVerificationCodeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            className: classes.inputField,\n            name: \"email\",\n            placeholder: \"Enter email\",\n            onChange: this.handleEmailChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            className: classes.inputField,\n            name: \"newPassword\",\n            placeholder: \"Enter new password\",\n            onChange: this.handleNewPasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmNewPassword\",\n            className: classes.inputField,\n            name: \"confirmNewPassword\",\n            placeholder: \"Confirm new password\",\n            onChange: this.handleConfirmNewPasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"errorMessage\",\n            className: classes.errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            className: classes.button\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(ResetPasswordVerification);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/aljou/Documents/Bitbucket/management-portal/src/containers/ResetPasswordVerification/ResetPasswordVerification.js"],"names":["React","Component","Auth","withRouter","classes","ResetPasswordVerification","constructor","handleSubmit","event","preventDefault","verificationCodeField","document","getElementById","emailField","newPasswordField","confirmNewPasswordField","regEx","isValid","test","value","innerHTML","forgotPasswordSubmit","state","email","verificationCode","newPassword","props","history","push","error","alert","confirmNewPassword","handleVerificationCodeChange","bind","handleEmailChange","handleNewPasswordChange","handleConfirmNewPasswordChange","setState","target","render","main","wrapper","header","inputField","errorMessage","button"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Auth} from 'aws-amplify';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport classes from './ResetPasswordVerification.module.css';\r\n\r\nclass ResetPasswordVerification extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      verificationCode: '',\r\n      email: '',\r\n      newPassword: '',\r\n      confirmNewPassword: '',\r\n    }\r\n\r\n    this.handleVerificationCodeChange = this.handleVerificationCodeChange.bind(this);\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handleNewPasswordChange = this.handleNewPasswordChange.bind(this);\r\n    this.handleConfirmNewPasswordChange = this.handleConfirmNewPasswordChange.bind(this);\r\n  }\r\n\r\n  handleVerificationCodeChange(event) {\r\n    this.setState({verificationCode: event.target.value});\r\n  }\r\n\r\n  handleEmailChange(event) {\r\n    this.setState({email: event.target.value});\r\n  }\r\n\r\n  handleNewPasswordChange(event) {\r\n    this.setState({newPassword: event.target.value})\r\n  }\r\n\r\n  handleConfirmNewPasswordChange(event) {\r\n    this.setState({confirmNewPassword: event.target.value});\r\n  }\r\n\r\n    // perform validation and submit request\r\n    handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      let verificationCodeField = document.getElementById('verificationCode');\r\n      let emailField = document.getElementById('email');\r\n      let newPasswordField = document.getElementById('newPassword');\r\n      let confirmNewPasswordField = document.getElementById('confirmNewPassword');\r\n      \r\n      let regEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      let isValid= regEx.test(emailField.value);\r\n      \r\n      if (verificationCodeField.value === '' || emailField.value === '' || newPasswordField.value === '' || confirmNewPasswordField.value === ''){\r\n        document.getElementById('errorMessage').innerHTML='All fields are required'\r\n      } else if (!isValid) {\r\n        document.getElementById(\"errorMessage\").innerHTML='Please enter a valid email address'\r\n      } else if (newPasswordField.value !== confirmNewPasswordField.value) {\r\n        document.getElementById(\"errorMessage\").innerHTML='Password fields do not match'\r\n      } else {\r\n        document.getElementById(\"errorMessage\").innerHTML=''\r\n        \r\n        // cognito integration\r\n        try {\r\n          await Auth.forgotPasswordSubmit(\r\n            this.state.email,\r\n            this.state.verificationCode,\r\n            this.state.newPassword\r\n          );\r\n          this.props.history.push('/change-password-confirmation');\r\n        } catch(error) {\r\n          alert(error)\r\n        }\r\n      }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <main className={classes.main}>\r\n      <div className={classes.wrapper}>\r\n        <h3 className={classes.header}>Set new password</h3>\r\n        <p>Please enter the verification code sent to your email address below, your email address, and a new password.</p>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type='text'\r\n            id='verificationCode'\r\n            className={classes.inputField}\r\n            name='verificationCode'\r\n            placeholder='Enter verification code'\r\n            onChange={this.handleVerificationCodeChange}\r\n          />\r\n          <br />\r\n\r\n          <input\r\n            type='text'\r\n            id='email'\r\n            className={classes.inputField}\r\n            name='email'\r\n            placeholder='Enter email'\r\n            onChange={this.handleEmailChange}\r\n          />\r\n          <br />\r\n\r\n          <input\r\n            type='password'\r\n            id='newPassword'\r\n            className={classes.inputField}\r\n            name='newPassword'\r\n            placeholder='Enter new password'\r\n            onChange={this.handleNewPasswordChange}\r\n          />\r\n          <br />\r\n\r\n          <input\r\n            type='password'\r\n            id='confirmNewPassword'\r\n            className={classes.inputField}\r\n            name='confirmNewPassword'\r\n            placeholder='Confirm new password'\r\n            onChange={this.handleConfirmNewPasswordChange}\r\n          />\r\n          <br />\r\n\r\n          <span\r\n            id='errorMessage'\r\n            className={classes.errorMessage}\r\n          />\r\n          <br />\r\n\r\n          <input\r\n            type='submit'\r\n            value='Submit'\r\n            className={classes.button}\r\n          >\r\n          </input>\r\n        </form>\r\n      </div>\r\n    </main>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(ResetPasswordVerification);"]},"metadata":{},"sourceType":"module"}